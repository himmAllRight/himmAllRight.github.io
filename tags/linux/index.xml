<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Linux on λ ryan. himmelwright. net</title>
    <link>http://ryan.himmelwright.net/tags/linux/</link>
    <description>Recent content in Linux on λ ryan. himmelwright. net</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 30 Apr 2020 00:00:00 +0000</lastBuildDate>
    
        <atom:link href="http://ryan.himmelwright.net/tags/linux/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Ansible Quickstart</title>
      <link>http://ryan.himmelwright.net/post/ansible-quickstart/</link>
      <pubDate>Thu, 30 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>http://ryan.himmelwright.net/post/ansible-quickstart/</guid>
      <description>&lt;p&gt;A &lt;em&gt;long&lt;/em&gt; time ago, I briefly explained how to configure
&lt;a href=&#34;https://www.ansible.com&#34;&gt;Ansible&lt;/a&gt;, in &lt;a href=&#34;../../post/ansible-on-pi-cluster/&#34;&gt;a post about building a raspberry pi
cluster&lt;/a&gt;. All in all&amp;hellip; it was by no means a
great introduction to the basics of ansible.&lt;/p&gt;

&lt;p&gt;A month ago, I drafted a progression of examples with notes, to teach a
co-worker the &lt;em&gt;basics&lt;/em&gt; of writing and using ansible roles and playbooks. After
reading through them, I realized it wouldn&amp;rsquo;t take much to turn
them into an &lt;em&gt;actual&lt;/em&gt; Ansible quickstart post. So here we are.&lt;/p&gt;

&lt;p&gt;I am not an Ansible genius, and reading this will not make you one either. However,
the goal of this post is to provide enough understating to get started with writing
some ansible playbooks.&lt;/p&gt;

&lt;h2 id=&#34;installing&#34;&gt;Installing&lt;/h2&gt;

&lt;p&gt;Lets start by installing ansible. It should be in most distro&amp;rsquo;s main repos these
days:&lt;/p&gt;

&lt;p&gt;Fedora Linux:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo dnf install ansible
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;MacOS:&lt;/p&gt;

&lt;p&gt;&amp;hellip; I have no idea. I usually always &lt;code&gt;ssh&lt;/code&gt; to Linux boxes from my macbook.&lt;/p&gt;

&lt;p&gt;I think it can be installed with &lt;code&gt;pip&lt;/code&gt; though, so possibly:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;pip3 install ansible
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;remote-node-requirements&#34;&gt;Remote Node Requirements&lt;/h3&gt;

&lt;p&gt;In order for ansible to connect to a remote node, that node usually needs 3
things:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;1) Python installed&lt;/li&gt;
&lt;li&gt;2) password-less sudo permissions&lt;/li&gt;
&lt;li&gt;3) &lt;code&gt;ssh&lt;/code&gt; keys configured (if running against remote hosts. Not needed if
 just running playbooks against &lt;code&gt;localhost&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;python&#34;&gt;python&lt;/h4&gt;

&lt;p&gt;Python should already be installed on most systems. If not, check your package
manager, or try searching the documentation on &lt;a href=&#34;https://python.org&#34;&gt;python.org&lt;/a&gt;
to learn the best install method for your system.&lt;/p&gt;

&lt;h4 id=&#34;passwordless-sudo&#34;&gt;Passwordless &lt;code&gt;sudo&lt;/code&gt;&lt;/h4&gt;

&lt;p&gt;This will allow a user to run &lt;code&gt;sudo&lt;/code&gt; commands, without having to type in a
password each time. I shouldn&amp;rsquo;t have to say this, but&amp;hellip; &lt;em&gt;please use with care!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Granting password-less sudo permissions are most easily accomplished with
&lt;code&gt;visudo&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;sudo visudo&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This will open up the &lt;code&gt;sudo&lt;/code&gt; settings in your &lt;code&gt;$EDITOR&lt;/code&gt;. Once opened, find the
following line and uncomment it (it&amp;rsquo;s usually near the bottom of the file).&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;## Same thing without a password&lt;/span&gt;
%wheel        ALL&lt;span style=&#34;color:#f92672&#34;&gt;=(&lt;/span&gt;ALL&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;       NOPASSWD: ALL&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id=&#34;ssh&#34;&gt;ssh&lt;/h4&gt;

&lt;p&gt;Lastly, exchange ssh-keys with the remote node. This will allow ansible to ssh
into the node without having to deal with those pesky passwords. The easiest way
to exchange keys is using the &lt;code&gt;ssh-copy-id&lt;/code&gt; command, as such:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;ssh-copy-id username@hostname&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;ansible-basics&#34;&gt;Ansible Basics&lt;/h2&gt;

&lt;h4 id=&#34;hosts-file&#34;&gt;Hosts File&lt;/h4&gt;

&lt;p&gt;A host inventory file is a yaml file that defines hosts ansible can connect to.
The default file is located at &lt;code&gt;/etc/ansible/hosts&lt;/code&gt;. An alternative inventory
file may be provided using the &lt;code&gt;-i&lt;/code&gt; flag.&lt;/p&gt;

&lt;p&gt;Example file:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;[VMs]
&lt;span style=&#34;color:#75715e&#34;&gt;## Server VMs&lt;/span&gt;
&lt;span style=&#34;color:#ae81ff&#34;&gt;192.168.10.50&lt;/span&gt;
&lt;span style=&#34;color:#ae81ff&#34;&gt;192.168.10.71&lt;/span&gt;
&lt;span style=&#34;color:#ae81ff&#34;&gt;192.168.10.118&lt;/span&gt;

[Hosts]
&lt;span style=&#34;color:#75715e&#34;&gt;## Hosts&lt;/span&gt;
&lt;span style=&#34;color:#ae81ff&#34;&gt;192.168.10.12&lt;/span&gt;

[cluster]
&lt;span style=&#34;color:#ae81ff&#34;&gt;192.168.112.205&lt;/span&gt;
&lt;span style=&#34;color:#ae81ff&#34;&gt;192.168.112.206&lt;/span&gt;
&lt;span style=&#34;color:#ae81ff&#34;&gt;192.168.112.207&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id=&#34;modules&#34;&gt;Modules&lt;/h4&gt;

&lt;p&gt;Modules are premade functionality used in ansible that can be imported into a
playbook. Simply, they &lt;em&gt;do&lt;/em&gt; what you want &lt;em&gt;done&lt;/em&gt;. Some examples are &lt;code&gt;ping&lt;/code&gt;,
&lt;code&gt;dnf&lt;/code&gt;, &lt;code&gt;apt&lt;/code&gt;, &lt;code&gt;redhat_subscription&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Feel free to search the &lt;a href=&#34;https://docs.ansible.com&#34;&gt;ansible documentation&lt;/a&gt; to
learn more.&lt;/p&gt;

&lt;h4 id=&#34;ad-hoc-ansible-commands&#34;&gt;Ad-hoc Ansible Commands&lt;/h4&gt;

&lt;p&gt;Simple and straight ansible executions can be called with the &lt;code&gt;ansible&lt;/code&gt; command.
Ad-hoc commands are usually called with a module, using the &lt;code&gt;-m&lt;/code&gt; flag. For
example, &lt;code&gt;ping&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;➜  ansible -m ping localhost

localhost | SUCCESS &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;changed&amp;#34;&lt;/span&gt;: false,
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ping&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;pong&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For a more complicated example, lets use the &lt;code&gt;dnf&lt;/code&gt; module to install &lt;code&gt;htop&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;ansible -m dnf -a &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;name=htop state=latest&amp;#34;&lt;/span&gt; localhost --become&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This module requires some parameters to be defined. We are able to supply
them using the &lt;code&gt;-a&lt;/code&gt; flag, followed by a string of the key/values pairs.&lt;/p&gt;

&lt;p&gt;Also, because the &lt;code&gt;dnf&lt;/code&gt; module requires root permissions to function, we supply
the &lt;code&gt;--become&lt;/code&gt; flag, to become &lt;code&gt;root&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Note, if I want to run this against another machine (beyond &lt;code&gt;localhost&lt;/code&gt;), it
has to be defined in whatever inventory file we are using.&lt;/p&gt;

&lt;p&gt;So, if I define an inventory file (&lt;code&gt;./hosts.yaml&lt;/code&gt;) containing my desktop
computer:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;[charmelon]
&lt;span style=&#34;color:#ae81ff&#34;&gt;192.168.1.5&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I can install &lt;code&gt;htop&lt;/code&gt; on &lt;em&gt;my desktop&lt;/em&gt;, using:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;ansible -i ./hosts -m dnf -a &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;name=htop state=latest&amp;#34;&lt;/span&gt; charmeleon --become&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&amp;hellip; and it works!&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;192.168.1.5 | CHANGED =&amp;gt; {
    &amp;quot;ansible_facts&amp;quot;: {
        &amp;quot;discovered_interpreter_python&amp;quot;: &amp;quot;/usr/bin/python&amp;quot;
    },
    &amp;quot;changed&amp;quot;: true,
    &amp;quot;msg&amp;quot;: &amp;quot;&amp;quot;,
    &amp;quot;rc&amp;quot;: 0,
    &amp;quot;results&amp;quot;: [
        &amp;quot;Installed: htop-2.2.0-8.fc32.x86_64&amp;quot;
    ]
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;playbooks&#34;&gt;Playbooks&lt;/h3&gt;

&lt;p&gt;As you can imagine, doing everything from the command line isn&amp;rsquo;t always
helpful, or easily reproducible. That&amp;rsquo;s what playbooks are for. In a nutshell,
playbooks are ansible scripts. They are a yaml file which ansible runs, instead
of running a serries of ad-hoc commands.&lt;/p&gt;

&lt;p&gt;To demonstrate, lets convert the &lt;code&gt;dnf&lt;/code&gt; command from above, into a simple
playbook named &lt;code&gt;install-htop.yaml&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;---
- &lt;span style=&#34;color:#66d9ef&#34;&gt;hosts&lt;/span&gt;: charmeleon
  &lt;span style=&#34;color:#66d9ef&#34;&gt;become&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;

  &lt;span style=&#34;color:#66d9ef&#34;&gt;tasks&lt;/span&gt;:
    - &lt;span style=&#34;color:#66d9ef&#34;&gt;name&lt;/span&gt;: Install Htop
      &lt;span style=&#34;color:#66d9ef&#34;&gt;dnf&lt;/span&gt;:
        &lt;span style=&#34;color:#66d9ef&#34;&gt;name&lt;/span&gt;: htop
        &lt;span style=&#34;color:#66d9ef&#34;&gt;state&lt;/span&gt;: latest&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Being a &lt;code&gt;yaml&lt;/code&gt; file, the first line starts with &lt;code&gt;---&lt;/code&gt;. Next, we define some
meta information for the entire playbook. For example, this is were we put the
&lt;code&gt;--become&lt;/code&gt; flag, by turning it into &lt;code&gt;become: true&lt;/code&gt;. This is also where we
define what hosts the playbook will run against. If I&amp;rsquo;m providing a hosts file,
I can alternatively use &lt;code&gt;hosts: all&lt;/code&gt; to run against &lt;em&gt;all&lt;/em&gt; hosts defined in the
inventory file.&lt;/p&gt;

&lt;h4 id=&#34;local-connections&#34;&gt;local connections&lt;/h4&gt;

&lt;p&gt;If the playbook is to run only locally, the connection type can be set to
&lt;code&gt;local&lt;/code&gt; (by default, it is set to &lt;code&gt;ssh&lt;/code&gt;.)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  hosts: 127.0.0.1
  connection: local
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;tasks&#34;&gt;tasks&lt;/h4&gt;

&lt;p&gt;Below the header information, we can define a set of tasks to run. In the
&lt;code&gt;tasks&lt;/code&gt; section, a block is defined for each task, usually by calling a module
with parameters. It is best practice to describe each task using &lt;code&gt;name:&lt;/code&gt;. This
will make it easier to trace the logs.&lt;/p&gt;

&lt;p&gt;For example, lets add the&lt;code&gt;ping&lt;/code&gt; module to the playbook so we have more than one
task&amp;hellip;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;---
- &lt;span style=&#34;color:#66d9ef&#34;&gt;hosts&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;127.0.0.1&lt;/span&gt;
  &lt;span style=&#34;color:#66d9ef&#34;&gt;connection&lt;/span&gt;: local
  &lt;span style=&#34;color:#66d9ef&#34;&gt;become&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;

  &lt;span style=&#34;color:#66d9ef&#34;&gt;tasks&lt;/span&gt;:
	- &lt;span style=&#34;color:#66d9ef&#34;&gt;name&lt;/span&gt;: Ping host first...
	  &lt;span style=&#34;color:#66d9ef&#34;&gt;ping&lt;/span&gt;:

    - &lt;span style=&#34;color:#66d9ef&#34;&gt;name&lt;/span&gt;: Install Htop
      &lt;span style=&#34;color:#66d9ef&#34;&gt;dnf&lt;/span&gt;:
        &lt;span style=&#34;color:#66d9ef&#34;&gt;name&lt;/span&gt;: htop
        &lt;span style=&#34;color:#66d9ef&#34;&gt;state&lt;/span&gt;: latest&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now the playbook will run both tasks, using &lt;code&gt;name&lt;/code&gt; as the header for the output
of each one:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;➜  /tmp ansible-playbook install-htop.yaml

PLAY &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;all&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; ****************************************

TASK &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;Gathering Facts&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; ****************************************
ok: &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;192.168.1.5&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;

TASK &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;Ping host first...&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; ****************************************
ok: &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;192.168.1.5&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;

TASK &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;Install Htop&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; ****************************************
ok: &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;192.168.1.5&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;

PLAY RECAP ****************************************
192.168.1.5                : ok&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;    changed&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;    unreachable&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;    failed&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;    skipped&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;    rescued&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;    ignored&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h5 id=&#34;variables&#34;&gt;Variables&lt;/h5&gt;

&lt;p&gt;We can define sections other than &lt;code&gt;tasks&lt;/code&gt;.  A useful section to add is &lt;code&gt;vars:&lt;/code&gt;,
which defines variables for use in the playbook. To illustrate, lets replace
the hard-coded &lt;code&gt;htop&lt;/code&gt; in the &lt;code&gt;dnf&lt;/code&gt; task, to a variable named &lt;code&gt;package&lt;/code&gt;. We can
even use the &lt;code&gt;package&lt;/code&gt; variable in the &lt;code&gt;name&lt;/code&gt; string, to dynamically change the
output in the log:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;---
- &lt;span style=&#34;color:#66d9ef&#34;&gt;hosts&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;127.0.0.1&lt;/span&gt;
  &lt;span style=&#34;color:#66d9ef&#34;&gt;connection&lt;/span&gt;: local
  &lt;span style=&#34;color:#66d9ef&#34;&gt;become&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;

  &lt;span style=&#34;color:#66d9ef&#34;&gt;vars&lt;/span&gt;:
    &lt;span style=&#34;color:#66d9ef&#34;&gt;package&lt;/span&gt;: htop

  &lt;span style=&#34;color:#66d9ef&#34;&gt;tasks&lt;/span&gt;:
    - &lt;span style=&#34;color:#66d9ef&#34;&gt;name&lt;/span&gt;: Ping host first...
      &lt;span style=&#34;color:#66d9ef&#34;&gt;ping&lt;/span&gt;:

    - &lt;span style=&#34;color:#66d9ef&#34;&gt;name&lt;/span&gt;: Install {{ package }}
      &lt;span style=&#34;color:#66d9ef&#34;&gt;dnf&lt;/span&gt;:
        &lt;span style=&#34;color:#66d9ef&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;{{ package }}&amp;#34;&lt;/span&gt;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;state&lt;/span&gt;: latest&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And the output:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;➜  ansible-playbook install-htop.yaml

PLAY &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;127.0.0.1&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; ****************************************

TASK &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;Gathering Facts&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; ****************************************
ok: &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;127.0.0.1&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;

TASK &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;Ping host first...&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; ****************************************
ok: &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;127.0.0.1&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;

TASK &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;Install htop&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; ****************************************
changed: &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;127.0.0.1&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;

PLAY RECAP ****************************************
127.0.0.1                  : ok&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;    changed&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;    unreachable&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;    failed&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;    skipped&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;    rescued&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;    ignored&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;One great feature of variables is that they can be swapped out when calling the
playbook. The &lt;code&gt;-e&lt;/code&gt; flag allows you to provide an alternative value for a
variable.  For example, lets say we want to install &lt;code&gt;nano&lt;/code&gt; instead of &lt;code&gt;htop&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;➜  ansible-playbook install-htop.yaml -e package&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;nano

PLAY &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;127.0.0.1&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; ****************************************

TASK &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;Gathering Facts&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; ****************************************
ok: &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;127.0.0.1&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;

TASK &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;Ping host first...&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; ****************************************
ok: &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;127.0.0.1&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;

TASK &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;Install nano&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; ****************************************
changed: &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;127.0.0.1&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;

PLAY RECAP ****************************************
127.0.0.1                  : ok&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;    changed&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;    unreachable&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;    failed&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;    skipped&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;    rescued&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;    ignored&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note how the task name has changed accordingly in the output. So Fancy!&lt;/p&gt;

&lt;h2 id=&#34;creating-some-structure&#34;&gt;Creating some structure&lt;/h2&gt;

&lt;h3 id=&#34;roles&#34;&gt;Roles&lt;/h3&gt;

&lt;p&gt;As nice as scripts are, they don&amp;rsquo;t scale well. To combat impending chaos, we
break functionality down into &lt;code&gt;roles&lt;/code&gt;. Roles are collections of tasks,
variables, and other resources that can be mixed and matched in playbooks.&lt;/p&gt;

&lt;p&gt;A role is defined by a directory of it&amp;rsquo;s name, and usually contains a &lt;code&gt;tasks&lt;/code&gt;
sub-directory, where all of it&amp;rsquo;s tasks are defined. Each sub-directory requires
a &lt;code&gt;main.yaml&lt;/code&gt; to be the root file for that directory. So, at the vary least, a
tasks directory will have a file named &lt;code&gt;tasks/main.yaml&lt;/code&gt; which contains the
role&amp;rsquo;s tasks.&lt;/p&gt;

&lt;p&gt;If there are a BUNCH of tasks defined, they can be broken out into seperate
files, and included in the &lt;code&gt;main.yaml&lt;/code&gt; task file.&lt;/p&gt;

&lt;p&gt;In addition to &lt;code&gt;tasks&lt;/code&gt;, a role might include a &lt;code&gt;defaults&lt;/code&gt; or &lt;code&gt;vars&lt;/code&gt; sub
directory. These are again structured with a &lt;code&gt;main.yaml&lt;/code&gt; file that may, or may
not, import other files, depending on the size and organization of the role.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;## Example structure of a &amp;#39;subscriptions&amp;#39; role&lt;/span&gt;
roles
└── subscriptions
    ├── defaults
    │   └── main.yaml
    ├── README.md
    └── tasks
        └── main.yaml&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It is important to note that these yaml files contain &lt;em&gt;just&lt;/em&gt; their item. For
example, the task files contain just tasks. This is because when a role is
imported into a playbook, its items are simply inserted accordingly.&lt;/p&gt;

&lt;h3 id=&#34;ansible-cfg&#34;&gt;ansible.cfg&lt;/h3&gt;

&lt;p&gt;Before we start writing some roles, it is important to know that if you are using
roles, you need to tell &lt;code&gt;ansible&lt;/code&gt; where to find them. The easiest way to do
this is to define an &lt;code&gt;ansible.cfg&lt;/code&gt; file in the directory you will run
&lt;code&gt;ansible-playbook&lt;/code&gt; from. For example:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[defaults]
roles_path = roles/
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;our-role&#34;&gt;Our role&lt;/h4&gt;

&lt;p&gt;As it stands, our example playbook is a &lt;em&gt;massive 13 lines long&lt;/em&gt;! I can hardly
open the file without crashing my text editor. So, lets try to break up the
functionality into roles.&lt;/p&gt;

&lt;p&gt;First, lets make the directories:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;mkdir -p roles/install-htop/&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;tasks,defaults&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Next, we can add our variables to a default file,
&lt;code&gt;roles/install-htop/defaults/main.yaml&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;---
&lt;span style=&#34;color:#66d9ef&#34;&gt;package&lt;/span&gt;: htop&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;With the &lt;code&gt;package&lt;/code&gt; variable set, lets create the tasks. To demonstrate
including other files in the &lt;code&gt;main.yaml&lt;/code&gt;, I&amp;rsquo;m going to be overly-complicated and
extract our &lt;code&gt;ping&lt;/code&gt; task into its own file, and then include it in the &lt;code&gt;main.yaml&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;So first, &lt;code&gt;roles/install-htop/tasks/ping.yaml&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;---
- &lt;span style=&#34;color:#66d9ef&#34;&gt;name&lt;/span&gt;: Ping host first...
  ping:&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And then, &lt;code&gt;roles/install-htop/tasks/main.yaml&lt;/code&gt;, which will also include our
&lt;code&gt;dnf&lt;/code&gt; install task&amp;hellip;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;---
- &lt;span style=&#34;color:#66d9ef&#34;&gt;include_tasks&lt;/span&gt;: ping.yaml

- &lt;span style=&#34;color:#66d9ef&#34;&gt;name&lt;/span&gt;: Install {{ package }}
  &lt;span style=&#34;color:#66d9ef&#34;&gt;dnf&lt;/span&gt;:
    &lt;span style=&#34;color:#66d9ef&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;{{ package }}&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;state&lt;/span&gt;: latest&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Congrats, we have an &lt;code&gt;install-htop&lt;/code&gt; role defined!&lt;/p&gt;

&lt;h3 id=&#34;including-roles-in-playbooks&#34;&gt;Including roles in playbooks&lt;/h3&gt;

&lt;p&gt;Just as we included &lt;code&gt;vars&lt;/code&gt; and &lt;code&gt;tasks&lt;/code&gt; in the playbook, if we already have
tasks and vars defined in a &lt;em&gt;role&lt;/em&gt;, we can instead include that &lt;em&gt;role&lt;/em&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;---
- &lt;span style=&#34;color:#66d9ef&#34;&gt;hosts&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;127.0.0.1&lt;/span&gt;
  &lt;span style=&#34;color:#66d9ef&#34;&gt;connection&lt;/span&gt;: local
  &lt;span style=&#34;color:#66d9ef&#34;&gt;become&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;

  &lt;span style=&#34;color:#66d9ef&#34;&gt;roles&lt;/span&gt;:
    - install-htop&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Easy. Let&amp;rsquo;s run it:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;➜  ansible-playbook install-htop.yaml
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;WARNING&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;: Ansible is being run in a world writable directory &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;/tmp&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;, ignoring it as an ansible.cfg source. For more information see
https://docs.ansible.com/ansible/devel/reference_appendices/config.html#cfg-in-world-writable-dir

PLAY &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;127.0.0.1&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; ****************************************

TASK &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;Gathering Facts&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; ****************************************
ok: &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;127.0.0.1&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;

TASK &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;install-htop : include_tasks&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; ****************************************
included: /tmp/roles/install-htop/tasks/ping.yaml &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; 127.0.0.1

TASK &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;install-htop : Ping host first...&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; ****************************************
ok: &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;127.0.0.1&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;

TASK &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;install-htop : Install htop&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; ****************************************
ok: &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;127.0.0.1&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;

PLAY RECAP ****************************************
127.0.0.1                  : ok&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;    changed&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;    unreachable&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;    failed&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;    skipped&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;    rescued&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;    ignored&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;and it still works :)&lt;/p&gt;

&lt;h1 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h1&gt;

&lt;p&gt;While only the tip of the iceburg, I think we have covered enough basics
to make &lt;em&gt;something&lt;/em&gt; useful. Using this small amount of Ansible
knowledge, I have been able to create playbooks that configure applications,
update all my computers, and setup each of my machines when I reformat them.
However, don&amp;rsquo;t let that stop you from learning even more! Ansible is a powerful
tool and worth any amount of time invested into it. Enjoy!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Authorizing Thunderbolt 3 on Fedora Plasma</title>
      <link>http://ryan.himmelwright.net/post/fedora-kde-tb3/</link>
      <pubDate>Sat, 25 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>http://ryan.himmelwright.net/post/fedora-kde-tb3/</guid>
      <description>&lt;p&gt;After buying a &lt;a href=&#34;../../post/new-2019-16inch-mbp/&#34;&gt;16&amp;rdquo; MacBook Pro&lt;/a&gt; the other month,
I&amp;rsquo;ve been using a Thunderbolt 3 hub to connect it to my periphery devices.
Luckily, in addition to the macbook, I am able to use the hub with my my work
laptop when working from home. Normally, it works fine. However, last week I
reformatted the work laptop with the &lt;a href=&#34;https://spins.fedoraproject.org/kde/&#34;&gt;&lt;em&gt;KDE Plasma&lt;/em&gt; spin&lt;/a&gt; of
Fedora Workstation 31&amp;hellip; and my TB3 hub stopped playing nicely with it.
Here&amp;rsquo;s why.&lt;/p&gt;

&lt;h2 id=&#34;the-issue&#34;&gt;The Issue&lt;/h2&gt;

&lt;p&gt;Due to a NVIDIA Quadro M1000M in my lenovo P50 work laptop, I&amp;rsquo;ve been using
Gnome with Wayland, because that combination seems to have the least amount of
annoying trade-offs. While doing a system refresh, I figured I would see if
things are any different with a clean Fedora 31 Plasma install (they weren&amp;rsquo;t,
but that&amp;rsquo;s beyond this post).&lt;/p&gt;

&lt;p&gt;&lt;center&gt;
&lt;a href=&#34;../../img/posts/fedora-kde-tb3/gnome-tb3-settings.png&#34;&gt;
&lt;img alt=&#34;Gnome Thunderbolt Settings&#34; src=&#34;../../img/posts/fedora-kde-tb3/gnome-tb3-settings.png&#34; style=&#34;max-width: 100%; padding: 5px 15px 10px 10px&#34;/&gt;&lt;/a&gt;
&lt;div class=&#34;caption&#34;&gt;The Gnome desktop environment now has a thunderbolt pane
in the settings GUI&lt;/div&gt;
&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;Booting into the live cd, and later the installed system, I noticed that my
Thunderbolt 3 hub did &lt;em&gt;not&lt;/em&gt; work while I was in Plasma. That was fine. I
expected it really, because for security reasons Linux distros tend to disable
thunderbolt ports by default.  In gnome, there are now settings to authorize
it (which I guess I had done on my previous install, and forgot about).  In
Plasma however, I needed to install and configure &lt;code&gt;bolt&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&#34;bolt&#34;&gt;Bolt&lt;/h2&gt;

&lt;p&gt;&lt;center&gt;
&lt;a href=&#34;../../img/posts/fedora-kde-tb3/bolt-install.png&#34;&gt;
&lt;img alt=&#34;Installing bolt with dnf&#34; src=&#34;../../img/posts/fedora-kde-tb3/bolt-install.png&#34; style=&#34;max-width: 100%; padding: 5px 15px 10px 10px&#34;/&gt;&lt;/a&gt;
&lt;div class=&#34;caption&#34;&gt;&lt;code&gt;bolt&lt;/code&gt; is in the Fedora repos and is easily installed with
&lt;code&gt;dnf&lt;/code&gt;&lt;/div&gt;
&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;In Fedora, &lt;code&gt;bolt&lt;/code&gt; is in the repos (at least in Fedora 31+), so installing it is
easy:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo dnf install bolt
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Once &lt;code&gt;bolt&lt;/code&gt; is installed, it isn&amp;rsquo;t a bad idea to check to make sure it is
running: &lt;code&gt;sudo systemctl bolt&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;center&gt;
&lt;a href=&#34;../../img/posts/fedora-kde-tb3/bolt-systemctl-status.png&#34;&gt;
&lt;img alt=&#34;bolt systemctl status&#34; src=&#34;../../img/posts/fedora-kde-tb3/bolt-systemctl-status.png&#34; style=&#34;max-width: 100%; padding: 5px 15px 10px 10px&#34;/&gt;&lt;/a&gt;
&lt;div class=&#34;caption&#34;&gt;Checking &lt;code&gt;bolt&lt;/code&gt; is running using &lt;code&gt;systemctl status&lt;/code&gt;&lt;/div&gt;
&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;If the status shows that it isn&amp;rsquo;t running for some reason, it can be started
using &lt;code&gt;systemctl start bolt&lt;/code&gt;. Check the status again, and if it it &lt;em&gt;still&lt;/em&gt; is not
running&amp;hellip; sorry?&lt;/p&gt;

&lt;p&gt;&lt;center&gt;
&lt;a href=&#34;../../img/posts/fedora-kde-tb3/boltctl.png&#34;&gt;
&lt;img alt=&#34;boltctl&#34; src=&#34;../../img/posts/fedora-kde-tb3/boltctl.png&#34; style=&#34;max-width: 100%; padding: 5px 15px 10px 10px&#34;/&gt;&lt;/a&gt;
&lt;div class=&#34;caption&#34;&gt;&lt;/div&gt;
&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;With bolt installed, the command &lt;code&gt;boltctl&lt;/code&gt; is available to use. The base command will
show information about attached thunderbolt devices. To see more &lt;code&gt;boltctl&lt;/code&gt;
commands, run &lt;code&gt;boltctl --help&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&#34;authorizing&#34;&gt;Authorizing&lt;/h2&gt;

&lt;p&gt;&lt;center&gt;
&lt;a href=&#34;../../img/posts/fedora-kde-tb3/boltctl-authorize.png&#34;&gt;
&lt;img alt=&#34;boltctl authorize&#34; src=&#34;../../img/posts/fedora-kde-tb3/boltctl-authorize.png&#34; style=&#34;max-width: 100%; padding: 5px 15px 10px 10px&#34;/&gt;&lt;/a&gt;
&lt;div class=&#34;caption&#34;&gt;Authorizing the device&lt;/div&gt;
&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;In order to &lt;em&gt;use&lt;/em&gt; the thunderbolt 3 device, it needs to be authorized. To
authorize a device, first use a plain &lt;code&gt;boltctl&lt;/code&gt; command to get the &lt;code&gt;uuid&lt;/code&gt; of
the device. Next, call &lt;code&gt;boltctl authorize&lt;/code&gt; using the &lt;code&gt;uuid&lt;/code&gt; to authorize it:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;boltctl authorize &amp;lt;UUID HERE&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The device should now be authorized. When I authorized mine, some of my devices
started showing up automatically, while others needed to be disconnected and
replugged.&lt;/p&gt;

&lt;h2 id=&#34;enrolling&#34;&gt;Enrolling&lt;/h2&gt;

&lt;p&gt;&lt;center&gt;
&lt;a href=&#34;../../img/posts/fedora-kde-tb3/bresetoltctl-enroll.png&#34;&gt;
&lt;img alt=&#34;boltctl enroll&#34; src=&#34;../../img/posts/fedora-kde-tb3/boltctl-enroll.png&#34; style=&#34;max-width: 100%; padding: 5px 15px 10px 10px&#34;/&gt;&lt;/a&gt;
&lt;div class=&#34;caption&#34;&gt;Enrolling the device for permanent use&lt;/div&gt;
&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;Authorizing a device enables it to be used, but doesn&amp;rsquo;t guarantee persistence.
While this may be desired to grant &lt;em&gt;temporary&lt;/em&gt; authorization to a device, many
users tend want their device to &lt;em&gt;always&lt;/em&gt; work, without having to manually
authorize it. In this case, the device should be &lt;em&gt;enrolled&lt;/em&gt; (like &lt;code&gt;systemctl enable&lt;/code&gt;).
Simply call &lt;code&gt;boltctl enroll&lt;/code&gt;, with the device UUID:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;boltctl enroll &amp;lt;UUID HERE&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Once enrolled, the device&amp;rsquo;s UUID will be recorded and added to a database. By
default, the device will now automatically be authorized whenever it is
connected.&lt;/p&gt;

&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;That&amp;rsquo;s it. While the solution isn&amp;rsquo;t very difficult, it can be frustrating to
figure out when it appears that the thunderbolt device simply is not working.
Regardless, I&amp;rsquo;m glad that I now know about &lt;code&gt;bolt&lt;/code&gt; and how to use it!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Setup Mosh</title>
      <link>http://ryan.himmelwright.net/post/setup-mosh-shell/</link>
      <pubDate>Wed, 04 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>http://ryan.himmelwright.net/post/setup-mosh-shell/</guid>
      <description>&lt;p&gt;Since &lt;a href=&#34;../../post/charmeleon-desktop-design/&#34;&gt;builing my desktop&lt;/a&gt;, whenever I work
on another machine, I usually end up ssh&amp;rsquo;ing back to it to work remotely. It
has my files, more power, and much of my work flow is done from a terminal
window anyway, so why not?  The only issue I have with &lt;code&gt;ssh&lt;/code&gt; is that if I have
a spotty internet connection, or if I sleep/suspend my laptop while moving
around, the &lt;code&gt;ssh&lt;/code&gt; session will occasionally time out.  &lt;a href=&#34;../../post/scripting-tmux-workspaces/&#34;&gt;Tmux&lt;/a&gt;
and &lt;a href=&#34;../../post/setting-up-tmuxinator/&#34;&gt;tmuxinator&lt;/a&gt; make this less of an issue,
since I can re-attach my session, but I still wish my remote sessions were a
bit more seamless. They can be&amp;hellip; using &lt;code&gt;mosh&lt;/code&gt;.&lt;/p&gt;

&lt;h4 id=&#34;mosh&#34;&gt;Mosh&lt;/h4&gt;

&lt;p&gt;&lt;a href=&#34;../../img/posts/setup-mosh/ponyta-mosh.png&#34;&gt;
&lt;img alt=&#34;Using mosh to conenct to a server&#34; src=&#34;../../img/posts/setup-mosh/ponyta-mosh.png&#34; style=&#34;max-width: 100%; padding: 5px 15px 10px 10px&#34;/&gt;&lt;/a&gt;
&lt;div class=&#34;caption&#34;&gt;Using &lt;code&gt;mosh&lt;/code&gt; to connect to one of my servers&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://mosh.org&#34;&gt;Mosh&lt;/a&gt; is a more robust replacement for interactive ssh
terminals. It automatically roams and continues to work even as the computer
switches networks or is put to sleep. It also responds to typing, even on a bad
connection, which cuts down on lag. Lastly, it&amp;rsquo;s free and open source software,
licenced under the GPLv3.&lt;/p&gt;

&lt;h4 id=&#34;mosh-install&#34;&gt;Mosh Install&lt;/h4&gt;

&lt;p&gt;Mosh should be in most Linux repos, and is also available on BSD, Mac, Windows,
and basically everything else.  For more information on how to install it on
your platform, head over to the &lt;a href=&#34;https://mosh.org/#getting&#34;&gt;getting mosh&lt;/a&gt;
page.  For me, it was a simple &lt;code&gt;dnf&lt;/code&gt;/&lt;code&gt;yum&lt;/code&gt; install to get it on both my laptop
and
server:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo dnf install mosh
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;*Note: My centos server required me to first enable the epel repos to get
access to &lt;code&gt;mosh&lt;/code&gt;. Fedora might also, but I already had it enabled on my
laptop.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo yum install -y epel-release
sudo yum install -y mosh
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;open-firewall-ports&#34;&gt;Open Firewall Ports&lt;/h4&gt;

&lt;p&gt;After installing &lt;code&gt;mosh&lt;/code&gt;&amp;hellip; it might not immediately work. If so, it is likely
due to not having the required ports open. Mosh uses UDP ports 60000-61000 for
it&amp;rsquo;s connections. Enable these ports and optionally restart the firewall,
before trying mosh again.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Note: If you want to connect from outside the network, remember to also
forward these ports on the network.&lt;/em&gt;&lt;/p&gt;

&lt;h4 id=&#34;connect&#34;&gt;Connect&lt;/h4&gt;

&lt;p&gt;We should now be able to connect to the server using mosh. Typical connections
look very similar to &lt;code&gt;ssh&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mosh ryan@centos-server
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If a specific mosh UDP port needs to be specified (for port-forwarding, for example)
use the &lt;code&gt;-p&lt;/code&gt; flag:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mosh -p 1234 ryan@centos-server
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;ssh-options&#34;&gt;SSH Options&lt;/h4&gt;

&lt;p&gt;Mosh uses ssh for the initial connection. Occasionally, particular ssh options
might be required in order for mosh to initialize a connection.  For
example, I typically &lt;code&gt;ssh&lt;/code&gt; home on a particular port, so that my router knows
which VM to transfer me to.  Options like this can be passed to &lt;code&gt;mosh&lt;/code&gt; using
the &lt;code&gt;--ssh&lt;/code&gt; flag:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mosh --ssh=&amp;quot;ssh -p 1234&amp;quot; ryan@centos-network
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h4&gt;

&lt;p&gt;That&amp;rsquo;s really it. There is a bunch of cool &lt;a href=&#34;https://mosh.org/#techinfo&#34;&gt;technical
stuff&lt;/a&gt; going on under the hood of mosh, but on the
surface&amp;hellip; it is simply useful. For an even &lt;em&gt;better&lt;/em&gt; experience with mosh, be
sure to check out tmux. Enjoy!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>All Things Open 2019</title>
      <link>http://ryan.himmelwright.net/post/ato2019/</link>
      <pubDate>Sat, 09 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>http://ryan.himmelwright.net/post/ato2019/</guid>
      <description>&lt;p&gt;Two weeks ago, I attended &lt;a href=&#34;https://allthingsopen.org&#34;&gt;All Things Open (2019)&lt;/a&gt;
for the second year in a row. ATO is an annual conference that explores and
celebrates&amp;hellip; well, all things &lt;em&gt;open&lt;/em&gt;. Open source, open tech, and open
government are all main topics at the conference. Best of all, it&amp;rsquo;s right here
in the triangle (Raleigh NC). Here are some of my overall take-aways from this
year.&lt;/p&gt;

&lt;p&gt;While the talks are always full of information, the &lt;em&gt;main&lt;/em&gt; benefit I receive
from attending the conference is leaving with a list of technologies and
ideas I want to test out. So, rather than go into boring detail about each talk
I went to, I will elaborate on some common topics/themes I experienced and what
I am excited to dig into as a result.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;(Sorry there aren&amp;rsquo;t any visuals in this post. I&amp;rsquo;m still a terrible event
participant and didn&amp;rsquo;t take any pictures)&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&#34;topics&#34;&gt;Topics&lt;/h2&gt;

&lt;h3 id=&#34;1-tech&#34;&gt;1) Tech&lt;/h3&gt;

&lt;p&gt;Let&amp;rsquo;s get tech out of the way, right up front. Here are some ideas I left the
various technical talks with:&lt;/p&gt;

&lt;h4 id=&#34;i-am-going-to-keep-using-zfs-for-my-server&#34;&gt;I am going to keep using ZFS for my server&lt;/h4&gt;

&lt;p&gt;It happened again. Over the last few months I&amp;rsquo;ve entertained the idea of moving
off of ZFS on my home server for something like mergerfs + snapraid. Then I
went to a &lt;a href=&#34;https://jrs-s.net/&#34;&gt;Jim Salter&lt;/a&gt; ZFS talk, and just like last time&amp;hellip;
I want to ZFS &lt;em&gt;all the things&lt;/em&gt;. So, it looks like I&amp;rsquo;ll be sticking with it on the
server. Also&amp;hellip; it might be time for a ZFS tune-up to make sure I have the
appropriate options configured correctly&amp;hellip;&lt;/p&gt;

&lt;h4 id=&#34;i-want-to-start-building-flatpaks&#34;&gt;I want to start building Flatpaks&lt;/h4&gt;

&lt;p&gt;As a &lt;a href=&#34;https://silverblue.fedoraproject.org/&#34;&gt;Fedora Silverblue&lt;/a&gt; user, I rely
&lt;em&gt;heavily&lt;/em&gt; on flatpaks for most of my desktop applications these days. While I
have only built the &amp;ldquo;hello world&amp;rdquo; demo when playing with flatpak in the past, this
is something I think I want to dig deeper into. Knowing how to build and tweak
flatpaks would be extremely useful. It would enable me to package up software I
need to use, but then also contribute my efforts back to the community.&lt;/p&gt;

&lt;h4 id=&#34;sudo-is-awesome&#34;&gt;&lt;code&gt;sudo&lt;/code&gt; is awesome.&lt;/h4&gt;

&lt;p&gt;I already knew this, but I always forget &lt;em&gt;how much&lt;/em&gt; &lt;code&gt;sudo&lt;/code&gt; can do. Like &lt;code&gt;ssh&lt;/code&gt;,
the possibilities of being well informed about the advanced options of &lt;code&gt;sudo&lt;/code&gt;
are endless. I think I&amp;rsquo;m going to dig deeper into some of the settings, and see
what I can find.&lt;/p&gt;

&lt;h4 id=&#34;i-need-to-automate-my-cloud-provisioning&#34;&gt;I need to automate my cloud provisioning&lt;/h4&gt;

&lt;p&gt;This has been on my list for awhile now, but after seeing so many
demonstrations of people using terraform and chef to spin up their cloud
environments&amp;hellip; I need to start adding some provisioning roles to my ansible
playbooks. I think using the Digital Ocean module to spin up/tear down
temporary project droplets might be a good start&amp;hellip;&lt;/p&gt;

&lt;h3 id=&#34;2-mentoring-teaching&#34;&gt;2) Mentoring/Teaching&lt;/h3&gt;

&lt;h4 id=&#34;large-scale-mentoring&#34;&gt;Large Scale Mentoring&lt;/h4&gt;

&lt;p&gt;One of my favorite talks of the conference was co-done by two kubernetes
contributers (from Red Hat and Google). They explained how the kubernetes
project tackles the big problem of mentoring&amp;hellip; specifically how it can even be
done in a several-thousand contributer project that also has hundreds of fly-by
contributers.&lt;/p&gt;

&lt;p&gt;What I enjoyed most about their mentoring system was how it was organized.
First, they went through and defined all the leadership roles, &lt;em&gt;documenting&lt;/em&gt;
what the role was, and how it is done. Next, they made a mentoring chart for
all the defined roles, listing the current person for each role in one column,
and the person(s) next-in-line that are training for that role in the next
column. I think this is a great system for communities, and I might see if I
can take some lessons from this structure and help apply it to some volunteer
organizations I work with.&lt;/p&gt;

&lt;h4 id=&#34;gamifing-education&#34;&gt;Gamifing Education&lt;/h4&gt;

&lt;p&gt;Another interesting education talk I went to was about gamifying education.  In
the past, whenever I encountered topics trying to &amp;ldquo;gamify&amp;rdquo; education, they
usually involved how to add gaming aspects to current methods of teaching
(points for answering questions, leveling up in difficulty, etc). This talk
however, focused on actually making games (ex: board games) that just happen to
teach children as they play. It went in depth about what to keep in mind while
designing such a game, and gave great examples about challenges I wouldn&amp;rsquo;t
normally think of. For instance, the presenter suggested designing the games so
that any random items could be used as the game pieces (rocks, beans, spoons).
This lowers the barrier of entry so that children in all types of living situations
are able to play, and I think it is great advice.&lt;/p&gt;

&lt;p&gt;Best of all, the talk concluded with the suggestion to host all game
sources/documentation in a public repo on a website like Github.  This not only
makes the game accessible to people all over the world, but allows the
community to improve and expand on it. If there is something confusing in the
documentation, another person can clarify and fix it. Open sourcing the game
also enables the community to modify and invent new variations, improving it
over time. The talk showcased how we can take the best aspects of open source,
and use them to hopefully make learning a bit more fun and accessible.&lt;/p&gt;

&lt;h4 id=&#34;those-who-can-do-should-also-teach&#34;&gt;Those who can Do, Should Also Teach&lt;/h4&gt;

&lt;p&gt;As someone that struggled to focus in traditional lecture-style classes, but
thrived in hands-on lab courses, I am always looking for new methods and ways
to help others learn. One talk I observed, encouraged the audience to start
teaching others as they continue grow their skills. The talk provided many useful tips
and approaches for teaching both technical and non-technical &amp;ldquo;students&amp;rdquo;.&lt;/p&gt;

&lt;p&gt;A big motivation behind this website is that it allows me to share my
experiences so others can (&lt;em&gt;hopefully&lt;/em&gt;) learn from them.  As I sat listening to
the talk, I started to brain-storm what I could do to better extend my ability
to teach. I first wondered what changes I could make to the website, but then
started thinking about even &lt;em&gt;new&lt;/em&gt; avenues I could pursue. I haven&amp;rsquo;t finalized
any ideas &lt;em&gt;yet&lt;/em&gt;, but it is something I will keep in mind as I start planning my
goals for the new year.&lt;/p&gt;

&lt;h3 id=&#34;3-communities-diversity-and-inclusion&#34;&gt;3) Communities/Diversity and Inclusion&lt;/h3&gt;

&lt;p&gt;I first listed &amp;ldquo;&lt;em&gt;Communities&lt;/em&gt;&amp;rdquo; and &amp;ldquo;&lt;em&gt;Diversity and Inclusion&lt;/em&gt;&amp;rdquo; as too separate
topics. However, as I started to sort talks into the categories, I realized
these two overlapped all the time. So I merged them.&lt;/p&gt;

&lt;p&gt;Honestly, this topic was so prevalent at ATO, that it&amp;rsquo;s hard to summarize even
a little bit. From learning about the &lt;em&gt;curb cutting effect&lt;/em&gt;, to
diversifying recruiters and continually switching up who leads meetings, there
were all sorts of facts and tips about how to build more diverse teams and even
communities.&lt;/p&gt;

&lt;p&gt;This topic sparked my curiosity, and I ended up walking away with two
new books added to my reading list: &lt;em&gt;The Culture Map&lt;/em&gt; by Erin Meyer, and Jono
Bacon&amp;rsquo;s upcoming book, &lt;em&gt;People Powered&lt;/em&gt;.&lt;/p&gt;

&lt;h3 id=&#34;4-burn-out-team-dynamics&#34;&gt;4) Burn-out/Team Dynamics&lt;/h3&gt;

&lt;p&gt;Last but not least, there were talks about another related topic pair: team
dynamics and burn-out. Every talk I went to that focused on either these topics
was &lt;em&gt;really well delivered&lt;/em&gt;, which was a relief as both topics are very
important in the tech industry. To summarize, I&amp;rsquo;ll list 3 items which I already
subscribe to, but came up &lt;em&gt;again and again&lt;/em&gt; in the presentations:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Multi-tasking isn&amp;rsquo;t real&lt;/li&gt;
&lt;li&gt;Stop blaming others&lt;/li&gt;
&lt;li&gt;A balanced life &lt;em&gt;outside&lt;/em&gt; of work is required to be productive &lt;em&gt;at&lt;/em&gt; work (eat healthy, exercise, get more sleep, have a hobby)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;With my second year at All Things Open finished&amp;hellip; would I recommend it?
Absolutely.  No matter why someone is interested in open source (the tech, the
community aspects, sharing with others), there will be something there for
them. See you next year!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Switching to Bitwarden</title>
      <link>http://ryan.himmelwright.net/post/switching-to-bitwarden/</link>
      <pubDate>Fri, 13 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>http://ryan.himmelwright.net/post/switching-to-bitwarden/</guid>
      <description>&lt;p&gt;After years of using &lt;a href=&#34;https://www.passwordstore.org/&#34;&gt;pass&lt;/a&gt; as my password
manager, I am mixing things up. Over vacation, I started importing all of my
passwords into &lt;a href=&#34;https://bitwarden.com/&#34;&gt;Bitwarden&lt;/a&gt;. With all my passwords
finally transferred, I have now switched to using Bitwarden full-time. Here
are my thoughts so far.&lt;/p&gt;

&lt;h3 id=&#34;why-switch&#34;&gt;Why Switch?&lt;/h3&gt;

&lt;p&gt;Before I start, I want to point out that I had already started my switch &lt;em&gt;before&lt;/em&gt;
the large Bitwarden segment on the &lt;a href=&#34;https://linuxunplugged.com/316&#34;&gt;recent episode of Linux
Unplugged&lt;/a&gt;. That was just a re-assuring
coincidence &lt;code&gt;:)&lt;/code&gt; .&lt;/p&gt;

&lt;p&gt;So, why did I decide to switch?&lt;/p&gt;

&lt;h4 id=&#34;easier-setup&#34;&gt;Easier Setup&lt;/h4&gt;

&lt;p&gt;&lt;a href=&#34;../../img/posts/switching-to-bitwarden/bigtwarden-flathub.png&#34;&gt;
&lt;img alt=&#34;Bitwarden on Flathub Page&#34; src=&#34;../../img/posts/switching-to-bitwarden/bitwarden-flathub.png&#34; style=&#34;max-width: 100%;&#34;/&gt;&lt;/a&gt;
&lt;div class=&#34;caption&#34;&gt;Bitwarden on Flathub&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;The main reason is that when configuring a new system, Bitwarden is simply
easier to setup. All I need to do is install a Bitwarden client and login. In
fact, using the hosted service I don&amp;rsquo;t even need to do that. I can just login
using the &lt;a href=&#34;https://vault.bitwarden.com/&#34;&gt;web vault&lt;/a&gt;. Installing is made even
easier by the fact that Bitwarden is packaged as a &lt;a href=&#34;https://flathub.org/apps/details/com.bitwarden.desktop&#34;&gt;Flatpak on
flathub&lt;/a&gt;. So on my
&lt;a href=&#34;https://silverblue.fedoraproject.org/&#34;&gt;Fedora Silverblue&lt;/a&gt; computers, it works
out of the box and already fits in with the design philosophy behind Silverblue
(running all user apps in containers). Perfect.&lt;/p&gt;

&lt;h4 id=&#34;mobile-support&#34;&gt;Mobile Support&lt;/h4&gt;

&lt;p&gt;&lt;a href=&#34;../../img/posts/switching-to-bitwarden/bitwarden-ipad.jpg&#34;&gt;
&lt;img alt=&#34;Bitwarden on Flathub Page&#34; src=&#34;../../img/posts/switching-to-bitwarden/bitwarden-ipad.jpg&#34; style=&#34;float: right;width: 250px; max-width: 100%; padding: 5px 5px 10px 10px&#34;/&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Over the past few months I have been &lt;a href=&#34;../../post/switched-to-joplin-notes/&#34;&gt;switching up the tools I
use&lt;/a&gt;, at least the ones I use &lt;a href=&#34;../../post/back-on-org-mode-for-work/&#34;&gt;outside of
work&lt;/a&gt;. The big driving force behind many of
these switches is better mobile support. While I still prefer to keep as much
data off of my phone as possible, there are some things I need to have on the
go. My password manager is unfortunately one of them.&lt;/p&gt;

&lt;p&gt;Additionally, as I start to test out different workloads on alternative devices
like my ipad, having a mobil-friendly work flow is a godsend. In fact, trying to
&lt;a href=&#34;../../post/setting-up-pass/&#34;&gt;setup pass&lt;/a&gt; on my iPad is what eventually frustrated
me enough to give Bitwarden a chance.&lt;/p&gt;

&lt;p&gt;Setup on both my phone and ipad was dead-simple. Install the app, and login.
Done.&lt;/p&gt;

&lt;h4 id=&#34;wayland-friendly&#34;&gt;Wayland Friendly&lt;/h4&gt;

&lt;p&gt;&lt;a href=&#34;../../img/posts/switching-to-bitwarden/wayland-logo.png&#34;&gt;
&lt;img alt=&#34;Wayland logo&#34; src=&#34;../../img/posts/switching-to-bitwarden/wayland-logo.png&#34; style=&#34;float: left; width: 250px; max-width: 100%; padding: 5px 15px 10px 10px&#34;/&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;One of the best features of my pass system was how well it was integrated with
my desktop environment. &lt;em&gt;However&lt;/em&gt;, I want to switch to wayland now more than
ever, but my pass desktop integration is the biggest blocker preventing me from
using it on my machines. I access pass using launcher applications like &lt;code&gt;dmenu&lt;/code&gt;
and &lt;code&gt;rofi&lt;/code&gt;&amp;hellip; but they do not function correctly in wayland. This forced me to
use &lt;code&gt;pass&lt;/code&gt; from a terminal window while in a wayland session. Bitwarden, at
least the limited GUI interactions I&amp;rsquo;ve used thus far, appears to work just
fine in wayland.&lt;/p&gt;

&lt;h4 id=&#34;easier-to-share-expand&#34;&gt;Easier to share/expand&lt;/h4&gt;

&lt;p&gt;Lastly, if my wife eventually wants to switch to Bitwarden, I &lt;em&gt;think&lt;/em&gt; we can
share our joint passwords with each other, even being on just the free personal
plan. If not, we can upgrade to the &amp;ldquo;family plan&amp;rdquo; which is currently $1/mo and
allows unlimited collections across 5 accounts &lt;em&gt;and&lt;/em&gt; optional self hosting. For
shared family password management&amp;hellip; that&amp;rsquo;s a great deal.&lt;/p&gt;

&lt;h3 id=&#34;what-i-am-still-learning&#34;&gt;What I am still learning&lt;/h3&gt;

&lt;p&gt;Normally, this is where I list the few things that I &amp;ldquo;don&amp;rsquo;t like&amp;rdquo;. However,
this still is all new and I &lt;em&gt;think&lt;/em&gt; the majority of my current issues are
solvable, but I just haven&amp;rsquo;t figured it out yet. So it&amp;rsquo;s a &amp;ldquo;What I&amp;rsquo;m still
learning&amp;rdquo; section this time (•‿•) .&lt;/p&gt;

&lt;h4 id=&#34;better-keyboard-de-integration&#34;&gt;Better keyboard/DE integration&lt;/h4&gt;

&lt;p&gt;The &lt;em&gt;main feature&lt;/em&gt; I still seem to be missing is better keyboard
support/integration with the desktop environment. The GUI app is nice, and
Bitwarden has &lt;em&gt;much&lt;/em&gt; better support for browser extensions and tools. Yet, I
haven&amp;rsquo;t found a good way to open up Bitwarden (give my master password),
search for an item, and copy the password&amp;hellip; all from the keyboard.&lt;/p&gt;

&lt;p&gt;&lt;center&gt;
&lt;video style=&#34;max-width:100%;&#34; controls&gt;
  &lt;source src=&#34;../../img/posts/setting-up-pass/passmenu_demo.mp4&#34; type=&#34;video/mp4&#34;&gt;
  &lt;source src=&#34;movie.ogg&#34; type=&#34;video/ogg&#34;&gt;
Your browser does not support the video tag.
&lt;/video&gt;
&lt;div id=&#34;caption&#34;&gt;&lt;code&gt;passmenu&lt;/code&gt; lets you easily search and select a pass item.&lt;/div&gt;
&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;By comparison, &lt;code&gt;pass&lt;/code&gt; let me integrate with launchers like &lt;code&gt;dmenu&lt;/code&gt; and &lt;code&gt;rofi&lt;/code&gt;
to efficiently grab my passwords which was &lt;em&gt;awesome&lt;/em&gt;. As mentioned a few
sections above, &lt;code&gt;passmenu&lt;/code&gt; unfortunately falls apart for me these days now that I am
mostly on wayland&amp;hellip; but I don&amp;rsquo;t need a full launcher. Honestly, all I
&lt;em&gt;need&lt;/em&gt; is the ability to copy a password (and maybe other fields) using my
keyboard once I have selected an item. I can already search using &lt;code&gt;ctrl-f&lt;/code&gt; +
&lt;code&gt;tab&lt;/code&gt;, and then &lt;code&gt;arrow&lt;/code&gt; my way down the list, but once there I cannot copy
unless I continue to tab through all the options. This is not efficient and
defeats the purpose of remaining on the keyboard in the first place.&lt;/p&gt;

&lt;p&gt;This is a highly requested feature, and I&amp;rsquo;m sure someone has hacked &lt;em&gt;some
solution&lt;/em&gt; together&amp;hellip; I just have yet to find it&amp;hellip; or implement it myself.&lt;/p&gt;

&lt;h3 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h3&gt;

&lt;p&gt;That is it. &lt;strong&gt;TLDR;&lt;/strong&gt; I&amp;rsquo;ve switched to Bitwarden and have been using it as my
main password manager for almost a month and I love it. It works on &lt;em&gt;all&lt;/em&gt;
my devices and doesn&amp;rsquo;t give me too many headaches. My only real complaint is
that I wish it had better keyboard support, but I&amp;rsquo;m sure I&amp;rsquo;ll be able to figure
out a work-around eventually.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Setup a Runner VM for Gitlab</title>
      <link>http://ryan.himmelwright.net/post/create-gitlab-runner/</link>
      <pubDate>Wed, 04 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>http://ryan.himmelwright.net/post/create-gitlab-runner/</guid>
      <description>&lt;p&gt;I play around with CI/CD pipelines quite a bit, both at home and at work. I have
mostly used Jenkins, but I wanted to see how Gitlab&amp;rsquo;s CI/CD tooling has
progressed over the last year. So, I decided to try to use Gitlab to manage the
automated build and deployments of a personal project I&amp;rsquo;ve been working on.
The first step of the process was to setup a runner my Gitlab instance could
use for the builds.&lt;/p&gt;

&lt;h2 id=&#34;setup-a-machine-vm&#34;&gt;Setup a Machine/VM&lt;/h2&gt;

&lt;p&gt;&lt;center&gt;
&lt;a href=&#34;../../img/posts/create-gitlab-runner/fedora-vm-install.png&#34;&gt;
&lt;img alt=&#34;Installing a new Fedora30 VM in Virt-Manager&#34; src=&#34;../../img/posts/create-gitlab-runner/fedora-vm-install.png&#34; style=&#34;max-width: 100%;&#34;/&gt;&lt;/a&gt;
&lt;div class=&#34;caption&#34;&gt;Installing a new Fedora 30 VM in Virt-Manager for my runner&lt;/div&gt;
&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;This will be a BYOG post (bring your own Gitlab). I already
&amp;ldquo;&lt;em&gt;had one laying around&lt;/em&gt;&amp;rdquo;, so I won&amp;rsquo;t cover setting that up.&lt;/p&gt;

&lt;p&gt;Your runner needs may differ, but in this post I am installing runner on a
Fedora 30 VM. I will also be using both &lt;a href=&#34;https://buildah.io/&#34;&gt;buildah&lt;/a&gt; and
&lt;a href=&#34;https://podman.io/&#34;&gt;podman&lt;/a&gt; for this project.&lt;/p&gt;

&lt;h4 id=&#34;some-things-to-note-consider-during-vm-setup&#34;&gt;Some things to note/consider during VM setup:&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Install packages required for pipeline tasks (ex: &lt;code&gt;podman&lt;/code&gt; and &lt;code&gt;buildah&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;If &lt;code&gt;sudo&lt;/code&gt; is required, manage the &lt;code&gt;gitlab-runner&lt;/code&gt; user/group using &lt;code&gt;visudo&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;If using docker runners, &lt;code&gt;docker-machine&lt;/code&gt; needs to be installed&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;install-runner&#34;&gt;Install runner&lt;/h2&gt;

&lt;p&gt;First, install the &lt;code&gt;gitlab-runner&lt;/code&gt; package. This can be done using the
instructions found
&lt;a href=&#34;https://docs.gitlab.com/runner/install/linux-repository.html&#34;&gt;here&lt;/a&gt;.
&lt;em&gt;However&lt;/em&gt;, I encountered issues installing it on my Fedora VMs, as this install
method isn&amp;rsquo;t supported for 30 yet.  (Check out &lt;a href=&#34;https://gitlab.com/gitlab-org/gitlab-runner/issues/4401&#34;&gt;this
issue&lt;/a&gt; for more info).&lt;/p&gt;

&lt;h4 id=&#34;add-gitlab-s-repo&#34;&gt;Add GitLab&amp;rsquo;s Repo&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;curl -L https://packages.gitlab.com/install/repositories/runner/gitlab-runner/script.rpm.sh | sudo bash
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;install-gitlab-runner&#34;&gt;Install gitlab runner&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;sudo dnf install gitlab-runner
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;alternative-copr-install&#34;&gt;(Alternative) Copr install&lt;/h2&gt;

&lt;p&gt;For now, I have been using the copr install posted in the comments
of that issue (linked above). I recommend checking if the issue is resolved first, as it
might change from the time of writing this post. To install:&lt;/p&gt;

&lt;p&gt;First enable the copr repo:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo dnf copr enable snecker/gitlab-runner -y
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Next, install:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo dnf install gitlab-runner -y
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;register-the-runner&#34;&gt;Register the Runner&lt;/h4&gt;

&lt;p&gt;Once installed, register the runner. Instructions on how to register a runner
can be found &lt;a href=&#34;https://docs.gitlab.com/runner/register/index.html&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo gitlab-runner register
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Enter the coordinator URL (ex: &lt;code&gt;https://gitlab.com&lt;/code&gt;)&lt;/p&gt;

&lt;p&gt;Next, a &lt;em&gt;gitlab-ci&lt;/em&gt; token must be shared with the runner.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;../../img/posts/create-gitlab-runner/gitlab-runner-settings.png&#34;&gt;
&lt;img alt=&#34;Gitlab Runner Settings&#34; src=&#34;../../img/posts/create-gitlab-runner/gitlab-runner-settings.png&#34; style=&#34;max-width: 100%;&#34;/&gt;&lt;/a&gt;
&lt;div class=&#34;caption&#34;&gt;Gitlab Runner&lt;strong&gt;s&lt;/strong&gt; Settings Page&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;To obtain a gitlab-ci token, got to &lt;strong&gt;Admin Area&lt;/strong&gt; -&amp;gt; &lt;strong&gt;Overview&lt;/strong&gt; -&amp;gt;
&lt;strong&gt;Runners&lt;/strong&gt;. On the right, there should be a token to use during setup.&lt;/p&gt;

&lt;p&gt;When the runner registrations asks for the token, use the &amp;ldquo;registration token&amp;rdquo;
listed in the &amp;ldquo;Set up a shared Runner manually&amp;rdquo; section.&lt;/p&gt;

&lt;p&gt;Next, provide a short description, and add a tag or two (when prompted).&lt;/p&gt;

&lt;p&gt;Lastly, enter the executor (the system on the runner that executes commands). For
now, I&amp;rsquo;ve been using &lt;code&gt;&amp;quot;shell&amp;quot;&lt;/code&gt; for my needs, as these VMs are fully
dedicated to be used as the runners for a single project.&lt;/p&gt;

&lt;p&gt;Congrats, the runner should be registered! Now to set it up&amp;hellip;&lt;/p&gt;

&lt;h2 id=&#34;link-to-ci-cd-builds&#34;&gt;Link to CI/CD Builds&lt;/h2&gt;

&lt;p&gt;It is time to link up the runner to a CI/CD job. This can be done with
tagging, but I currently just have one pipeline using my runners, so haven&amp;rsquo;t
used the tags as much. Edit the runner by clicking its  &lt;code&gt;edit&lt;/code&gt; icon.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;../../img/posts/create-gitlab-runner/runner-edit.png&#34;&gt;
&lt;img alt=&#34;Gitlab Runner Settings&#34; src=&#34;../../img/posts/create-gitlab-runner/runner-edit.png&#34; style=&#34;max-width: 100%;&#34;/&gt;&lt;/a&gt;
&lt;div class=&#34;caption&#34;&gt;Gitlab Runner Edit Page&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;In the runner edit menu, ensure that the &amp;ldquo;&lt;code&gt;Active&lt;/code&gt;&amp;rdquo; checkbox is checked. I&amp;rsquo;ve
also checked the &amp;ldquo;&lt;code&gt;Run untagged jobs&lt;/code&gt;&amp;rdquo; box for this runner, which will allow it
to pick up any job that does &lt;em&gt;not&lt;/em&gt; have a tag. If the runner is to be assigned
to a &lt;em&gt;specific&lt;/em&gt; project, that can be enabled/assigned below in the &amp;ldquo;&lt;code&gt;Restrict
projects for this Runner&lt;/code&gt;&amp;rdquo; section.&lt;/p&gt;

&lt;h2 id=&#34;test-run&#34;&gt;Test Run&lt;/h2&gt;

&lt;p&gt;To test out the runner, start a new build in a project! (Note, if there are
several runners already setup, 1. why are you reading this, and 2. it might be a good idea
to pause the others to ensure the new one will run with the test).&lt;/p&gt;

&lt;p&gt;I won&amp;rsquo;t detail how to write a &lt;code&gt;gitlab-ci.yml&lt;/code&gt; now, but for my test I made an empty
demo repo with the following pipeline:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;before_script:
  - whoami
  - pwd
  - sudo dnf update -y

build-base:
  stage: build
  script:
    - echo &amp;quot;Hello world!&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;After committing it, a build kicked off with the new runner and finished
successfully!&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Notice that the job indeed ran on &lt;code&gt;post-runner&lt;/code&gt;, the runner I setup
specifically for this post&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;../../img/posts/create-gitlab-runner/pipeline-run.png&#34;&gt;
&lt;img alt=&#34;Gitlab Runner Settings&#34; src=&#34;../../img/posts/create-gitlab-runner/pipeline-run.png&#34; style=&#34;max-width: 100%;&#34;/&gt;&lt;/a&gt;
&lt;div class=&#34;caption&#34;&gt;Gitlab Demo Job Run Results&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;If the job is more complicated, more runs might have to be manually started
after tweaking the runner settings again. Pipelines can be started by going to
the project&amp;rsquo;s &lt;code&gt;CI/CD-&amp;gt;Pipelines&lt;/code&gt; page via the side menu, and hitting the &lt;code&gt;Run
Pipeline&lt;/code&gt; button.&lt;/p&gt;

&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;That&amp;rsquo;s it. We should now have a connected runner! So far, the runners have been working
&lt;em&gt;(mostly)&lt;/em&gt; fine. When they &lt;em&gt;do&lt;/em&gt; break, it is usually because I&amp;rsquo;ve let the disk
fill up or allowed some other system-related negligence to build up
&lt;code&gt;¯\_(ツ)_/¯&lt;/code&gt;. I might add some &amp;lsquo;runner maintenance&amp;rsquo; steps to my pipeline&amp;hellip; but
some other time. Enjoy!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Back On org-mode For Work</title>
      <link>http://ryan.himmelwright.net/post/back-on-org-mode-for-work/</link>
      <pubDate>Wed, 07 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>http://ryan.himmelwright.net/post/back-on-org-mode-for-work/</guid>
      <description>&lt;p&gt;Last month, I wrote about my &lt;a href=&#34;../../post/switched-to-joplin-notes/&#34;&gt;switch to Joplin&lt;/a&gt;
for both my personal and work notes. While I enjoyed many features in Joplin, I
also had a few concerns about using the system long-term for all my notes.
As of last week, I am still using Joplin for all of my personal notes, but have switched
back to &lt;code&gt;org-mode&lt;/code&gt; for my notes at work. Why?&lt;/p&gt;

&lt;h2 id=&#34;use-cases&#34;&gt;Use Cases&lt;/h2&gt;

&lt;p&gt;To better understand why Joplin works well for me at home but can&amp;rsquo;t effectively
replace org-mode at work, lets first list some different features between Joplin and
emacs org-mode.&lt;/p&gt;

&lt;h3 id=&#34;joplin-features&#34;&gt;Joplin Features&lt;/h3&gt;

&lt;h4 id=&#34;notes-style-focused&#34;&gt;&amp;ldquo;Notes&amp;rdquo;-Style Focused&lt;/h4&gt;

&lt;p&gt;&lt;a href=&#34;../../img/posts/back-on-org-mode-for-work/joplin-gui.png&#34;&gt;
&lt;img alt=&#34;Joplin GUI&#34; src=&#34;../../img/posts/back-on-org-mode-for-work/joplin-gui.png&#34; style=&#34;max-width: 100%;&#34;/&gt;&lt;/a&gt;
&lt;div class=&#34;caption&#34;&gt;Joplin uses a traditional &amp;ldquo;note&amp;rdquo; layout, with blank text
boxes organized into notebooks.&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;Joplin organizes notes in a traditional &amp;ldquo;notes&amp;rdquo; style. Each note starts as a
big, blank text-box that the user fills in. These notes are further organized
into &amp;ldquo;notebooks&amp;rdquo;, which are simply a list of one or more notes. The notes are
formatted with markdown, but the application doesn&amp;rsquo;t seem to support features
like collapsible sections.&lt;/p&gt;

&lt;h4 id=&#34;simple-markdown-format-sharable&#34;&gt;Simple Markdown Format &amp;ndash; Sharable&lt;/h4&gt;

&lt;p&gt;The markdown editor in Joplin may not support collapsing sections, but it does
a great job at supporting other features, like simple code highlighting and web
links. Additionally, being formated in markdown, the note contents can be easily
exported, transferred, or even shared with other applications and/or people.
This is handy when grabbing snippets from the web, which may already be in a
markdown friendly format.&lt;/p&gt;

&lt;h4 id=&#34;shared-across-computer-and-mobile-devices&#34;&gt;Shared across Computer and Mobile Devices&lt;/h4&gt;

&lt;p&gt;&lt;a href=&#34;../../img/posts/back-on-org-mode-for-work/joplin-android.png&#34;&gt;
&lt;img alt=&#34;Joplin Android GUI&#34; src=&#34;../../img/posts/back-on-org-mode-for-work/joplin-android.png&#34; style=&#34;max-width: 100%;&#34;/&gt;&lt;/a&gt;
&lt;div class=&#34;caption&#34;&gt;The Notebook and Notes views on the Android client.&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;Lastly, the Joplin application is available on all platforms (including
mobile), and manages the system to sync the notes across all devices. This
makes it a breeze to write a note at a computer, and then have it immediately
available on a phone afterwards.&lt;/p&gt;

&lt;h3 id=&#34;org-mode-use-cases&#34;&gt;Org-mode use cases&lt;/h3&gt;

&lt;h4 id=&#34;logging-style-notes&#34;&gt;Logging-Style Notes&lt;/h4&gt;

&lt;p&gt;By comparison, Emacs&amp;rsquo; org-mode can be very &lt;em&gt;task&lt;/em&gt; oriented, allowing for a more
&amp;lsquo;log-style&amp;rsquo; note-taking system. It encourages outline organization of notes,
organized under &amp;ldquo;tasks&amp;rdquo; which can be collapsed in a hierarchy. The
tasks can be marked &amp;ldquo;TODO&amp;rdquo; or &amp;ldquo;DONE&amp;rdquo; using the built in TODO system, or
tagged for organization. While org-mode can be used when writing &amp;ldquo;normal&amp;rdquo; notes, it really
shines when working as a task/note system.&lt;/p&gt;

&lt;h4 id=&#34;quick-notes-key-bindings&#34;&gt;Quick Notes, Key-bindings&lt;/h4&gt;

&lt;p&gt;&lt;a href=&#39;../../img/posts/back-on-org-mode-for-work/note-demo.gif&#39;&gt;
&lt;img alt=&#34;Demonstration of logging a quick note.&#34; src=&#34;../../img/posts/back-on-org-mode-for-work/note-demo-pre.png&#34; onmouseover=&#34;this.src=&#39;../../img/posts/back-on-org-mode-for-work/note-demo.gif&#39;&#34; onmouseout=&#34;this.src=&#39;../../img/posts/back-on-org-mode-for-work/note-demo-pre.png&#39;&#34; style=&#34;max-width: 100%;&#34;/&gt;
&lt;/a&gt;
&lt;div class=&#34;caption&#34;&gt;Notes and code blocks can be easily added using
key-binding shortcuts.&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;Another feature in org mode is the note drawer. By pressing a key combination
(as one tends to do in Emacs), a new buffer will open up to take a note in. The
contents of the note may be text, or even a code snippet (&lt;em&gt;in the emacs mode of
that language&lt;/em&gt;). When done, I can simply press &lt;code&gt;C-c C-c&lt;/code&gt; and the buffer will
close, inserting the note with a time-stamped entry as part of the &lt;code&gt;logbook&lt;/code&gt;
for the task I opened the note in.&lt;/p&gt;

&lt;p&gt;This quick logging feature, along with the power of all the key-binding
customization, makes note logging fast, efficient, and enjoyable.&lt;/p&gt;

&lt;h4 id=&#34;todo-scrum-board-tasks&#34;&gt;TODO/SCRUM Board tasks&lt;/h4&gt;

&lt;p&gt;&lt;a href=&#34;../../img/posts/back-on-org-mode-for-work/scrum-board.png&#34;&gt;
&lt;img alt=&#34;Joplin Android GUI&#34; src=&#34;../../img/posts/back-on-org-mode-for-work/scrum-board.png&#34; style=&#34;max-width: 100%;&#34;/&gt;&lt;/a&gt;
&lt;div class=&#34;caption&#34;&gt;I wrote a package that lets me view org tasks in a
scrum board.&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;As mentioned, org-mode has a powerful
&lt;a href=&#34;https://orgmode.org/manual/TODO-items.html&#34;&gt;todo&lt;/a&gt; system. Users can configure
how task items should be grouped beyond just a basic &lt;code&gt;TODO&lt;/code&gt;/&lt;code&gt;DONE&lt;/code&gt;. Using this
flexability (and some lisp knowledge), I wrote an &lt;a href=&#34;https://github.com/himmAllRight/ry-org-scrum&#34;&gt;scrum board generator for
org-mode&lt;/a&gt;. This package takes all
of my &lt;code&gt;TODO&lt;/code&gt; items, and organizes them into scrum task board. This feature
helps organize my daily and weekly task lists.&lt;/p&gt;

&lt;h4 id=&#34;exporting-archiving-weekly-logs&#34;&gt;Exporting/Archiving Weekly Logs&lt;/h4&gt;

&lt;p&gt;The big &amp;ldquo;feature&amp;rdquo; org mode has that I find lacking in Joplin, is the
ability to better organize long-term sets of notes. With a logging style of
note-taking, notes are often organized by a specific range in time (day, week,
month). These systems are naturally structured hierarchically and Joplin&amp;rsquo;s notebook/note
organization only allows for systems to be 2 levels deep. However, org files are stored
as text files on a traditional file system.&lt;/p&gt;

&lt;p&gt;Lastly, org files can be linked (and exported as html files), so any note can
still be quickly navigated to, even if the archive spans hundreds of note files over
several years.&lt;/p&gt;

&lt;h2 id=&#34;home-vs-work-notes&#34;&gt;Home vs Work Notes&lt;/h2&gt;

&lt;p&gt;Now with some of each note system&amp;rsquo;s features broken down, how do they
fit with my preferences across different note taking use-cases? (mostly personal vs.
work)&lt;/p&gt;

&lt;h4 id=&#34;home&#34;&gt;Home&lt;/h4&gt;

&lt;p&gt;&lt;a href=&#34;../../img/posts/back-on-org-mode-for-work/joplin-travel-notes.jpg&#34;&gt;
&lt;img alt=&#34;Joplin Android GUI&#34; src=&#34;../../img/posts/back-on-org-mode-for-work/joplin-travel-notes.jpg&#34; style=&#34;max-width: 100%; width: 350px; float: right; padding: 15px 0px 10px 20px&#34;/&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;My personal notes tend to be organized as more traditional notes. I make large
groups, such as &amp;lsquo;Home&amp;rsquo;, &amp;lsquo;Tech&amp;rsquo;, &amp;lsquo;Travel&amp;rsquo;, and stash notes into each. In a note,
I tend to organize information on a topic and store it for later. For example,
I may have a notebook for online classes, and then a note for each class.&lt;/p&gt;

&lt;p&gt;For another example, I have a notebook called &amp;lsquo;Travel&amp;rsquo; which contains a note
for each trip I plan.  In the note, I store information that I will need, such
as flight numbers, or hotel addresses. Below important information, I jot down
ideas while planning and researching before leaving. This may include places to
to eat, or activities I want to do (with links to the websites).&lt;/p&gt;

&lt;p&gt;Joplin&amp;rsquo;s mobile platform support is particularly useful here, as I am able to
write up notes on my desktop, and then read them from my phone on the go.&lt;/p&gt;

&lt;h4 id=&#34;work&#34;&gt;Work&lt;/h4&gt;

&lt;p&gt;By contrast, my work notes are a mix of task-list and logbook for each
week. I plan each week by moving &lt;code&gt;TODO&lt;/code&gt; tasks from one day to
the next, and changing the status as I work on each one. As I work, I log notes
under each task about my progress, as well as any issues/solutions I experience
on the way. While the notes are mostly rambling, logging thoughts as I work
helps me to quickly identify issues, and solve problems faster.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;../../img/posts/back-on-org-mode-for-work/exported-notes.png&#34;&gt;
&lt;img alt=&#34;My notes exported as linked html pages&#34; src=&#34;../../img/posts/back-on-org-mode-for-work/exported-notes.png&#34; style=&#34;max-width: 100%;&#34;/&gt;&lt;/a&gt;
&lt;div class=&#34;caption&#34;&gt;The index page of my exported weekly work notes.&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;Most importantly, due to organizing notes by &lt;em&gt;week&lt;/em&gt; rather than topic, it is
best if I can archive the notes in more of a tree layout. Org notes are plain
text files, so I can save them on my hard drive any way I want. For example, I
have my work notes organized as &lt;code&gt;./work/archive/{YEAR}/{MONTH}{DAY}/week-of-{date}.org&lt;/code&gt;.
Each week, I also export the finished notes to linked html files, which is very
useful for going back and looking at my previous notes.&lt;/p&gt;

&lt;h3 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h3&gt;

&lt;p&gt;That&amp;rsquo;s it. I&amp;rsquo;ve switched back to emacs org-notes for my work tasks,
but remain on Joplin for my personal and home notes. So far&amp;hellip; I&amp;rsquo;m loving
it. I think that I switched to Joplin because org-mode wasn&amp;rsquo;t ideal for my
personal notes. However, Joplin was lacking for my work
notes. That&amp;rsquo;s okay. I learned that my home vs. work notes are two completely
different use cases, and as a result should use different tools.&lt;/p&gt;

&lt;p&gt;So, moving forward, I plan to keep using Joplin for my personal notes, and
emacs org-mode for my work tasks. Perfect.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Switched to Joplin Notes</title>
      <link>http://ryan.himmelwright.net/post/switched-to-joplin-notes/</link>
      <pubDate>Sun, 30 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>http://ryan.himmelwright.net/post/switched-to-joplin-notes/</guid>
      <description>&lt;p&gt;As a &lt;a href=&#34;../../post/org-babel-setup/&#34;&gt;massive fan&lt;/a&gt; of emacs&amp;rsquo;s
&lt;a href=&#34;https://orgmode.org/&#34;&gt;org-mode&lt;/a&gt;, it should be no surprise that I&amp;rsquo;ve been using
it for my personal and work planning/notes over the last few years.  However,
as my daily emacs usage has slowly dropped, and the support for &lt;code&gt;.org&lt;/code&gt; files
outside of emacs remains low (other than &lt;a href=&#34;https://github.com/himmAllRight/dotfiles/tree/master/emacs&#34;&gt;Github README
files&lt;/a&gt;), I started
to look for a more standard system. The last few months, I&amp;rsquo;ve been using
&lt;a href=&#34;https://joplinapp.org/&#34;&gt;Joplin&lt;/a&gt;. Here are my thoughts.&lt;/p&gt;

&lt;h2 id=&#34;previous-system-org-mode&#34;&gt;Previous System - Org-mode&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;../../img/posts/switched-to-joplin-notes/org-mode-notes.png&#34;&gt;
&lt;img alt=&#34;Emacs with a note opened in org-mode.&#34; src=&#34;../../img/posts/switched-to-joplin-notes/org-mode-notes.png&#34; style=&#34;max-width: 100%;&#34;/&gt;&lt;/a&gt;
&lt;div class=&#34;caption&#34;&gt;Emacs with a note opened in org-mode&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;Previously, I had been taking all of my notes using org-mode in emacs. Each
week, I made a new &lt;code&gt;.org&lt;/code&gt; file for my work notes, and another for my personal
planning/notes. I would then list my &lt;a href=&#34;https://orgmode.org/manual/TODO-items.html&#34;&gt;todo
items&lt;/a&gt;, usually grouped by day,
category, or both. I would also
&lt;a href=&#34;https://orgmode.org/manual/Tags.html&#34;&gt;tag&lt;/a&gt; each item, for better organization.&lt;/p&gt;

&lt;p&gt;As I worked on each task, I could quickly add time-stamped notes using the
built-in &lt;a href=&#34;https://orgmode.org/manual/Drawers.html&#34;&gt;logbook drawer&lt;/a&gt; shortcut. In
these notes, I would ramble, or paste a code snippet to save for later. As work
on each item progressed, I could set the &lt;code&gt;TODO&lt;/code&gt; status to &lt;code&gt;Working On&lt;/code&gt;
&lt;code&gt;Finished&lt;/code&gt;, &lt;code&gt;Removed&lt;/code&gt;, or any other state I had pre-defined.  Eventually, I
&lt;a href=&#34;https://github.com/himmAllRight/ry-org-scrum&#34;&gt;wrote an emacs-lisp
script/package&lt;/a&gt; that took the
&lt;code&gt;todo&lt;/code&gt; items in my &lt;code&gt;org&lt;/code&gt; file, and dumped them into a SCRUM board at the top of
the file.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;../../img/posts/switched-to-joplin-notes/org-notes-export-pages.png&#34;&gt;
&lt;img alt=&#34;Pictured of org notes exported to HTML&#34; src=&#34;../../img/posts/switched-to-joplin-notes/org-notes-export-pages.png&#34; style=&#34;max-width: 100%;&#34;/&gt;&lt;/a&gt;
&lt;div class=&#34;caption&#34;&gt;org-notes allowed me to link and export my notes to
HTML&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;Lastly, org files can be &lt;a href=&#34;https://orgmode.org/manual/Exporting.html&#34;&gt;exported&lt;/a&gt;
to all sorts of file types (md, html, pdf, latex). By combining the export
feature with &lt;a href=&#34;https://orgmode.org/manual/Internal-links.html&#34;&gt;internal
linking&lt;/a&gt;, I was able to create
an organized system for my archived notes. I created an &lt;code&gt;index.org&lt;/code&gt; file which
linked to each week&amp;rsquo;s notes. Every week, I would archive the html export of a
note, and add it to the index list. This meant I could browse my old notes as a
website.&lt;/p&gt;

&lt;h3 id=&#34;what-i-liked&#34;&gt;What I liked&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;org-mode&lt;/code&gt; is great.&lt;/li&gt;
&lt;li&gt;I could take all of my notes in a simple markdown language (org)&lt;/li&gt;
&lt;li&gt;Good code-block support&lt;/li&gt;
&lt;li&gt;Note linking&lt;/li&gt;
&lt;li&gt;Exported to html (or txt, md, pdf, or anything really)&lt;/li&gt;
&lt;li&gt;My previous notes were all exported to an archive website&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;issues&#34;&gt;Issues&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;I &lt;em&gt;had&lt;/em&gt; to use emacs for any edits&lt;/li&gt;
&lt;li&gt;Not supported on mobile devices&lt;/li&gt;
&lt;li&gt;As I used more &lt;code&gt;.md&lt;/code&gt; syntax for other applications, I found myself fumbling between &lt;code&gt;org&lt;/code&gt; and &lt;code&gt;md&lt;/code&gt; syntax often.&lt;/li&gt;
&lt;li&gt;Syncing issues (mostly Nextcloud issues. Seafile helped, but it still occurred)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;All in all, I loved taking notes in org-mode. However, I wanted something that
could be used on &lt;em&gt;all&lt;/em&gt; my devices, and was more easily translatable outside of
&amp;ldquo;emacsOS&amp;rdquo;.&lt;/p&gt;

&lt;h2 id=&#34;the-switch-joplin&#34;&gt;The Switch - Joplin&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;../../img/posts/switched-to-joplin-notes/joplin-window.png&#34;&gt;
&lt;img alt=&#34;Window of the Joplin GUI application&#34; src=&#34;../../img/posts/switched-to-joplin-notes/joplin-window.png&#34; style=&#34;max-width: 100%;&#34;/&gt;&lt;/a&gt;
&lt;div class=&#34;caption&#34;&gt;Joplin GUI window (in &amp;lsquo;split mode&amp;rsquo;)&lt;/div&gt;&lt;/p&gt;

&lt;h3 id=&#34;about-joplin&#34;&gt;About Joplin&lt;/h3&gt;

&lt;p&gt;Joplin is an open source note-taking and to-do application. It synchronizes and
organizes markdown notes into notebooks, across many platforms (Android, iOS,
macOS, Linux, and Windows). It even has both a GUI &lt;em&gt;and&lt;/em&gt; terminal client.  So,
I decided to give it a try.&lt;/p&gt;

&lt;h3 id=&#34;my-setup&#34;&gt;My Setup&lt;/h3&gt;

&lt;p&gt;When configuring joplin, a sync system has to be defined (well, &lt;em&gt;should&lt;/em&gt;. Notes
can also be saved locally). There are a few supported options including using
Nextcloud. I had previously synced my org notes using Nextcloud, but eventually
moved away from it due to repeated file conflict issues. So I wanted to try
something different.&lt;/p&gt;

&lt;p&gt;&lt;center&gt;
&lt;a href=&#34;../../img/posts/switched-to-joplin-notes/fastmail_logo.png&#34;&gt;
&lt;img alt=&#34;Window of the Joplin GUI application&#34; src=&#34;../../img/posts/switched-to-joplin-notes/fastmail_logo.png&#34; style=&#34;max-width: 70%;&#34;/&gt;&lt;/a&gt;
&lt;div class=&#34;caption&#34;&gt;Joplin GUI window (in &amp;lsquo;split mode&amp;rsquo;)&lt;/div&gt;
&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;While researching Joplin, I learned that I could sync notes to the WebDav
server on the &lt;a href=&#34;https://www.fastmail.com&#34;&gt;fastmail&lt;/a&gt; account I have for email. I
wasn&amp;rsquo;t using any of the account&amp;rsquo;s file storage, so I figured I this would be a
good way to get use out of a service I&amp;rsquo;m already paying for. It works great!&lt;/p&gt;

&lt;h3 id=&#34;what-i-like&#34;&gt;What I like&lt;/h3&gt;

&lt;h4 id=&#34;syncs-on-all-my-devices&#34;&gt;Syncs on &lt;em&gt;all&lt;/em&gt; my devices&lt;/h4&gt;

&lt;p&gt;What I have enjoyed most about this setup is that my notes sync to all of my
devices. Most importantly, I can &lt;em&gt;read&lt;/em&gt; the notes on every device. With
previous systems, the files would sync everywhere, but I still couldn&amp;rsquo;t always
easily read them.&lt;/p&gt;

&lt;h4 id=&#34;cli-and-gui-versions&#34;&gt;CLI and GUI versions&lt;/h4&gt;

&lt;p&gt;Similarly, I like that Joplin has both a GUI and CLI client. I
mostly use the GUI, but enjoy having the CLI as an option because it means I
can always ssh into a machine and take notes. Additionally, the
cli client allows me to take/edit notes using my own terminal editors such as
emacs &lt;em&gt;or&lt;/em&gt; vim. This is quite convenient, and I should probably start using
Joplin this way more often.&lt;/p&gt;

&lt;h4 id=&#34;markdown-note-exports&#34;&gt;Markdown Note Exports&lt;/h4&gt;

&lt;p&gt;&lt;center&gt;
&lt;a href=&#34;../../img/posts/switched-to-joplin-notes/export-options.png&#34;&gt;
&lt;img alt=&#34;Joplin cli application&#34; src=&#34;../../img/posts/switched-to-joplin-notes/export-options.png&#34; style=&#34;max-width: 100%;&#34;/&gt;&lt;/a&gt;
&lt;/center&gt;
&lt;div class=&#34;caption&#34;&gt;Export options in Joplin GUI&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;I like that notes are formatted in markdown. This provides some
consistency when writing, but ensures that my notes are in a format that is
standardized. Additionally, joplin allows easy exporting of
the notes to other formats such as &lt;code&gt;json&lt;/code&gt; or as &lt;code&gt;pdf&lt;/code&gt;s.&lt;/p&gt;

&lt;h4 id=&#34;easy-enough-to-use&#34;&gt;Easy enough to use&lt;/h4&gt;

&lt;p&gt;Lastly, Joplin has been easy to use. After setup, I just have to open the app,
and start typing away (maybe with a sync or two). While my last setup required
the user to be somewhat of an emacs/org guru&amp;hellip; this doesn&amp;rsquo;t.&lt;/p&gt;

&lt;h3 id=&#34;issues-i-m-still-figuring-out-anticipate&#34;&gt;Issues I&amp;rsquo;m still figuring out/Anticipate&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;../../img/posts/switched-to-joplin-notes/joplin-cli.png&#34;&gt;
&lt;img alt=&#34;Joplin cli application&#34; src=&#34;../../img/posts/switched-to-joplin-notes/joplin-cli.png&#34; style=&#34;max-width: 100%;&#34;/&gt;&lt;/a&gt;
&lt;div class=&#34;caption&#34;&gt;Joplin CLI window &lt;/div&gt;&lt;/p&gt;

&lt;h4 id=&#34;setup-is-a-pain&#34;&gt;Setup is a pain&lt;/h4&gt;

&lt;p&gt;While configuring sync can be a pain, it&amp;rsquo;s not my biggest gripe with the Joplin
setup process. It&amp;rsquo;s adding a new system. By default, if I configure a new
device with my sync solution (my laptop or phone for example) and then sync, it
will load up all of the crap default example tags and notes, which then pull
down to all of my systems. This is extremely frustrating because I have to keep
deleting them.  This is multiplied by the fact that it happens with &lt;em&gt;each
client&lt;/em&gt; I setup. So if I setup the gui and cli on my laptop, it will happen
&lt;em&gt;twice&lt;/em&gt; (2x each default tags/notes will show up on all my systems).&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Semi-Solution&lt;/em&gt;:&lt;/p&gt;

&lt;p&gt;A &lt;em&gt;slight&lt;/em&gt; work-around I have been able to use when setting up a new computer
is to simply copy the config files from an existing system to the new one.
These folders can be found at &lt;code&gt;~/.config/joplin/&lt;/code&gt;, &lt;code&gt;~/.config/Joplin/&lt;/code&gt;, and/or
&lt;code&gt;~/.config/joplin-desktop/&lt;/code&gt;. This also means that the new system &lt;em&gt;should&lt;/em&gt; have less
it needs to sync down from the server on the first sync.&lt;/p&gt;

&lt;h4 id=&#34;long-term-archiving&#34;&gt;Long term archiving&lt;/h4&gt;

&lt;p&gt;The &lt;strong&gt;big&lt;/strong&gt; problem I have&amp;hellip; and think I will continue to have with Joplin, is
the long-term organization of notes. Part of this is my inability to figure out an
efficient and organized way to handle my &amp;ldquo;log&amp;rdquo; notes.&lt;/p&gt;

&lt;p&gt;This problem partially stems from Joplin&amp;rsquo;s shallow organizational
structure. There are notebooks, and notes. That&amp;rsquo;s it. Unlike having
a file structure where I can do something like
&lt;code&gt;archive/2019/June/Weekly_Plans/&lt;/code&gt;, I can&amp;rsquo;t really go that deep with Joplin, so
I end up just having a single notebook with &lt;em&gt;all&lt;/em&gt; my weekly plan notes listed
in it.&lt;/p&gt;

&lt;p&gt;One remaining solution might be to get more aggressive with the tagging
feature, and see if I can create a more organized system using that. I might be
able to tag each note with a month/year, and then truncate my log notes each
month. The only problem with this is that it doesn&amp;rsquo;t seem like I can select
&lt;em&gt;multiple&lt;/em&gt; tags at a time, which would mean &lt;em&gt;all&lt;/em&gt; of my notes for a month
will be shown under the tag. That would be a deal breaker for me :( .&lt;/p&gt;

&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;In summary, I think that Joplin &lt;em&gt;is&lt;/em&gt; a great open source notes solution.  If
someone needs a system to keep a bunch of normal notes synced across all their
devices, this is it. I however, might need to try out something else long-term.
On the bright side, there are a bunch of features in Joplin that love and will
definitely look for&amp;hellip; in my next solution.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>SELF 2019</title>
      <link>http://ryan.himmelwright.net/post/self2019/</link>
      <pubDate>Thu, 20 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>http://ryan.himmelwright.net/post/self2019/</guid>
      <description>&lt;p&gt;The past few years I have watched the South East Linux Fest (SELF) from a
distance, often via listreams run by &lt;a href=&#34;https://www.jupiterbroadcasting.com/&#34;&gt;Jupiter
Broadcasting&lt;/a&gt; and/or the &lt;a href=&#34;http://www.asknoahshow.com/&#34;&gt;Ask Noah
Show&lt;/a&gt;. Last year, I decided to finally travel to
Charlotte for SELF 2018. While my wife and I &lt;em&gt;did&lt;/em&gt; drive down to North Carolina
that weekend, it was instead to Durham&amp;hellip; with a moving truck. This year, being
only two hours away, I decided there was no excuse. I did a day-trip&amp;hellip;.  but I
went. I&amp;rsquo;m glad I did.&lt;/p&gt;

&lt;h2 id=&#34;self&#34;&gt;SELF&lt;/h2&gt;

&lt;p&gt;I finalized my plans to attend SELF last minute, about two weeks ago. I
convinced a friend from work to attend with me one day over lunch, and we
registered right after. So, this past Saturday morning we left Durham around
6:30 am for the 2-ish hour drive to Charlotte.&lt;/p&gt;

&lt;p&gt;&lt;center&gt;
&lt;a href=&#39;../../img/posts/self2019/rungcc.png&#39;&gt;
&lt;img alt=&#34;Run GCC tshirt I saw&#34; src=&#34;../../img/posts/self2019/rungcc.png&#34; style=&#34;max-width: 100%;&#34;/&gt;
&lt;/a&gt;
&lt;div class=&#34;caption&#34;&gt;The first thing I saw when I passed through the hotel
doors.&lt;/div&gt;
&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;When we got to the hotel parkng lot, we weren&amp;rsquo;t entirely sure where to go.
Then, we noticed a person walking towards a door carrying a old mechanical
keyboard under their arm&amp;hellip; a clue. Sure enough, after following that person
through the same door, we found ourselves in the middle of a hallway filled
with Linux booths and face-to-face with a &lt;a href=&#34;https://shop.fsf.org/tshirts-hoodies/run-gcc-shirt&#34;&gt;&amp;ldquo;RUN GCC&amp;rdquo;
T-shirt&lt;/a&gt; on display. We
found SELF.&lt;/p&gt;

&lt;p&gt;&lt;center&gt;
&lt;a href=&#39;../../img/posts/self2019/self2019_badge.jpg&#39;&gt;
&lt;img alt=&#34;My SELF 2019 Badge&#34; src=&#34;../../img/posts/self2019/self2019_badge.jpg&#34; style=&#34;max-width: 100%;&#34;/&gt;
&lt;/a&gt;
&lt;div class=&#34;caption&#34;&gt;My SELF 2019 Badge&lt;/div&gt;
&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;After walking around a bit, we worked our way to registration and received our
badges. They were little booklets on a lanyard that contained event information and the
schedule. However, it &lt;em&gt;did&lt;/em&gt; confuse me at first because the one side was
upside-down compared to the other side&amp;hellip; but then I realized it was so it
could function as a name-tag, but still be &lt;em&gt;easily&lt;/em&gt; read while still around
one&amp;rsquo;s neck. Very practical.&lt;/p&gt;

&lt;h2 id=&#34;talks&#34;&gt;Talks&lt;/h2&gt;

&lt;p&gt;Throughout the day, I went to several talks with an array of topics, including building
personal clouds, 3D printers, security compliance testing, network backups, and
even building a tiny house. The talks were generally interesting, and I left with a
bunch of notes on topics and software I might want to dig into at some point.
For example, I think it might be useful to look into &lt;a href=&#34;https://www.chef.io/products/chef-inspec/&#34;&gt;chef
inspec&lt;/a&gt; (or at least similar
alternatives to it), for verifying build/test environments at work.&lt;/p&gt;

&lt;p&gt;The biggest lesson I learned from the talks at SELF wasn&amp;rsquo;t from their
&lt;em&gt;content&lt;/em&gt;, but rather the &lt;em&gt;environment&lt;/em&gt; they were presented in. Overall, it
seemed like a very knowledgeable, but supportive audience.&lt;/p&gt;

&lt;p&gt;For example, one of the speakers was a little flustered as it was his first time
giving a talk. When the speaker stated he was a bit nervous, the room responded
with &lt;em&gt;&amp;ldquo;don&amp;rsquo;t worry, you&amp;rsquo;re doing great so far! This is how you learn&amp;rdquo;&lt;/em&gt;. Then&amp;hellip;
the live demo experienced some issues (as they tend to do). The audience
responded by laughing &lt;em&gt;with&lt;/em&gt; the speaker and shouting out statements like &amp;ldquo;That
always happens to me! See, you &lt;em&gt;are&lt;/em&gt; one of us!&amp;ldquo;. People then started
discussing related tips and tricks they&amp;rsquo;ve learned over the years, while we
&lt;em&gt;all&lt;/em&gt; worked to troubleshoot the demo.&lt;/p&gt;

&lt;p&gt;The room was able to take what &lt;em&gt;could&lt;/em&gt; have been a disaster for the speaker,
and turn it into an engaging experience where &lt;em&gt;everyone&lt;/em&gt; in the room connected
and learned from one another.  As a result, a &amp;ldquo;&lt;em&gt;failed&lt;/em&gt;&amp;rdquo; talk ended up being a
&lt;em&gt;better&lt;/em&gt; experience than originally planned.&lt;/p&gt;

&lt;h2 id=&#34;thoughts&#34;&gt;Thoughts&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#39;../../img/posts/self2019/self_logo.png&#39;&gt;
&lt;img alt=&#34;The SELF logo&#34; src=&#34;../../img/posts/self2019/self_logo.png&#34; style=&#34;max-width: 100%; width: 300px; float: right;&#34;/&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I think SELF displayed glimmers of what the Linux and Open Source
community &lt;em&gt;can be&lt;/em&gt; when at their best. Did I encounter people I disagreed with,
or thought were a bit too abrasive? You bet. Did it ultimately matter? Not
really. When we disagree, if we can muster up the maturity to &lt;em&gt;work
together&lt;/em&gt;, we will learn and grow as a community, even when everything is going wrong.
Just like in the talk I described above.
&lt;code&gt;&amp;lt;/soapbox&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;I am fully aware that I &amp;ldquo;did SELF wrong&amp;rdquo; by only going for
a single day and mostly watching talks. I didn&amp;rsquo;t spend too much
time in the &amp;ldquo;&lt;a href=&#34;https://blogs.vmware.com/opensource/2018/05/15/hallway-track-open-source-conferences/&#34;&gt;hallway
track&lt;/a&gt;&amp;rdquo;,
and missed out on the late-night antics and philosophical discussions I heard
about. Regardless, I still learned a bunch and had a great time. Now that I&amp;rsquo;ve scoped out
SELF, in the future I think I plan to stay for the whole event&amp;hellip; and maybe
even submit a talk. See you there!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Creating a RAM Disk with a tmpfs Mount</title>
      <link>http://ryan.himmelwright.net/post/tmpfs-mount-ramdisk/</link>
      <pubDate>Wed, 05 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>http://ryan.himmelwright.net/post/tmpfs-mount-ramdisk/</guid>
      <description>&lt;p&gt;RAM is fun. If a computer has &lt;em&gt;extra&lt;/em&gt; memory, it can be used for fun &lt;em&gt;beyond&lt;/em&gt;
opening extra chrome tabs, or firing up Slack. Want to mount a partition that
is &lt;em&gt;fast&lt;/em&gt; and can be entirely wiped out just by rebooting? Or are you just
bored (guilty)?  Regardless of the reason, lets create and mount a RAM-disk!&lt;/p&gt;

&lt;h3 id=&#34;ram-disks-and-tmpfs&#34;&gt;RAM disks and tmpfs&lt;/h3&gt;

&lt;p&gt;Creating a RAM disk in Linux is actually quite easy. Unlike other OS&amp;rsquo;s, it
doesn&amp;rsquo;t require special third-party software or digging deep into the registry.
This is because RAM-based file systems are already heavily used in a Linux system.
Many root sub-directories are actually mounted
&lt;a href=&#34;http://man7.org/linux/man-pages/man5/tmpfs.5.html&#34;&gt;tmpfs&lt;/a&gt; objects, most
notably &lt;code&gt;/tmp&lt;/code&gt;. To see some &lt;code&gt;tmpfs&lt;/code&gt; mounts on a system, &lt;code&gt;grep&lt;/code&gt; the &lt;code&gt;df&lt;/code&gt;
command for &lt;code&gt;tmpfs&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;➜  ~ df -h | grep tmpfs
devtmpfs                  16G     &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;   16G   0% /dev
tmpfs                     16G  299M   16G   2% /dev/shm
tmpfs                     16G  2.0M   16G   1% /run
tmpfs                     16G     &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;   16G   0% /sys/fs/cgroup
tmpfs                     16G  5.9M   16G   1% /tmp
tmpfs                    3.2G  184K  3.2G   1% /run/user/1000
tmpfs                     12G     &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;   12G   0% /var/ramdisk&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;All the contents of a &lt;code&gt;tmpfs&lt;/code&gt; filesystem reside in system memory, typically
RAM. This allows file access that is &lt;em&gt;fast&lt;/em&gt;.  However, like RAM,
&lt;code&gt;tmpfs&lt;/code&gt; is also &lt;em&gt;volatile&lt;/em&gt;, meaning it will all be erased if the computer
restarts or shuts down. So don&amp;rsquo;t store anything important in &lt;code&gt;tmpfs&lt;/code&gt;!&lt;/p&gt;

&lt;h3 id=&#34;fstab&#34;&gt;fstab&lt;/h3&gt;

&lt;p&gt;The easiest way to add a new &amp;lsquo;RAM disk&amp;rsquo; to our system is by adding it as a new
mount in the &lt;code&gt;/etc/fstab&lt;/code&gt; file. I&amp;rsquo;m currently running &lt;a href=&#34;https://silverblue.fedoraproject.org/&#34;&gt;Fedora
Silverblue&lt;/a&gt;, so I had to place it under
&lt;code&gt;/var/&lt;/code&gt; because I don&amp;rsquo;t have write access elsewhere, but feel free to place
your mount wherever you want. Just &lt;strong&gt;make sure the location exists&lt;/strong&gt;, or the
system won&amp;rsquo;t boot correctly when loading the &lt;code&gt;fstab&lt;/code&gt;. After adding the following line
to &lt;code&gt;/etc/fstab&lt;/code&gt;, a 10G &lt;code&gt;tmpfs&lt;/code&gt; &amp;lsquo;device&amp;rsquo; will be mounted at &lt;code&gt;/var/ramdisk&lt;/code&gt; during
each boot:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# /etc/fstab&lt;/span&gt;
...
tmpfs      /var/ramdisk       tmpfs   rw,nodev,nosuid,size&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;10G	&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;By default, Linux allocates half the RAM available on the system to a new
&lt;code&gt;tmpfs&lt;/code&gt; mount. However, I wanted to specify my disk size, so I used the &lt;code&gt;size&lt;/code&gt;
argument to allocate 10G.&lt;/p&gt;

&lt;h3 id=&#34;mounting&#34;&gt;Mounting&lt;/h3&gt;

&lt;p&gt;With the &lt;code&gt;fstab&lt;/code&gt; edited, it is time to mount everything. &lt;a href=&#34;https://wiki.archlinux.org/index.php/Tmpfs&#34;&gt;The arch wiki
page&lt;/a&gt; cautions &lt;em&gt;against&lt;/em&gt; running
&lt;code&gt;mount -a&lt;/code&gt; to mount the new &lt;em&gt;tmpfs&lt;/em&gt; disks, but that is because any files that
might already be in the directories will be removed during the mount. While
this may be a concern when editing any of the already &amp;ldquo;naturally occurring&amp;rdquo; &lt;code&gt;tmpfs&lt;/code&gt;
mounts on a system (such as &lt;code&gt;/tmp&lt;/code&gt; and &lt;code&gt;/run&lt;/code&gt;), our use case is adding a
&lt;em&gt;new&lt;/em&gt; one. So, we &lt;em&gt;should&lt;/em&gt; be safe!&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;sudo mount -a&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To verify that the RAM disk is mounted, check the &lt;code&gt;df&lt;/code&gt; output. (&lt;em&gt;Note: It
should be empty since it was just allocated&lt;/em&gt;)&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$ df -h
...
tmpfs                     10G     &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;   10G   0% /var/ramdisk
...&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;testing&#34;&gt;Testing&lt;/h3&gt;

&lt;p&gt;With the tmpfs mount, how can we be sure it&amp;rsquo;s actually functioning as a
RAM disk? The simplest way to test it is&amp;hellip; move some files over to the mount
location and see if it starts to use up RAM!&lt;/p&gt;

&lt;p&gt;For my quick test, I quickly copied two large &lt;code&gt;iso&lt;/code&gt; files to the new mount:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#39;../../img/posts/tmpfs-mount-ramdisk/ram-disk-usage.gif&#39;&gt;
&lt;img alt=&#34;Copied some iso files to ramdisk&#34; src=&#34;../../img/posts/tmpfs-mount-ramdisk/ram-disk-usage.png&#34; onmouseover=&#34;this.src=&#39;../../img/posts/tmpfs-mount-ramdisk/ram-disk-usage.gif&#39;&#34; onmouseout=&#34;this.src=&#39;../../img/posts/tmpfs-mount-ramdisk/ram-disk-usage.png&#39;&#34; style=&#34;max-width: 100%;&#34;/&gt;
&lt;/a&gt;
&lt;div class=&#34;caption&#34;&gt;When copying files to a tmpfs mount, RAM usages increases
by the amount copied.&lt;/div&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo cp -r ./*.iso /var/ramdisk/&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;During the copy, I had the gnome &lt;code&gt;System Monitor&lt;/code&gt; application opened so I could
see if the RAM usage slowly climbed as the files copied&amp;hellip; and it did!
Additionally, when I deleted the copied files, the RAM usage went back down.
Looks like everything worked!&lt;/p&gt;

&lt;h3 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h3&gt;

&lt;p&gt;While RAM disks are less useful these days due to faster and faster
storage, they can still be fun. I&amp;rsquo;ve placed a full Linux file system in mine,
 &lt;code&gt;chroot&lt;/code&gt;&amp;lsquo;ed into it, and ran a full DE with xorg and everything! It was quite
snappy. I also use it as a &amp;lsquo;scratch&amp;rsquo; disk where I can work on a temporary
project and blow it away when I&amp;rsquo;m done. The options are endless!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Setting up Tmuxinator</title>
      <link>http://ryan.himmelwright.net/post/setting-up-tmuxinator/</link>
      <pubDate>Thu, 23 May 2019 00:00:00 +0000</pubDate>
      
      <guid>http://ryan.himmelwright.net/post/setting-up-tmuxinator/</guid>
      <description>&lt;p&gt;Several weeks ago I wrote about &lt;a href=&#34;../../post/scripting-tmux-workspaces/&#34;&gt;scripting a tmux session&amp;rsquo;s
initialization&lt;/a&gt;. At the end of the post I
mentioned that while writing it, I had learned about
&lt;a href=&#34;https://github.com/tmuxinator/tmuxinator&#34;&gt;tmuxinator&lt;/a&gt;. I even teased that it
looked so good, I may switch to it eventually. Well&amp;hellip; that didn&amp;rsquo;t take long. I&amp;rsquo;ve
scrapped my tmux shell scripts, and have converted to using tmuxinator. Here&amp;rsquo;s
how.&lt;/p&gt;

&lt;h2 id=&#34;what-is-tmuxinator&#34;&gt;What is Tmuxinator?&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/tmuxinator/tmuxinator&#34;&gt;Tmuxinator&lt;/a&gt; is a command line
application that makes it easy to create and manage tmux sessions. It allows a
user to define how to setup a session, including naming windows, splitting
panes, and what commands initially run in each pane. The configuration is done
in yaml, so it is very easy to figure out and get started.&lt;/p&gt;

&lt;h2 id=&#34;install&#34;&gt;Install&lt;/h2&gt;

&lt;p&gt;Most distros probably have &lt;code&gt;tmuxinator&lt;/code&gt; in their offical repos. These days, I
mostly run Fedora on all of my machines and I was able to find it there:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;sudo dnf install termixinator&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;However&lt;/strong&gt;, I found that this version was quite out of date (&lt;code&gt;0.6.11&lt;/code&gt;) even on my new
Fedora 30 install, so I recommend using the method stated on
the project&amp;rsquo;s Github page (requires &lt;code&gt;rubygems&lt;/code&gt;) to install a much more current
version (&lt;code&gt;1.1.0&lt;/code&gt;):&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;gem install tmuxinator&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;create&#34;&gt;Create&lt;/h2&gt;

&lt;p&gt;To create a new tmuxinator profile, pass the desired project name to &lt;code&gt;tmuxinator new&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;tmuxinator new Website&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This will open up a new tmuxinator template inside your default editor. The
default template contains a bunch of comments that help guide how to configure
it.&lt;/p&gt;

&lt;h4 id=&#34;header&#34;&gt;Header&lt;/h4&gt;

&lt;p&gt;The first thing to set at the top of the template is the &lt;code&gt;name&lt;/code&gt; field, followed
by the &lt;code&gt;root&lt;/code&gt; directory. The tmux session name is defined with &lt;code&gt;name&lt;/code&gt;, and
&lt;code&gt;root&lt;/code&gt; will be the directory which all of the windows/panes open up in by
default. For example, when converting my website script, I set &lt;code&gt;name&lt;/code&gt; to
&lt;code&gt;Website&lt;/code&gt; and &lt;code&gt;root&lt;/code&gt; to the location where I keep my website&amp;rsquo;s git working
directory, &lt;code&gt;~/Documents/himmAllRight-source&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# /home/ryan/.config/tmuxinator/Website.yml&lt;/span&gt;

&lt;span style=&#34;color:#66d9ef&#34;&gt;name&lt;/span&gt;: Website
&lt;span style=&#34;color:#66d9ef&#34;&gt;root&lt;/span&gt;: ~/Documents/himmAllRight-source&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id=&#34;windows&#34;&gt;Windows&lt;/h4&gt;

&lt;p&gt;Next, I needed to configure my windows. To convert the script from my previous
post, I wanted a dedicated &amp;lsquo;Main&amp;rsquo; window, one for the server, one for vim, and
one for an extra shell. Additionally, since that last post I&amp;rsquo;ve added a window
that launches my hugo-served website in a web browser. To recreate &lt;em&gt;all of
that&lt;/em&gt; with tmuxinator:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;windows&lt;/span&gt;:
  - &lt;span style=&#34;color:#66d9ef&#34;&gt;Main&lt;/span&gt;:
      - zsh
      - clear
  - &lt;span style=&#34;color:#66d9ef&#34;&gt;Server&lt;/span&gt;: hugo serve -D -F
  - &lt;span style=&#34;color:#66d9ef&#34;&gt;Write&lt;/span&gt;: nvim
  - &lt;span style=&#34;color:#66d9ef&#34;&gt;Shell&lt;/span&gt;: zsh; clear
  - &lt;span style=&#34;color:#66d9ef&#34;&gt;Web&lt;/span&gt;: qutebrowser localhost:&lt;span style=&#34;color:#ae81ff&#34;&gt;1313&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Done. Save the file and that&amp;rsquo;s it! See the benefit of using tmuxinator??&lt;/p&gt;

&lt;h4 id=&#34;pane-splits&#34;&gt;Pane splits&lt;/h4&gt;

&lt;p&gt;While I don&amp;rsquo;t use them in this example configuration, it should be noted that
setting up pane splits is also quite easy with tmuxinator. For example, if I
wanted to split the server window into two panes, one running the hugo server
and one running htop, I could use:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;- &lt;span style=&#34;color:#66d9ef&#34;&gt;Server&lt;/span&gt;:
    &lt;span style=&#34;color:#66d9ef&#34;&gt;layout&lt;/span&gt;: even-vertical
    &lt;span style=&#34;color:#66d9ef&#34;&gt;panes&lt;/span&gt;:
        - hugo
        - htop&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;layout&lt;/code&gt; key defines which
&lt;a href=&#34;http://man7.org/linux/man-pages/man1/tmux.1.html#WINDOWS_AND_PANES&#34;&gt;tmux layout&lt;/a&gt; to
use when splitting the panes, and &lt;code&gt;panes&lt;/code&gt; is a list that defines what to run in
each pane.&lt;/p&gt;

&lt;h2 id=&#34;launch&#34;&gt;Launch&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#39;../../img/posts/setting-up-tmuxinator/start-website-tmuxinator.gif&#39;&gt;
&lt;img alt=&#34;Launching Website tmux session with tmuxinator&#34; src=&#34;../../img/posts/setting-up-tmuxinator/starting-website-tmuxinator.png&#34; onmouseover=&#34;this.src=&#39;../../img/posts/setting-up-tmuxinator/start-website-tmuxinator.gif&#39;&#34; onmouseout=&#34;this.src=&#39;../../img/posts/setting-up-tmuxinator/starting-website-tmuxinator.png&#39;&#34; style=&#34;max-width: 100%;&#34;/&gt;
&lt;/a&gt;
&lt;div class=&#34;caption&#34;&gt;Launching my website tmux session with tmuxinator&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;To start up the newly defined tmuxinator project, use &lt;code&gt;tmuxinator
start&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;tmuxinator start Website&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;manage&#34;&gt;Manage&lt;/h2&gt;

&lt;p&gt;All of the tmuxinator profile templates are stored at &lt;code&gt;~/.config/tmuxinator&lt;/code&gt;,
which means they can easily be copied to a new machine, or even
saved/maintained in source control.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Note: I think older versions stored them at &lt;code&gt;~/.tmuxinator/&lt;/code&gt;, so check there
if they are missing.&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;That&amp;rsquo;s it. While scripting my own method was a good bash exercise and helped me
learn the details of &lt;code&gt;tmux&lt;/code&gt; a little bit better, I ultimately think that
&lt;code&gt;tmuxinator&lt;/code&gt; is the way to go. This is especially true when using tmux to work
on several projects or even across multiple machines. If you &lt;em&gt;still&lt;/em&gt; haven&amp;rsquo;t
tried &lt;code&gt;tmux&lt;/code&gt;&amp;hellip; I &lt;em&gt;highly&lt;/em&gt; recommend checking it out!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Custom Neofetch ASCII Art</title>
      <link>http://ryan.himmelwright.net/post/custom-neofetch-ascii-art/</link>
      <pubDate>Tue, 30 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>http://ryan.himmelwright.net/post/custom-neofetch-ascii-art/</guid>
      <description>&lt;p&gt;I have been using &lt;a href=&#34;https://github.com/dylanaraps/neofetch&#34;&gt;neofetch&lt;/a&gt; as my
command-line system information tool for a few years now. While browsing
&lt;a href=&#34;https://reddit.com/r/unixporn/&#34;&gt;/r/unixporn&lt;/a&gt;, I noticed that several
of the submissions did not have distro logos in their neofetch/screenfetch
ascii art. I knew that neofetch was customizable, but have never dug
into it myself. So I decided to change that.&lt;/p&gt;

&lt;h3 id=&#34;custom-neofetch-ascii-art&#34;&gt;Custom Neofetch ASCII Art&lt;/h3&gt;

&lt;p&gt;I started my neofetch investigation the same way one should start researching
&lt;em&gt;any&lt;/em&gt; Linux command-line tool: &lt;code&gt;man neofetch&lt;/code&gt;. Inside the man pages, I was
greeted with all sorts of customization options. Eventually, I scrolled down to
the section I wanted, &lt;code&gt;IMAGE BACKEND&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;There I learned that a custom image could be specified using the &lt;code&gt;--source&lt;/code&gt; flag.
For example, to set the art to an ascii charmeleon file I &lt;em&gt;just happen&lt;/em&gt; to have
on my desktop, I tried:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;neofetch --source /home/ryan/Documents/Pokemon-ascii/5.txt&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;AAAAAND&amp;hellip; It didn&amp;rsquo;t work. It was still the Fedora logo. Clearly, I was still
missing something.&lt;/p&gt;

&lt;p&gt;After some browsing, I found the &lt;a href=&#34;https://github.com/dylanaraps/neofetch/wiki/Custom-Ascii-art-file-format&#34;&gt;ASCII art
page&lt;/a&gt;
on neofetch&amp;rsquo;s Github wiki. Reading it, I noticed that I was missing the &lt;code&gt;${c1}&lt;/code&gt;
in my pokemon ascii files. So, I made a copy of the file and added &lt;code&gt;S{c1}&lt;/code&gt; to
the top:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;➜  welcome-messages git:(master) ✗ head charmeleon
${c1}
                      ,-&#39;`\
                  _,&amp;quot;&#39;    j
           __....+       /               .
       ,-&#39;&amp;quot;             /               ; `-._.&#39;.
      /                (              ,&#39;       .&#39;
     |            _.    \             \   ---._ `-.
     ,|    ,   _.&#39;  Y    \             `- ,&#39;   \   `.`.
     l&#39;    \ ,&#39;._,\ `.    .              /       ,--. l
  .,-        `._  |  |    |              \       _   l .
&lt;/code&gt;&lt;/pre&gt;

&lt;div class=&#34;caption&#34;&gt;head output of my modified charmeleon ascii file&lt;/div&gt;

&lt;p&gt;AAAAAND&amp;hellip; It worked!&lt;/p&gt;

&lt;h3 id=&#34;adding-a-shell-alias&#34;&gt;Adding a Shell Alias&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;../../img/posts/custom-neofetch-ascii-art/charmeleon-neofetch.png&#34;&gt;&lt;img alt=&#34;Custom Charmeleon ASCII art for my desktop&#39;s neofetch output&#34; src=&#34;../../img/posts/custom-neofetch-ascii-art/charmeleon-neofetch.png&#34; style=&#34;max-width: 100%;&#34;/&gt;&lt;/a&gt;
&lt;div class=&#34;caption&#34;&gt;Custom Charmeleon ASCII art for my desktop&amp;rsquo;s neofetch output&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;Lastly, I wanted the charmeleon ascii art to be the &lt;em&gt;default&lt;/em&gt; neofetch output on my
desktop. While I&amp;rsquo;m sure that I could have accomplished this &lt;em&gt;properly&lt;/em&gt; by
editing the &lt;code&gt;~/.config/neofetch/config.conf&lt;/code&gt; file I learned about, for now&amp;hellip;
creating an alias seemed easier XD. So I added the following line to my
&lt;code&gt;~/.zshrc&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;alias neofetch&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;neofetch --source /home/ryan/Documents/ascii/pokemon/charmeleon&amp;#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now whenever I call plain &lt;code&gt;neofetch&lt;/code&gt; on my desktop, it runs with the charmeleon
art.&lt;/p&gt;

&lt;h3 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h3&gt;

&lt;p&gt;So that&amp;rsquo;s it. A nice &lt;em&gt;short&lt;/em&gt; post for once! Despite the size, I hope if was
useful. If you haven&amp;rsquo;t heard of neofetch before, go check it out. If you have,
I encourage you to go digging through the man pages. I promise you won&amp;rsquo;t regret
it.  Enjoy!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Creating &#34;Sub&#34;-Monitor Workflows Using xrandr</title>
      <link>http://ryan.himmelwright.net/post/sub-monitor-workflows-with-xrandr/</link>
      <pubDate>Mon, 29 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>http://ryan.himmelwright.net/post/sub-monitor-workflows-with-xrandr/</guid>
      <description>&lt;p&gt;A couple months ago I swapped out my dual monitor setup for a single (but
massive), &lt;a href=&#34;../../post/new-lgud4379b/&#34;&gt;42.5&amp;rdquo; UHD IPS display&lt;/a&gt;. I love it, but admit
that sometimes, it has &lt;em&gt;too much&lt;/em&gt; workspace. While I still think that the
larger display was better choice, I sometimes wish that
I had the more limited, but &lt;em&gt;focused&lt;/em&gt; workspace of an ultrawide or 1440p
monitor. &lt;em&gt;Maybe I still can&amp;hellip;&lt;/em&gt;&lt;/p&gt;

&lt;h3 id=&#34;reasoning&#34;&gt;Reasoning&lt;/h3&gt;

&lt;p&gt;Okay. I understand that this post might seem ridiculous to most people.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;But Ryan, if you have a great display with such a large resolution, why
would you want to &lt;strong&gt;intentionally&lt;/strong&gt; scale it down smaller?!?!?!&amp;ldquo;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The truth is, there are a number of occasions when having a single, smaller
display is helpful.&lt;/p&gt;

&lt;h4 id=&#34;focused-work&#34;&gt;Focused Work&lt;/h4&gt;

&lt;p&gt;First, when trying to focus deeply on a single task, I like to have the windows
that I &lt;em&gt;need&lt;/em&gt; for the activity opened, and nothing else. Furthermore, I like
to have these windows opened at a &lt;em&gt;reasonable size&lt;/em&gt; (Note: a full screen
3840x2160 single terminal looks stupid). With such a big screen, it is just too
tempting to drag chat windows, monitoring apps, and videos to the sides of the workspace.
While 1080p is a little cramped, I think a single 1440p resolution is &lt;a href=&#34;https://hackernoon.com/why-i-stopped-using-multiple-monitors-bfd87efa2e5b&#34;&gt;more
ideal for &lt;em&gt;focused
work&lt;/em&gt;&lt;/a&gt;
(especially because I tend to take advantage of &lt;a href=&#34;https://en.wikipedia.org/wiki/Virtual_desktop&#34;&gt;virtual
desktops&lt;/a&gt;).&lt;/p&gt;

&lt;h4 id=&#34;tiling-window-managers&#34;&gt;Tiling Window Managers&lt;/h4&gt;

&lt;p&gt;&lt;a href=&#34;../../img/posts/sub-monitor-workflows-with-xrandr/i3-writing.png&#34;&gt;&lt;img alt=&#34;writing this post with i3&#34; src=&#34;../../img/posts/sub-monitor-workflows-with-xrandr/i3-writing.png&#34; style=&#34;max-width: 100%;&#34;/&gt;&lt;/a&gt;
&lt;div class=&#34;caption&#34;&gt;I actually wrote most of the draft for this post in i3&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;Second, when working (especially programming), I often like to use tiling
window managers ( &lt;a href=&#34;../../post/started-using-i3blocks/&#34;&gt;i3 for example&lt;/a&gt; ). This lets me
&lt;em&gt;work&lt;/em&gt; without having to manually move around the windows, or even leave my
keyboard. In tiling window managers, applications tend to open up full screen by
default, which again&amp;hellip; is just obnoxious on such a large display.
Scaling down the display allows me to still use tiling window managers without
compromise.&lt;/p&gt;

&lt;h4 id=&#34;gaming&#34;&gt;Gaming&lt;/h4&gt;

&lt;p&gt;Lastly, a half-reason is gaming. I&amp;rsquo;m not a huge gamer so I didn&amp;rsquo;t opt for a
crazy graphics card when I &lt;a href=&#34;http://localhost:1313/post/charmeleon-desktop-design/&#34;&gt;designed and built my
desktop&lt;/a&gt;. When I &lt;em&gt;do&lt;/em&gt;
game, I usually play in windowed-mode (which
is usually a better experience anyway&amp;hellip; again for field of view reasons).
However, sometimes a game won&amp;rsquo;t support windowed mode, or I want to
play full screen at a lower resolution so that my GPU can handle it.&lt;/p&gt;

&lt;h2 id=&#34;how&#34;&gt;How&lt;/h2&gt;

&lt;p&gt;Now that it is (hopefully) understood &lt;em&gt;why&lt;/em&gt; I want to setup a &amp;ldquo;sub-display&amp;rdquo;
inside my monitor, lets switch to &lt;em&gt;how&lt;/em&gt; I did it.&lt;/p&gt;

&lt;h3 id=&#34;problem-1-scaling&#34;&gt;Problem 1: Scaling&lt;/h3&gt;

&lt;p&gt;To get &amp;ldquo;sub&amp;rdquo;-resolutions working, I had to fix two problems. The first was that
even if I select a smaller resolution on my computer, most monitors will
display that resolution, but scaled to the size of the display. For example, if
I set my computer&amp;rsquo;s display settings to 1920x1080 on my 3840x2160 monitor, by
default it will double up the pixels to get the smaller resolution
to &lt;em&gt;fit&lt;/em&gt; full-size on the monitor. This makes everything appear gigantic&amp;hellip; which
is the exact opposite of what I wanted.&lt;/p&gt;

&lt;p&gt;After playing around in my monitor&amp;rsquo;s input settings, I noticed that there is an
&amp;ldquo;Aspect Ratio&amp;rdquo; field, with a &lt;code&gt;1:1&lt;/code&gt; option. When selected, the monitor displays
an image at its pixel density. So a 1920x1080 pixel display shows as a smaller
image in the middle of the screen, but with a &lt;code&gt;1:1&lt;/code&gt; pixel density. Problem #1 solved!&lt;/p&gt;

&lt;h3 id=&#34;problem-2-new-resolution-sets&#34;&gt;Problem 2: New Resolution Sets&lt;/h3&gt;

&lt;p&gt;The second problem was that by default, many of the resolutions I wanted to use
out do not show up in the display settings. This makes sense, as &lt;em&gt;most&lt;/em&gt; people
won&amp;rsquo;t be selecting &lt;code&gt;21:9&lt;/code&gt; resolutions on a &lt;code&gt;16:9&lt;/code&gt; panel. I needed to add
new options using &lt;code&gt;xrandr&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;After spending sometime in a terminal with &lt;code&gt;xrandr&lt;/code&gt;, (and with some help from &lt;a href=&#34;http://www.arunviswanathan.com/node/53&#34;&gt;this post&lt;/a&gt;), I was able to create new &lt;code&gt;xrandr&lt;/code&gt; modes, and set my monitor to use them.&lt;/p&gt;

&lt;h4 id=&#34;creating-a-new-xrandr-mode&#34;&gt;Creating a new xrandr mode&lt;/h4&gt;

&lt;p&gt;To create a new xrandr mode, I first needed to calculate a new modeline. This
can be done by using the &lt;code&gt;gtf&lt;/code&gt; tool. To calculate a modeline for a
3440x1440 resolution at 59.9 hertz for example, use the following:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;➜  ~ gtf &lt;span style=&#34;color:#ae81ff&#34;&gt;3440&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1440&lt;/span&gt; 59.9

  &lt;span style=&#34;color:#75715e&#34;&gt;# 3440x1440 @ 59.90 Hz (GTF) hsync: 89.25 kHz; pclk: 418.41 MHz&lt;/span&gt;
  Modeline &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;3440x1440_59.90&amp;#34;&lt;/span&gt;  418.41  &lt;span style=&#34;color:#ae81ff&#34;&gt;3440&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3688&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;4064&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;4688&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;1440&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1441&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1444&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1490&lt;/span&gt;  -HSync +Vsync

➜  ~&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The line that starts with &lt;em&gt;Modeline&lt;/em&gt; (but &lt;em&gt;not including&lt;/em&gt; &amp;ldquo;Modeline&amp;rdquo;) is what
we want. Copy that and give it to &lt;code&gt;xrandr&lt;/code&gt; with the &lt;code&gt;--newmode&lt;/code&gt; flag to create
a new mode:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;xrandr --newmode &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;3440x1440_59.90&amp;#34;&lt;/span&gt;  418.41  &lt;span style=&#34;color:#ae81ff&#34;&gt;3440&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3688&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;4064&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;4688&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;1440&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1441&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1444&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1490&lt;/span&gt;  -HSync +Vsync&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Lastly, to add that mode to a display, use that same line but with the
&lt;code&gt;--addmode&lt;/code&gt; flag, and the monitor to switch (&lt;code&gt;DP-1&lt;/code&gt; in my case):&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;xrandr --addmode DP-1 &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;3440x1440_59.90&amp;#34;&lt;/span&gt;  418.41  &lt;span style=&#34;color:#ae81ff&#34;&gt;3440&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3688&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;4064&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;4688&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;1440&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1441&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1444&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1490&lt;/span&gt;  -HSync +Vsync&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;em&gt;Note: To find the available monitor names, enter a plain &lt;code&gt;xrandr&lt;/code&gt; command, and
it will spit out all the available outputs.&lt;/em&gt;&lt;/p&gt;

&lt;h4 id=&#34;switching-to-the-new-mode&#34;&gt;Switching to the new mode&lt;/h4&gt;

&lt;h5 id=&#34;arandr&#34;&gt;arandr&lt;/h5&gt;

&lt;p&gt;To switch to the new mode, I like to use a GUI tool named &lt;code&gt;arandr&lt;/code&gt;.  Simply right
click on the display&amp;rsquo;s rectangle, and select the new mode name from the
&amp;ldquo;Resolution&amp;rdquo; list (Or &lt;em&gt;Outputs&lt;/em&gt; -&amp;gt; &lt;em&gt;Monitor Name&lt;/em&gt; -&amp;gt; &lt;em&gt;Resolution&lt;/em&gt; -&amp;gt; &lt;em&gt;New MODE
NAME&lt;/em&gt; in the menu bar).&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;../../img/posts/sub-monitor-workflows-with-xrandr/arandr-select-newmode.png&#34;&gt;&lt;img alt=&#34;Using arandr to select new mode&#34; src=&#34;../../img/posts/sub-monitor-workflows-with-xrandr/arandr-select-newmode.png&#34; style=&#34;max-width: 100%;&#34;/&gt;&lt;/a&gt;
&lt;div class=&#34;caption&#34;&gt;Using &lt;code&gt;arandr&lt;/code&gt; to select new mode (SO many resolutions XD )&lt;/div&gt;&lt;/p&gt;

&lt;h5 id=&#34;xrandr&#34;&gt;xrandr&lt;/h5&gt;

&lt;p&gt;If you are too &lt;a href=&#34;https://en.wikipedia.org/wiki/Leet&#34;&gt;1337&lt;/a&gt; to use a GUI app,
never fear! The display can be switched to the new mode using &lt;code&gt;xrandr&lt;/code&gt; with the
&lt;code&gt;--output&lt;/code&gt; and &lt;code&gt;--mode&lt;/code&gt; flags:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;xrandr --output DP-1 --mode &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;3440x1440_59.90&amp;#34;&lt;/span&gt;  418.41  &lt;span style=&#34;color:#ae81ff&#34;&gt;3440&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3688&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;4064&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;4688&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;1440&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1441&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1444&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1490&lt;/span&gt;  -HSync +Vsync&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;but-wait-there-s-more-scripting-it&#34;&gt;But Wait, There&amp;rsquo;s More! Scripting it:&lt;/h3&gt;

&lt;p&gt;After running these commands twice&amp;hellip; I realized it would be easy enough to
automate. So I did with this script:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#!/bin/bash
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# A function to prompt the user if they want to switch to the new mode now.&lt;/span&gt;
switch_to_new_mode &lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
	echo -n &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Switch to mode &lt;/span&gt;$modename&lt;span style=&#34;color:#e6db74&#34;&gt; now? [y/n]: &amp;#34;&lt;/span&gt;
	read change
	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$change&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;y&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
	&lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
		echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;switching monitor...&amp;#34;&lt;/span&gt;
		xrandr --output $MONITOR --mode $modename
	&lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;
		echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Okay, no switch. Enjoy!&amp;#34;&lt;/span&gt;
	&lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# Create a new mode for the display&lt;/span&gt;
create_new_mode &lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
	echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Adding new mode: &lt;/span&gt;$gtf_output&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
	xrandr --newmode $gtf_output
	echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Adding new mode &lt;/span&gt;$modename&lt;span style=&#34;color:#e6db74&#34;&gt; to display &lt;/span&gt;$MONITOR&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
	xrandr --addmode $MONITOR $modename
	echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Done!&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# Message if the mode appears to already exist&lt;/span&gt;
mode_already_exists &lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
	echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Hmmm... I think the mode &lt;/span&gt;$modename&lt;span style=&#34;color:#e6db74&#34;&gt; already exists.&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;## Main Function to set vars and code&lt;/span&gt;
main &lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
	&lt;span style=&#34;color:#75715e&#34;&gt;# Input Vars&lt;/span&gt;
	WIDTH&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;$1
	HEIGHT&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;$2
	MONITOR&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;$3
	ESLEEP&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;
	&lt;span style=&#34;color:#75715e&#34;&gt;# Fancier Vars :P&lt;/span&gt;
	gtf_output&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;gtf $WIDTH $HEIGHT 59.9 | grep -i &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;modeline&amp;#34;&lt;/span&gt; | sed -e &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s/\&amp;lt;Modeline\&amp;gt;//g&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;
	modename&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;echo $gtf_output | grep -o  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\(\&amp;#34;.*\&amp;#34;\)&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;
	modeexists&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;xrandr | grep -i $modename&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;

	&lt;span style=&#34;color:#75715e&#34;&gt;# Run&lt;/span&gt;
	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$modeexists&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
	&lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
		create_new_mode
	    switch_to_new_mode
	&lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;
		mode_already_exists
	    switch_to_new_mode
	&lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;## Execute Main&lt;/span&gt;
main &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$@&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&#34;caption&#34;&gt;add-xrandr.sh&lt;/div&gt;

&lt;p&gt;Basically, the script is run by providing it the desired width, height, and
&lt;code&gt;xrandr&lt;/code&gt; display to apply the new mode to. For example, to create a new
&lt;code&gt;3440x1440&lt;/code&gt; mode for my &lt;code&gt;DP-1&lt;/code&gt; display, I would run the following command:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;./add-xrandr.sh &lt;span style=&#34;color:#ae81ff&#34;&gt;3440&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1440&lt;/span&gt; DP-1.&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The script will generate a new mode based on the parameters fed it it, and then
check to see if the mode already exists. If it doesn&amp;rsquo;t, it will create it, add
it to the display name passed in, and will ask the user if they would like to
switch to the new mode. If the mode &lt;em&gt;was&lt;/em&gt; already detected, the script will just
ask the user if they wish to switch to it.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Note: The script is hard-coded to always create modes at &lt;code&gt;59.9&lt;/code&gt; Hertz,
because I don&amp;rsquo;t have any fancy fast monitors. If you want that option, just add
another parameter and swap out the &lt;code&gt;59.9&lt;/code&gt; with it.&lt;/em&gt;&lt;/p&gt;

&lt;h3 id=&#34;pros-cons&#34;&gt;Pros/Cons&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;../../img/posts/sub-monitor-workflows-with-xrandr/ultrawide-mode.jpg&#34;&gt;&lt;img alt=&#34;Monitor in &#39;ultrawide mode&#39;&#34; src=&#34;../../img/posts/sub-monitor-workflows-with-xrandr/ultrawide-mode.jpg&#34; style=&#34;max-width: 100%;&#34;/&gt;&lt;/a&gt;
&lt;div class=&#34;caption&#34;&gt;Monitor in &amp;lsquo;ultrawide mode&amp;rsquo;. It is set to 3440x1440px and
measures ~36&amp;rdquo; diagonally.&lt;/div&gt;&lt;/p&gt;

&lt;h4 id=&#34;what-this-solves&#34;&gt;What this solves&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;When I have the monitor set to a sub-resolution, I don&amp;rsquo;t experience any of
the &amp;ldquo;edge shadowing&amp;rdquo; issues I mentioned in the review post.&lt;/li&gt;
&lt;li&gt;I can test out any resolution setup less than 2840x2160. (Including Ultrawide
setups)&lt;/li&gt;
&lt;li&gt;Using a smaller resolution is friendlier to my tiling wm setups&lt;/li&gt;
&lt;li&gt;I can use a better &amp;ldquo;single focus&amp;rdquo; monitor setup. For example, the equivalent of a 28&amp;rdquo;
1440p display.&lt;/li&gt;
&lt;li&gt;I can set my monitor to a smaller resolution to better play full screen games (so that
the resolution better fits my GPU performance &lt;em&gt;and&lt;/em&gt; the game is in my
field of view)&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;what-it-doesn-t-fix&#34;&gt;What it doesn&amp;rsquo;t fix&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;The &lt;em&gt;physical&lt;/em&gt; size of my monitor stays the same. (MASSIVE Bezels :P )&lt;/li&gt;
&lt;li&gt;I can&amp;rsquo;t really do multiple displays setups. Even though my monitor supports
multiple inputs and picture-by-picture, I still can&amp;rsquo;t do a &lt;em&gt;good&lt;/em&gt; horizontal +
vertical 1080p setup, because it will center each one.&lt;/li&gt;
&lt;li&gt;The DPI is slightly bigger than if I got the &lt;em&gt;common&lt;/em&gt; size/pixel monitors.&lt;/li&gt;
&lt;li&gt;Any &lt;em&gt;curving&lt;/em&gt; or other physical attributes another monitor form factor has.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h3&gt;

&lt;p&gt;In conclusion, I love this setup. With this work-around, I was able to take a few
use cases where my monitor didn&amp;rsquo;t fully fit my needs, and fix it. I am even
happier with my monitor selection now, as I can enjoy a massive IPS display when I want it,
but also have the ability to tone it down when I want to focus in more. So far,
it&amp;rsquo;s working great!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Scripting A Tmux Work-space Start-up</title>
      <link>http://ryan.himmelwright.net/post/scripting-tmux-workspaces/</link>
      <pubDate>Wed, 27 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>http://ryan.himmelwright.net/post/scripting-tmux-workspaces/</guid>
      <description>&lt;p&gt;I love the terminal multiplexer, &lt;a href=&#34;http://www.tmux.com&#34;&gt;tmux&lt;/a&gt;. It adds
functionality to the terminal, such as multiple tabs, pane splitting, and the
ability to detach and re-attach everything later (which is &lt;em&gt;amazing&lt;/em&gt; when
combined with &lt;code&gt;ssh&lt;/code&gt;). I have been utilizing tmux even more at work, and recently
started to script the start up/configuration a tmux session for each project.
The other day, I decided to write a script to spin up a session for working on my
website&amp;hellip; and thought it would be a great tutorial!&lt;/p&gt;

&lt;h3 id=&#34;tmux&#34;&gt;Tmux&lt;/h3&gt;

&lt;p&gt;&lt;img alt=&#34;tmux demo animation&#34; src=&#34;../../img/posts/scripting-tmux-workspaces/animation-hover.png&#34; onmouseover=&#34;this.src=&#39;../../img/posts/scripting-tmux-workspaces/tmux-demo.gif&#39;&#34; onmouseout=&#34;this.src=&#39;../../img/posts/scripting-tmux-workspaces/animation-hover.png&#39;&#34; style=&#34;max-width: 100%;&#34;/&gt;
&lt;div class=&#34;caption&#34;&gt;Small tmux demonstration&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;When working on a project, I like to use tmux to maintain all of the terminal
windows related to it. This keeps everything together, and even allows me to
detach the session, switch to another computer, ssh into the previous computer,
and re-attach my working tmux session. Paired with the fact that I&amp;rsquo;ve started
using VIM again, it works seamlessly. Scripting the initialization makes
getting started even smoother.&lt;/p&gt;

&lt;h3 id=&#34;automating-tmux-initialization-for-working-on-my-website&#34;&gt;Automating tmux initialization for working on my website&lt;/h3&gt;

&lt;h4 id=&#34;new-script&#34;&gt;New Script&lt;/h4&gt;

&lt;p&gt;First, lets create a new script. Start by opening a new file, and adding a bash
&lt;a href=&#34;https://en.wikipedia.org/wiki/Shebang_(Unix)&#34;&gt;shebang&lt;/a&gt; line to the top:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#!/bin/bash&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This line tells the system that the following text will be a
&lt;a href=&#34;https://en.wikipedia.org/wiki/Bash_(Unix_shell)&#34;&gt;bash&lt;/a&gt; script.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Optional: Save and close the file, then re-open it to take advantage the text
editor&amp;rsquo;s bash syntax highlighting if it didn&amp;rsquo;t automatically switch it on.&lt;/em&gt;&lt;/p&gt;

&lt;h4 id=&#34;create-a-new-tmux-session-with-var-name&#34;&gt;Create a new tmux session (with var name)&lt;/h4&gt;

&lt;p&gt;Next, lets define a variable to store the tmux session name. This will make it
easier to change the session name later on. Using the session variable, a new
tmux-session with our desired name can be created.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Session Name&lt;/span&gt;
session&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Website&amp;#34;&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# Start New Session with our name&lt;/span&gt;
tmux new-session -d -s $session&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id=&#34;name-initial-default-window-and-switch-to-zsh&#34;&gt;Name initial default Window (and switch to &lt;code&gt;zsh&lt;/code&gt;)&lt;/h4&gt;

&lt;p&gt;Let&amp;rsquo;s customize the default window and give it a new name. Lets call this first tmux
window &lt;code&gt;&amp;quot;Main&amp;quot;&lt;/code&gt;, and have it simply run a &lt;a href=&#34;https://ohmyz.sh/&#34;&gt;zsh&lt;/a&gt; shell. After
creating a new session, there is only one window, so I know it will be
identified with the number &lt;code&gt;0&lt;/code&gt;. I can use this with &lt;code&gt;-t&lt;/code&gt; to rename the window.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Name first Window and start zsh&lt;/span&gt;
tmux rename-window -t &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Main&amp;#39;&lt;/span&gt;
tmux send-keys -t &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Main&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;zsh&amp;#39;&lt;/span&gt; C-m &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;clear&amp;#39;&lt;/span&gt; C-m&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I can then use the &lt;code&gt;send-keys&lt;/code&gt; command with the new window name to start zsh.
This is the equivalent of typing &lt;code&gt;zsh&lt;/code&gt;, &lt;code&gt;[Enter]&lt;/code&gt;, &lt;code&gt;clear&lt;/code&gt;, &lt;code&gt;[Enter]&lt;/code&gt; into the
command line.&lt;/p&gt;

&lt;h4 id=&#34;add-a-new-named-window-for-hugo-server&#34;&gt;Add a new (named) window for hugo server&lt;/h4&gt;

&lt;p&gt;With the main tmux window setup, I want to add a few more for
different tasks. First, I want a window that can run the hugo server
as I&amp;rsquo;m writing a post. With a session already created, I can name the
window as I create it, using just the &lt;code&gt;new-window&lt;/code&gt; comamnd with the
&lt;code&gt;-n&lt;/code&gt; flag.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Create and setup pane for hugo server&lt;/span&gt;
tmux new-window -t $session:1 -n &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Hugo Server&amp;#39;&lt;/span&gt;
tmux send-keys -t &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Hugo Server&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;hugo serve -D -F&amp;#39;&lt;/span&gt; C-m&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Again, I used tmux &lt;code&gt;send-keys&lt;/code&gt;, this time to send the &lt;code&gt;hugo serve -D
-F&lt;/code&gt; command to start up a hugo server for local draft editing.&lt;/p&gt;

&lt;h4 id=&#34;add-a-new-name-pane-for-vim&#34;&gt;Add a new (name) pane for vim&lt;/h4&gt;

&lt;p&gt;Now, I need a place to write website posts&amp;hellip; so lets fire up a new tmux
window, and open up neovim inside of it.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# setup Writing window&lt;/span&gt;
tmux new-window -t $SESSION:2 -n &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Writing&amp;#39;&lt;/span&gt;
tmux send-keys -t &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Writing&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;nvim&amp;#34;&lt;/span&gt; C-m&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id=&#34;another-shell&#34;&gt;Another shell&lt;/h4&gt;

&lt;p&gt;Lastly, lets create one more shell window, just in case it&amp;rsquo;s needed. Why not?&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Setup an additional shell&lt;/span&gt;
tmux new-window -t $SESSION:3 -n &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Shell&amp;#39;&lt;/span&gt;
tmux send-keys -t &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Shell&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;zsh&amp;#34;&lt;/span&gt; C-m &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;clear&amp;#39;&lt;/span&gt; C-m&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id=&#34;attach-session&#34;&gt;Attach Session&lt;/h4&gt;

&lt;p&gt;With the tmux session all configured and customized, we can tell the script to
go ahead and attach it, using the &lt;code&gt;attach-session&lt;/code&gt; command with the session
name variable.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Attach Session, on the Main window&lt;/span&gt;
tmux attach-session -t $SESSION:0&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;em&gt;Note: the &lt;code&gt;0&lt;/code&gt; tells tmux to attach the first window (&lt;code&gt;Main&lt;/code&gt;). Using
another index value will attach a different window. For example, &lt;code&gt;1&lt;/code&gt;
would open the &lt;code&gt;Hugo Server&lt;/code&gt; window when attaching&lt;/em&gt;&lt;/p&gt;

&lt;h4 id=&#34;bonus-minor-improvement&#34;&gt;Bonus: Minor improvement&lt;/h4&gt;

&lt;p&gt;&lt;img alt=&#34;tmux demo animation&#34; src=&#34;../../img/posts/scripting-tmux-workspaces/animation-hover.png&#34; onmouseover=&#34;this.src=&#39;../../img/posts/scripting-tmux-workspaces/tmux-duplicate-windows.gif&#39;&#34; onmouseout=&#34;this.src=&#39;../../img/posts/scripting-tmux-workspaces/animation-hover.png&#39;&#34; style=&#34;max-width: 100%;&#34;/&gt;
&lt;div class=&#34;caption&#34;&gt;The script would create duplicate windows if the tmux
session already existed.&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;At this point, I was done with the tmux script. It worked well for creating my
session and attaching it. However, there was &lt;em&gt;one&lt;/em&gt; issue I still had. If I ran
the script when there was a tmux session with the same name &lt;em&gt;already&lt;/em&gt;, it would
just double up the windows in that session. If I accidentally did this, I would
have to go through each window, close out whatever and was running, and then
close the window.&lt;/p&gt;

&lt;p&gt;To fix this issue, I decided to wrap the initialization commands inside of an
&lt;code&gt;if&lt;/code&gt; statement, and only run them if the tmux session &lt;em&gt;didn&amp;rsquo;t&lt;/em&gt; already exist.&lt;/p&gt;

&lt;h5 id=&#34;checking-if-the-session-already-exists&#34;&gt;Checking if the Session Already Exists&lt;/h5&gt;

&lt;p&gt;First, I needed a way to &lt;em&gt;check&lt;/em&gt; whether the desired tmux session already existed
or not. This can be done by &amp;ldquo;grep&amp;rsquo;ing&amp;rdquo; the output of &lt;code&gt;tmux list-sessions&lt;/code&gt; for
the session name, which we&amp;rsquo;ve already conveniently stored in our &lt;code&gt;$SESSION&lt;/code&gt;
variable. For Cleanliness, I took the output of that process and saved it in a
&lt;code&gt;SESSIONEXISTS&lt;/code&gt; variable, defined directly under &lt;code&gt;SESSION&lt;/code&gt; in the script.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;SESSIONEXISTS&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;tmux list-sessions | grep $SESSION&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If the session exists, &lt;code&gt;SESSIONEXISTS&lt;/code&gt; will be a string of the line which &lt;code&gt;grep&lt;/code&gt;
matched. Otherwise, it will just be an empty string (&lt;code&gt;&amp;quot;&amp;quot;&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;Now, I can use the &lt;code&gt;SESSIONEXISTS&lt;/code&gt; variable with an &lt;code&gt;if&lt;/code&gt; condition to wrap the tmux
setup code so that it only runs if &lt;code&gt;SESSIONEXISTS&lt;/code&gt; is &lt;code&gt;&amp;quot;&amp;quot;&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$SESSIONEXISTS&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
...
&lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;attach-session&lt;/code&gt; command should be &lt;em&gt;outside&lt;/em&gt; of the &lt;code&gt;if&lt;/code&gt; body,
because it will be run in both cases (even if the session doesn&amp;rsquo;t have
to be created, we still want to attach the one that already exists).&lt;/p&gt;

&lt;h3 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h3&gt;

&lt;p&gt;That is it. Here is the script with everything all put together:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#!/bin/sh
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# Set Session Name&lt;/span&gt;
SESSION&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Website&amp;#34;&lt;/span&gt;
SESSIONEXISTS&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;tmux list-sessions | grep $SESSION&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# Only create tmux session if it doesn&amp;#39;t already exist&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$SESSIONEXISTS&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
    &lt;span style=&#34;color:#75715e&#34;&gt;# Start New Session with our name&lt;/span&gt;
    tmux new-session -d -s $SESSION

    &lt;span style=&#34;color:#75715e&#34;&gt;# Name first Pane and start zsh&lt;/span&gt;
    tmux rename-window -t &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Main&amp;#39;&lt;/span&gt;
    tmux send-keys -t &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Main&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;zsh&amp;#39;&lt;/span&gt; C-m &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;clear&amp;#39;&lt;/span&gt; C-m &lt;span style=&#34;color:#75715e&#34;&gt;# Switch to bind script?&lt;/span&gt;

    &lt;span style=&#34;color:#75715e&#34;&gt;# Create and setup pane for hugo server&lt;/span&gt;
    tmux new-window -t $SESSION:1 -n &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Hugo Server&amp;#39;&lt;/span&gt;
    tmux send-keys -t &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Hugo Server&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;hugo serve -D -F&amp;#39;&lt;/span&gt; C-m &lt;span style=&#34;color:#75715e&#34;&gt;# Switch to bind script?&lt;/span&gt;

    &lt;span style=&#34;color:#75715e&#34;&gt;# setup Writing window&lt;/span&gt;
    tmux new-window -t $SESSION:2 -n &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Writing&amp;#39;&lt;/span&gt;
    tmux send-keys -t &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Writing&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;nvim&amp;#34;&lt;/span&gt; C-m

    &lt;span style=&#34;color:#75715e&#34;&gt;# Setup an additional shell&lt;/span&gt;
    tmux new-window -t $SESSION:3 -n &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Shell&amp;#39;&lt;/span&gt;
    tmux send-keys -t &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Shell&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;zsh&amp;#34;&lt;/span&gt; C-m &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;clear&amp;#39;&lt;/span&gt; C-m
&lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# Attach Session, on the Main window&lt;/span&gt;
tmux attach-session -t $SESSION:0&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I hope this post has been helpful! Although, I have to admit that this post
&lt;em&gt;may&lt;/em&gt; be moot if I decide check out
&lt;a href=&#34;https://github.com/tmuxinator/tmuxinator&#34;&gt;tmuxinator&lt;/a&gt; (which a co-worker
recommended) &amp;hellip; oh well. I guess this endeavor was still a good exercise in
some bash scripting :P.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Extending a VM Virtual Disk</title>
      <link>http://ryan.himmelwright.net/post/extending-vm-hd/</link>
      <pubDate>Thu, 07 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>http://ryan.himmelwright.net/post/extending-vm-hd/</guid>
      <description>&lt;p&gt;Last week, I extended the virtual disk of the VM hosting my
&lt;a href=&#34;https://jenkins.io&#34;&gt;jenkins&lt;/a&gt; server. Shortly after, I increased the maximum
disk size of one of the job&amp;rsquo;s docker containers, maxing out the disk. This
meant that I needed to extend the drive&lt;em&gt;&amp;hellip; again&lt;/em&gt;. If you ever do something
twice, it is &lt;em&gt;best&lt;/em&gt; to have it documented for the potential third time. So,
here we are.&lt;/p&gt;

&lt;h4 id=&#34;assumptions&#34;&gt;Assumptions&lt;/h4&gt;

&lt;p&gt;Before getting started, I want to point out that this method is specific to the
environment I currently have for &lt;em&gt;my VMs&lt;/em&gt;. Specifically, I am using kvm/qemu
and virt-manager, with qcow2 images for the virtual disks. Additionally, the
specific VM I was extending was installed with LVM and it&amp;rsquo;s main partition was
formatted with a xfs file system. Just note that some steps &lt;em&gt;may&lt;/em&gt; differ
elsewhere. This is what worked for &lt;em&gt;me&lt;/em&gt;.&lt;/p&gt;

&lt;h2 id=&#34;clone-vm&#34;&gt;Clone VM&lt;/h2&gt;

&lt;p&gt;&lt;center&gt;
&lt;a href=&#34;../../img/posts/extending-vm-hd/clone-vm.png&#34;&gt;&lt;img alt=&#34;Clone VM window in Virt Manager&#34; src= &#34;/img/posts/extending-vm-hd/clone-vm.png&#34; style=&#34;max-width: 100%;&#34;/&gt;&lt;/a&gt;
&lt;div class=&#34;caption&#34;&gt;Cloning the VM in Virt Manager&lt;/div&gt;
&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;While not &lt;em&gt;required&lt;/em&gt;, it isn&amp;rsquo;t a &lt;em&gt;bad&lt;/em&gt; idea to first clone the VM (just
in case anything becomes damaged). If using &lt;code&gt;virt-manager&lt;/code&gt;, cloning a
VM is as simple as right clicking a &lt;em&gt;powered down&lt;/em&gt; VM, and selecting
&amp;ldquo;&lt;em&gt;Clone&amp;hellip;&lt;/em&gt;&amp;rdquo;. A window will pop up with options for cloning the
VM. Make the desired name changes and hit &lt;em&gt;Clone&lt;/em&gt;.&lt;/p&gt;

&lt;h2 id=&#34;extend-qcow2-file&#34;&gt;Extend qcow2 file&lt;/h2&gt;

&lt;p&gt;The first step in resizing the virtual drive is to first expand
the &lt;code&gt;qcow2&lt;/code&gt; image. By default, the images tend to be stored at
&lt;code&gt;/var/lib/libvirt/images/&lt;/code&gt; and will require &lt;code&gt;root&lt;/code&gt; privileges to
access. Virt-Manager can be used to double check which image the VM is
using for its disk. To resize the qcow2 image, use the &lt;code&gt;qemu-img
resize&lt;/code&gt; command, providing it the image file path/name and then the size
to expand it. For example, I used &lt;code&gt;+40G&lt;/code&gt; in my command (&lt;code&gt;qemu-img
resize Jenkins.qcow2 +40G&lt;/code&gt;) to extend the image by 40GB.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;root@ninetales:/var/lib/libvirt/images# qemu-img info Jenkins.qcow2
image: Jenkins.qcow2
file format: qcow2
virtual size: 20G &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;21474836480&lt;/span&gt; bytes&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
disk size: 20G
cluster_size: &lt;span style=&#34;color:#ae81ff&#34;&gt;65536&lt;/span&gt;
Format specific information:
    compat: 1.1
    lazy refcounts: true
    refcount bits: &lt;span style=&#34;color:#ae81ff&#34;&gt;16&lt;/span&gt;
    corrupt: false

root@ninetales:/var/lib/libvirt/images# qemu-img resize Jenkins.qcow2 +40G
Image resized.

root@ninetales:/var/lib/libvirt/images# qemu-img info Jenkins.qcow2
image: Jenkins.qcow2
file format: qcow2
virtual size: 60G &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;64424509440&lt;/span&gt; bytes&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
disk size: 20G
cluster_size: &lt;span style=&#34;color:#ae81ff&#34;&gt;65536&lt;/span&gt;
Format specific information:
    compat: 1.1
    lazy refcounts: true
    refcount bits: &lt;span style=&#34;color:#ae81ff&#34;&gt;16&lt;/span&gt;
    corrupt: false

root@ninetales:/var/lib/libvirt/images#&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The command &lt;code&gt;qemu-image info&lt;/code&gt; can be helpful in verifying that the resize
worked, by checking the size of the image.&lt;/p&gt;

&lt;h2 id=&#34;gparted-live-iso&#34;&gt;Gparted Live ISO&lt;/h2&gt;

&lt;p&gt;For the next few steps, it is a good idea to boot the system from a live CD.
This will run the OS in RAM, allowing the disk to be fully unmounted.  With
access to the VM&amp;rsquo;s display, an ISO such as the &lt;a href=&#34;https://gparted.org/livecd.php&#34;&gt;gparted live
CD&lt;/a&gt; can be used to resize the partitions,
as it contains the amazing graphical tool, &lt;code&gt;gparted&lt;/code&gt; (duh).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; If you boot up the VM and don&amp;rsquo;t see the new unallocated space available in the
volume&amp;hellip; make sure you didn&amp;rsquo;t accidentally boot the &lt;em&gt;backup VM&lt;/em&gt;&amp;hellip; Not that
&lt;strong&gt;I made such a mistake&amp;hellip;&lt;/strong&gt; :P&lt;/p&gt;

&lt;h4 id=&#34;lvm-resize&#34;&gt;LVM Resize&lt;/h4&gt;

&lt;p&gt;My VM is installed using LVM volumes, so I had to resize them
before I could resize the file system. Gparted will do this
automatically when resizing a partition.&lt;/p&gt;

&lt;p&gt;&lt;center&gt;
&lt;a href=&#34;../../img/posts/extending-vm-hd/gparted-live-iso.png&#34;&gt;&lt;img alt=&#34;Booting into the Gparted live ISO&#34; src= &#34;/img/posts/extending-vm-hd/gparted-live-iso.png&#34; style=&#34;max-width: 100%;&#34;/&gt;&lt;/a&gt;
&lt;div class=&#34;caption&#34;&gt;Booting into the Gparted live ISO&lt;/div&gt;
&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;To resize the partition, first verify that the correct virtual disk
is selected in the top right drop-down the window. Next, select the
partition to expand, and click the &amp;ldquo;&lt;em&gt;Resize/Move&lt;/em&gt;&amp;rdquo; icon at the top.&lt;/p&gt;

&lt;p&gt;&lt;center&gt;
&lt;a href=&#34;../../img/posts/extending-vm-hd/gparted-resize.png&#34;&gt;&lt;img alt=&#34;Resizing the partition in Gparted&#34; src= &#34;/img/posts/extending-vm-hd/gparted-resize.png&#34; style=&#34;max-width: 100%;&#34;/&gt;&lt;/a&gt;
&lt;div class=&#34;caption&#34;&gt;Resizing the partition in Gparted&lt;/div&gt;
&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;In the resize window, I changed the &lt;code&gt;Free space following (MiB)&lt;/code&gt;
value to &lt;code&gt;0&lt;/code&gt;, to expand the partition to use &lt;em&gt;all&lt;/em&gt; of the unallocated space.
Lastly, I hit the &lt;em&gt;Resize&lt;/em&gt; button and let Gparted do it&amp;rsquo;s magic.&lt;/p&gt;

&lt;h4 id=&#34;grow-xfs&#34;&gt;Grow XFS&lt;/h4&gt;

&lt;p&gt;Finally, with the lvm volume expanded, I just had to grow my file system to use
the new space. I booted up the VM and logged in. This VM uses an xfs file
system, so I was able to use the &lt;code&gt;xfs_growfs&lt;/code&gt; command to expand the partition:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;ryan@mr-mime ~&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;$ sudo xfs_growfs /dev/centos/root
&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;... Ryan removed output &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; the post...&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
data blocks changed from &lt;span style=&#34;color:#ae81ff&#34;&gt;4851712&lt;/span&gt; to &lt;span style=&#34;color:#ae81ff&#34;&gt;15322112&lt;/span&gt;

&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;ryan@mr-mime ~&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;$ df -h
Filesystem               Size  Used Avail Use% Mounted on
/dev/mapper/centos-root   59G   19G   40G  32% /
devtmpfs                 1.9G     &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;  1.9G   0% /dev
tmpfs                    1.9G  8.0K  1.9G   1% /dev/shm
tmpfs                    1.9G  8.7M  1.9G   1% /run
tmpfs                    1.9G     &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;  1.9G   0% /sys/fs/cgroup
/dev/vda1                497M  231M  267M  47% /boot
tmpfs                    379M     &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;  379M   0% /run/user/1000&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;em&gt;Note: My VM&amp;rsquo;s disk space was COMPLETELY full. This meant that I couldn&amp;rsquo;t use auto
tab complete in my shell because it spit out there&amp;rsquo;s no disk space. Typing the
command out fully by hand, still worked.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;With the xfs partition resized, I rebooted the VM for good measure, and
everything was up and running again.&lt;/p&gt;

&lt;p&gt;That&amp;rsquo;s about it. Remember, the steps I took might need to be altered for other
environments, but this post should still be a good &lt;em&gt;starting&lt;/em&gt; point. I know it
will help me when I acidently overfill this VM &lt;em&gt;again&lt;/em&gt;&amp;hellip; Enjoy!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Replacing a Drive in My ZFS Mirror</title>
      <link>http://ryan.himmelwright.net/post/replace-zfs-mirror-drive/</link>
      <pubDate>Tue, 15 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>http://ryan.himmelwright.net/post/replace-zfs-mirror-drive/</guid>
      <description>&lt;p&gt;Right before Thanksgiving, one of the hard drives in my server started get
noisy&amp;hellip; very noisy. Fearing the worst, I &lt;a href=&#34;../../post/zfs-backups-to-luks-external&#34;&gt;did a
backup&lt;/a&gt;, and shutdown the server until I had
time to investigate further&amp;hellip; and likely replace the drive. That
time came this past week.&lt;/p&gt;

&lt;h3 id=&#34;verifying-the-drive-failed&#34;&gt;Verifying the Drive Failed&lt;/h3&gt;

&lt;p&gt;Before throwing money at the problem, I wanted to see if ZFS was detecting any
issues. When I ran a &lt;code&gt;zpool status&lt;/code&gt; on my &lt;code&gt;Data&lt;/code&gt; pool, it warned me that one of
the devices had experienced an error, but that I had not (&lt;em&gt;yet&lt;/em&gt;) encountered
any data errors. Time to buy a new drive.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;λ ninetales ~ → zpool status Data
  pool: Data
 state: ONLINE
status: One or more devices has experienced an unrecoverable error.  An
	attempt was made to correct the error.  Applications are unaffected.
action: Determine &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; the device needs to be replaced, and clear the errors
	using &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;zpool clear&amp;#39;&lt;/span&gt; or replace the device with &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;zpool replace&amp;#39;&lt;/span&gt;.
   see: http://zfsonlinux.org/msg/ZFS-8000-9P
  scan: resilvered 1.14M in 0h0m with &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; errors on Sat Jan &lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt; 10:49:31 &lt;span style=&#34;color:#ae81ff&#34;&gt;2019&lt;/span&gt;
config:

	NAME                                  STATE     READ WRITE CKSUM
	Data                                  ONLINE       &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;     &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;     &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
	  mirror-0                            ONLINE       &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;     &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;     &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
	    ata-TOSHIBA_DT01ACA300_365XDT3KS  ONLINE       &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;     &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;     &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;
	    ata-TOSHIBA_DT01ACA300_365XDR5KS  ONLINE       &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;     &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;     &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;

errors: No known data errors&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;ordering-a-new-drive&#34;&gt;Ordering a New Drive&lt;/h3&gt;

&lt;p&gt;When I started shopping for hard drives, I decided to replace my broken 7200 RPM
one a 5400 RPM one. I&amp;rsquo;d rather have the drives last longer and run quieter,
than whatever marginal speed difference the faster spinning disks &lt;em&gt;may&lt;/em&gt;
provide. I decided to finally go with a &lt;a href=&#34;https://www.amazon.com/dp/B008JJLW4M/ref=twister_B07GXT9HNH?_encoding=UTF8&amp;amp;psc=1&#34;&gt;3TB Western Digital RED
drive&lt;/a&gt;
this time, even tough it&amp;rsquo;s a bit more expensive&amp;hellip; mostly to try out.&lt;/p&gt;

&lt;h3 id=&#34;replacing-the-drive&#34;&gt;Replacing the Drive&lt;/h3&gt;

&lt;p&gt;&lt;center&gt;
&lt;a href=&#34;../../img/posts/replace-zfs-mirror-drive/hdd-swap.jpg&#34;&gt;&lt;img alt=&#34;Swapping the two hard drives&#34; src= &#34;/img/posts/replace-zfs-mirror-drive/hdd-swap.jpg&#34; style=&#34;max-width: 100%;&#34;/&gt;&lt;/a&gt;
&lt;div class=&#34;caption&#34;&gt;Swapping the hot-swap caddy from the broken hard drive (left) with my new WD Red drive (right)&lt;/div&gt;
&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Physically&lt;/em&gt; swapping the hard drives was a breeze. I could easily tell which
drive was the defective one&amp;hellip; as it caused the entire server to rumble (ಠ_ಠ) .
So I slid it out, unscrewed the drive from its caddy, and screwed in the new
one. Lastly, I slide the caddy back into the server and booted it up. I love
hot-swap drive bays.&lt;/p&gt;

&lt;h4 id=&#34;figuring-out-which-disk-to-replace&#34;&gt;Figuring Out Which Disk To Replace&lt;/h4&gt;

&lt;p&gt;Determining which disk was being replaced &lt;em&gt;in software&lt;/em&gt; was a bit more
difficult. In order to add the new drive to the &lt;code&gt;Data&lt;/code&gt; pool, I needed to tell
ZFS which one had been &lt;em&gt;replaced&lt;/em&gt;.  This was made more complicated by the fact
that previously, the two drives in the mirror were the same model and both showed up
as &lt;code&gt;/dev/disk/by-id/ata-TOSHIBA_DT01ACA300_365XDR5KS&lt;/code&gt;. So, I needed to find the
&lt;code&gt;guid&lt;/code&gt; for each drive, because it would differ between them. I used the command
&lt;code&gt;zdb&lt;/code&gt; to spit out information about of each of my pools:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;λ ninetales ~ → zdb
... &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;other pool output&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;...
Data:
    version: &lt;span style=&#34;color:#ae81ff&#34;&gt;5000&lt;/span&gt;
    name: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Data&amp;#39;&lt;/span&gt;
    state: &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
    txg: &lt;span style=&#34;color:#ae81ff&#34;&gt;15996848&lt;/span&gt;
    pool_guid: &lt;span style=&#34;color:#ae81ff&#34;&gt;2285339125999939520&lt;/span&gt;
    errata: &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
    comment: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;iocage&amp;#39;&lt;/span&gt;
    hostname: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ninetales&amp;#39;&lt;/span&gt;
    com.delphix:has_per_vdev_zaps
    vdev_children: &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
    vdev_tree:
        type: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;root&amp;#39;&lt;/span&gt;
        id: &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
        guid: &lt;span style=&#34;color:#ae81ff&#34;&gt;2285339125999939520&lt;/span&gt;
        children&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;0&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;:
            type: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;mirror&amp;#39;&lt;/span&gt;
            id: &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
            guid: &lt;span style=&#34;color:#ae81ff&#34;&gt;15171243251753521949&lt;/span&gt;
            metaslab_array: &lt;span style=&#34;color:#ae81ff&#34;&gt;34&lt;/span&gt;
            metaslab_shift: &lt;span style=&#34;color:#ae81ff&#34;&gt;34&lt;/span&gt;
            ashift: &lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt;
            asize: &lt;span style=&#34;color:#ae81ff&#34;&gt;3000588042240&lt;/span&gt;
            is_log: &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
            create_txg: &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;
            com.delphix:vdev_zap_top: &lt;span style=&#34;color:#ae81ff&#34;&gt;125&lt;/span&gt;
            children&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;0&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;:
                type: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;disk&amp;#39;&lt;/span&gt;
                id: &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
                guid: &lt;span style=&#34;color:#ae81ff&#34;&gt;4676737554230074290&lt;/span&gt;
                path: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/dev/disk/by-id/ata-TOSHIBA_DT01ACA300_365XDT3KS&amp;#39;&lt;/span&gt;
                phys_path: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/dev/ada1&amp;#39;&lt;/span&gt;
                whole_disk: &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
                not_present: &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
                DTL: &lt;span style=&#34;color:#ae81ff&#34;&gt;123&lt;/span&gt;
                create_txg: &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;
                com.delphix:vdev_zap_leaf: &lt;span style=&#34;color:#ae81ff&#34;&gt;126&lt;/span&gt;
            children&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;1&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;:
                type: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;disk&amp;#39;&lt;/span&gt;
                id: &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
                guid: &lt;span style=&#34;color:#ae81ff&#34;&gt;13442522248687181242&lt;/span&gt;
                path: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/dev/disk/by-id/ata-TOSHIBA_DT01ACA300_365XDR5KS&amp;#39;&lt;/span&gt;
                phys_path: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/dev/ada3&amp;#39;&lt;/span&gt;
                whole_disk: &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
                DTL: &lt;span style=&#34;color:#ae81ff&#34;&gt;122&lt;/span&gt;
                create_txg: &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;
                com.delphix:vdev_zap_leaf: &lt;span style=&#34;color:#ae81ff&#34;&gt;159&lt;/span&gt;
    features_for_read:
        com.delphix:hole_birth
        com.delphix:embedded_data
...&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;At first, I still didn&amp;rsquo;t know which drive was which. However, after looking
deeper, I noticed that &lt;em&gt;one&lt;/em&gt; of the Toshiba drives listed had the line
&lt;code&gt;not_present: 1&lt;/code&gt;, indicating that it was the broken drive I had removed!&lt;/p&gt;

&lt;h4 id=&#34;replacing-the-drive-1&#34;&gt;Replacing the drive&lt;/h4&gt;

&lt;p&gt;With the &lt;code&gt;guid&lt;/code&gt; of the broken drive known, I was able to start the process of
replacing it in the pool with the new one. I issued a &lt;code&gt;zpool replace&lt;/code&gt; command
with the following arguments:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo zpool replace Data &lt;span style=&#34;color:#ae81ff&#34;&gt;4676737554230074290&lt;/span&gt; /dev/sdd&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;Data&lt;/code&gt; - the name of the pool&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;4676737554230074290&lt;/code&gt; - the &lt;code&gt;guid&lt;/code&gt; of the previous drive&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;/dev/sdd&lt;/code&gt; - the path to the new drive&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Afterwards, the resilvering process started (rebuilding the mirror by copying
data from one drive to the other). I was able to check the status of
the process using &lt;code&gt;zpool status Data&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;λ ninetales by-uuid → zpool status Data
  pool: Data
 state: DEGRADED
status: One or more devices is currently being resilvered.  The pool will
	&lt;span style=&#34;color:#66d9ef&#34;&gt;continue&lt;/span&gt; to &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt;, possibly in a degraded state.
action: Wait &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; the resilver to complete.
  scan: resilver in progress since Sat Jan &lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt; 11:29:36 &lt;span style=&#34;color:#ae81ff&#34;&gt;2019&lt;/span&gt;
	72.6M scanned out of 1.03T at 2.42M/s, 123h32m to go
	72.2M resilvered, 0.01% &lt;span style=&#34;color:#66d9ef&#34;&gt;done&lt;/span&gt;
config:

	NAME                                  STATE     READ WRITE CKSUM
	Data                                  DEGRADED     &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;     &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;     &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
	  mirror-0                            DEGRADED     &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;     &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;     &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
	    replacing-0                       DEGRADED     &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;     &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;     &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
	      &lt;span style=&#34;color:#ae81ff&#34;&gt;4676737554230074290&lt;/span&gt;             UNAVAIL      &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;     &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;     &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;  was /dev/disk/by-id/ata-TOSHIBA_DT01ACA300_365XDT3KS
	      sdd                             ONLINE       &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;     &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;     &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;resilvering&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
	    ata-TOSHIBA_DT01ACA300_365XDR5KS  ONLINE       &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;     &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;     &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;

errors: No known data errors&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Resilvering can take a &lt;em&gt;long&lt;/em&gt; time. Luckily, I only had about ~1 TB of data to
rebuild, so I hoped it wouldn&amp;rsquo;t &lt;em&gt;actually&lt;/em&gt; take the 123.5 hours that the first
&lt;code&gt;status&lt;/code&gt; predicted! Regardless, during the resilvering process, the only thing
to do is wait (&lt;em&gt;and hope that the other drive doesn&amp;rsquo;t break in the process!&lt;/em&gt;).
So I did.&lt;/p&gt;

&lt;h4 id=&#34;resilver-complete&#34;&gt;Resilver Complete&lt;/h4&gt;

&lt;p&gt;In just over 4 hours, my pool had rebuilt and was back online.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;λ ninetales ~ → zpool status Data
  pool: Data
 state: ONLINE
  scan: resilvered 1.03T in 4h8m with &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; errors on Sat Jan &lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt; 15:38:26 &lt;span style=&#34;color:#ae81ff&#34;&gt;2019&lt;/span&gt;
config:

	NAME                                  STATE     READ WRITE CKSUM
	Data                                  ONLINE       &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;     &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;     &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
	  mirror-0                            ONLINE       &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;     &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;     &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
	    sdd                               ONLINE       &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;     &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;     &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
	    ata-TOSHIBA_DT01ACA300_365XDR5KS  ONLINE       &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;     &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;     &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;

errors: No known data errors&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Looking at this output now, I realize I probably should have added the new
drive by &lt;code&gt;uuid&lt;/code&gt; instead of pathname&amp;hellip;hmmm&amp;hellip;&lt;/p&gt;

&lt;p&gt;Oh well. That is a post for another day. At least my broken drive
has &lt;em&gt;finally&lt;/em&gt; been replaced!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Shell Stuff: Easy File Cleanup</title>
      <link>http://ryan.himmelwright.net/post/shell-stuff-find-grep-sub/</link>
      <pubDate>Sat, 05 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>http://ryan.himmelwright.net/post/shell-stuff-find-grep-sub/</guid>
      <description>&lt;p&gt;Applications can leave their junk files all over the place. While I
appreciate that all of the &lt;code&gt;.swp&lt;/code&gt;, &lt;code&gt;.retry&lt;/code&gt;, and &lt;code&gt;&amp;quot;conflict&amp;quot;&lt;/code&gt; files are there to
help me when things go wrong&amp;hellip; sometimes I just want to clean up my
file system. So&amp;hellip; here is a simple string of commands I often use to declutter
my files.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;DISCLAIMER:&lt;/em&gt; I know there are &lt;em&gt;MANY&lt;/em&gt; ways to accomplish this.  The method
described in this post is to share &lt;strong&gt;one&lt;/strong&gt; efficient solution I use, that might
help someone that currently knows &lt;strong&gt;zero&lt;/strong&gt;.&lt;/p&gt;

&lt;h3 id=&#34;the-commands&#34;&gt;The commands&lt;/h3&gt;

&lt;p&gt;First, lets quickly meet the commands we will be using:&lt;/p&gt;

&lt;h3 id=&#34;find&#34;&gt;Find&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;find&lt;/code&gt; is a classic UNIX command that searches for files in a directory
hierarchy. By default, it writes out the file path for each file/directory that
it finds.&lt;/p&gt;

&lt;h4 id=&#34;example&#34;&gt;Example&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;➜  tree
.
├── dirA
│   ├── file3
│   ├── file4
│   └── file5
├── dirB
│   └── file6
├── file1
└── file2

2 directories, 6 files

➜  find .
.
./file2
./file1
./dirB
./dirB/file6
./dirA
./dirA/file5
./dirA/file4
./dirA/file3&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;grep&#34;&gt;Grep&lt;/h3&gt;

&lt;p&gt;Another classic. Basically, &lt;code&gt;grep&lt;/code&gt; searches for a pattern in each file
provided. In addition to files, it can search text passed through a pipe (this
is important for our use, but more on that later).&lt;/p&gt;

&lt;h4 id=&#34;example-1&#34;&gt;Example&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;➜  cat file1
This is a fake file
with a few lines of content.

However, I want search for something
without opening it...

Secret: 12345

I wonder if I will be able to get it...


➜  grep Secret file1
Secret: 12345&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;command-substitution&#34;&gt;Command Substitution&lt;/h3&gt;

&lt;p&gt;Lastly, &lt;em&gt;command substitution&lt;/em&gt; is taking one command, and using it&amp;rsquo;s output as
&lt;em&gt;part&lt;/em&gt; of &lt;em&gt;another command&lt;/em&gt;. Traditionally, this was done by calling the
substitution command `inside backticks`, but it &lt;a href=&#34;http://mywiki.wooledge.org/BashFAQ/082&#34;&gt;is now preferred to use
$(COMMAND) instead of backticks&lt;/a&gt;.&lt;/p&gt;

&lt;h4 id=&#34;example-2&#34;&gt;Example&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;➜ echo I am at: `pwd`
I am at: /tmp/demo&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;or (preferred):&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-test&#34; data-lang=&#34;test&#34;&gt;➜ echo I am at: $(pwd)
I am at: /tmp/demo&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;pipes&#34;&gt;Pipes&lt;/h3&gt;

&lt;p&gt;An &lt;a href=&#34;https://en.wikipedia.org/wiki/Pipeline_(Unix)&#34;&gt;unix pipe&lt;/a&gt; (&lt;code&gt;|&lt;/code&gt;) directs the
&lt;em&gt;output&lt;/em&gt; of one command, to be used as the &lt;em&gt;input&lt;/em&gt; for another command. Pipes
can be used to chain together several commands, forming a &lt;em&gt;pipeline&lt;/em&gt;.&lt;/p&gt;

&lt;h4 id=&#34;example-3&#34;&gt;Example&lt;/h4&gt;

&lt;p&gt;The output of &lt;code&gt;ls&lt;/code&gt; can be fed as input to &lt;code&gt;wc&lt;/code&gt; (word count) to create a
pipeline command that returns the number of files/directories in the current directory.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;➜ ls
dirA  dirB  file1  file2

➜ ls | wc -l
&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;putting-it-all-together&#34;&gt;Putting It All Together&lt;/h3&gt;

&lt;p&gt;Now that we know all the parts, how does it all fit together? One particular
shell chain I find convenient is pairing &lt;code&gt;find&lt;/code&gt; and &lt;code&gt;grep&lt;/code&gt; to recursively get
all the paths of a particular file type, and then use it in a command
substitution to pass that result on to another command (such as &lt;code&gt;rm&lt;/code&gt;).&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;COMMAND &lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;find . | grep SEARCHSTRING&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This is the combination I use to clean up my directories. While working on
writing ansible playbooks, I can generate a few &lt;code&gt;*.retry&lt;/code&gt; files, as well as
some &lt;code&gt;*.swp&lt;/code&gt; files from editing in vim.&lt;/p&gt;

&lt;h4 id=&#34;example-4&#34;&gt;Example&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;➜ find . | grep .retry          &lt;span style=&#34;color:#75715e&#34;&gt;## Find *.retry files&lt;/span&gt;
./file1.retry
./dirA/file5.retry
./dirA/file3.retry

➜ rm &lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;find . | grep .retry&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;## Delete *.retry files&lt;/span&gt;

➜ find . | grep .retry          &lt;span style=&#34;color:#75715e&#34;&gt;## Check that they were deleted&lt;/span&gt;

➜&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;summary&#34;&gt;Summary&lt;/h3&gt;

&lt;p&gt;That&amp;rsquo;s it. A small post for a &lt;em&gt;simple&lt;/em&gt; but &lt;strong&gt;powerful&lt;/strong&gt; command line set.  If
you haven&amp;rsquo;t used this team of commands before, give it a try sometime! Have
fun!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Configuring Pass, the Standard Unix Password Manager</title>
      <link>http://ryan.himmelwright.net/post/setting-up-pass/</link>
      <pubDate>Wed, 12 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>http://ryan.himmelwright.net/post/setting-up-pass/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve been using &lt;code&gt;pass&lt;/code&gt; to manage my passwords for quite some time.
During the early days of use, I occasionally had difficulty configuring it on
new machines, but those days appear to be long gone. It is a simple, generic,
yet flexible system.  Here&amp;rsquo;s how to get started.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;(but first, some background&amp;hellip; feel free to skip ahead)&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&#34;my-password-manager-history&#34;&gt;My Password Manager History&lt;/h2&gt;

&lt;p&gt;For the longest time, I didn&amp;rsquo;t use a password manager (in my defence, not many
people did). Then in college, I started using
&lt;a href=&#34;https://www.lastpass.com/&#34;&gt;LastPass&lt;/a&gt;. It was simple and made it easy to switch
all of my passwords to randomly generated ones. I had a good system that
worked for a few years, and  was even able to integrate my
&lt;a href=&#34;https://www.yubico.com&#34;&gt;yubikey&lt;/a&gt; with it.&lt;/p&gt;

&lt;p&gt;&lt;center&gt;
&lt;a href=&#34;../../img/posts/setting-up-pass/LastPass-Logo.png&#34;&gt;&lt;img alt=&#34;LastPass logo&#34; src=&#34;../../img/posts/setting-up-pass/LastPass-Logo.png&#34; style=&#34;max-width: 100%;&#34;/&gt;&lt;/a&gt;
&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;Then in 2015, Lastpass was acquired by &lt;a href=&#34;https://www.logmeininc.com&#34;&gt;LogMeIn&lt;/a&gt;,
which had a questionable past of Linux support. Like many others in the open
source community&amp;hellip; I started looking for alternatives.&lt;/p&gt;

&lt;p&gt;I had already been searching for a LastPass replacement even before the
acquisition. My search was mainly fueled by one big issue I had with
LastPass&amp;hellip; it required a web browser to use.  Additionally, to utilize it&amp;rsquo;s full
feature set, it needed to run as a Chrome or Firefox plugin. As someone who
often uses alternative web browsers (like &lt;a href=&#34;https://qutebrowser.org&#34;&gt;qutebrowser&lt;/a&gt;),
or works on headless machines, I try not to use applications that exist solely
as a FireFox/Chome app.  I am also not a fan of pure website-apps in
general.&lt;/p&gt;

&lt;p&gt;So, as the I watched others switch password managers amongst the acquisition
hype, one switch I remember seeing was Chris Fischer of the Linux Action Show.
In episode 387 of LAS, Chris and Noah (his co-host) discussed LastPass alternatives, and
Chris highlighted his switch to
&lt;a href=&#34;https://www.youtube.com/watch?v=OfgZ5Fh-NfE&amp;amp;feature=youtu.be&amp;amp;t=4935&#34;&gt;pass&lt;/a&gt;.
While I don&amp;rsquo;t think he kept with the system long-term&amp;hellip; I have.&lt;/p&gt;

&lt;h2 id=&#34;what-i-like-about-pass-https-www-passwordstore-org&#34;&gt;What I like about &lt;a href=&#34;https://www.passwordstore.org&#34;&gt;pass&lt;/a&gt;&lt;/h2&gt;

&lt;h4 id=&#34;unix-philosophy-simplicity&#34;&gt;Unix Philosophy &amp;ldquo;Simplicity&amp;rdquo;&lt;/h4&gt;

&lt;p&gt;Okay. The average computer user will not think &lt;code&gt;pass&lt;/code&gt; is &amp;ldquo;simple&amp;rdquo;. I agree.
However, being designed to follow the &lt;a href=&#34;https://en.wikipedia.org/wiki/Unix_philosophy&#34;&gt;Unix
philosophy&lt;/a&gt;, pass&amp;rsquo;s &lt;em&gt;architecture
is&lt;/em&gt;. Basically, pass is just a nice wrapper around a bunch of
&lt;a href=&#34;https://en.wikipedia.org/wiki/GNU_Privacy_Guard&#34;&gt;gpg&lt;/a&gt; encrypted text files. It
is a minimal, but tested solution.  This model makes pass easily compatible
with many other great tools, such as bash, git,
&lt;a href=&#34;https://git.zx2c4.com/password-store/tree/contrib/dmenu&#34;&gt;dmenu&lt;/a&gt;,
&lt;a href=&#34;https://hackage.haskell.org/package/xmonad-contrib-0.13/docs/XMonad-Prompt-Pass.html&#34;&gt;xmonad&lt;/a&gt;
and &lt;a href=&#34;https://git.zx2c4.com/password-store/tree/contrib/emacs&#34;&gt;emacs&lt;/a&gt;.&lt;/p&gt;

&lt;h4 id=&#34;command-line-tool&#34;&gt;Command Line Tool&lt;/h4&gt;

&lt;p&gt;As a command-line tool, I can use pass anywhere. It doesn&amp;rsquo;t matter how conventional or strange the
setup may be. I can have it on my desktop, on a headless server, or even inside a container. It
makes no difference.  Even if I am on a public computer, if I can &lt;code&gt;ssh&lt;/code&gt; into one of my servers, I
can access my passwords.&lt;/p&gt;

&lt;h4 id=&#34;flexible&#34;&gt;Flexible&lt;/h4&gt;

&lt;p&gt;By default, pass assumes the first line of a store file is the password.  However, the
multi-line contents of a pass file can be anything. For example, pass could be used securely store
encrypted notes. This gives the system a ton of flexibility, as the password items don&amp;rsquo;t &lt;em&gt;have&lt;/em&gt; to
conform to any sort of template.&lt;/p&gt;

&lt;h2 id=&#34;installing-pass-help-packages&#34;&gt;Installing Pass &amp;amp; Help Packages&lt;/h2&gt;

&lt;p&gt;On Fedora, pass can be installed using &lt;code&gt;dnf&lt;/code&gt;. For other systems, check out the
&amp;ldquo;Download&amp;rdquo; section of the &lt;a href=&#34;https://www.passwordstore.org/&#34;&gt;pass website&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo dnf install pass&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;configuring-pass&#34;&gt;Configuring Pass&lt;/h2&gt;

&lt;p&gt;After installing pass, there are few steps to configure it. First, we need to create a gpg key if
one doesn&amp;rsquo;t already exist. Then, we need to initialize a password-store using that key.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; &lt;em&gt;I went a little heavy with the animation images in the remainder of
the post. Sorry. I hope they are more useful than annoying. Being a visual learner, at the very
least they are helpful for me when I reference this post in the future. &amp;hellip;&lt;/em&gt;&lt;/p&gt;

&lt;h3 id=&#34;new-gpg-key&#34;&gt;New GPG Key&lt;/h3&gt;

&lt;p&gt;&lt;img alt=&#34;animation running gpg --gen-key&#34; src=&#34;../../img/posts/setting-up-pass/animation-hover.png&#34; onmouseover=&#34;this.src=&#39;../../img/posts/setting-up-pass/generate-gpg-keys.gif&#39;&#34; onmouseout=&#34;this.src=&#39;../../img/posts/setting-up-pass/animation-hover.png&#39;&#34; style=&#34;max-width: 100%;&#34;/&gt;
&lt;div class=&#34;caption&#34;&gt;Generate a new gpg key with &lt;code&gt;gpg2 --full-gen-key&lt;/code&gt;.&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;To create a gpg key, the &lt;code&gt;gpg2 --gen-key&lt;/code&gt; command is normally used.  However, I opted to use &lt;code&gt;gpg2
--full-gen-key&lt;/code&gt;, which allows for a bit more control during setup.  The command will prompt for
several bits of information, and the default selections are generally fine for most of the options
(Personally, I use a 4096-bit key, because&amp;hellip; why not?). At the end it will ask for a
name, Password, and optional comment.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;It should be noted that &lt;code&gt;gpg2&lt;/code&gt; most likely needs to be used instead of &lt;code&gt;gpg&lt;/code&gt;
for pass. However, it may vary depending on distribution and the package
versions.&lt;/em&gt;&lt;/p&gt;

&lt;h3 id=&#34;pass-init&#34;&gt;Pass Init&lt;/h3&gt;

&lt;p&gt;&lt;img alt=&#34;Crating new pass store with pass init&#34; src=&#34;../../img/posts/setting-up-pass/animation-hover.png&#34; onmouseover=&#34;this.src=&#39;../../img/posts/setting-up-pass/pass-init.gif&#39;&#34; onmouseout=&#34;this.src=&#39;../../img/posts/setting-up-pass/animation-hover.png&#39;&#34; style=&#34;max-width: 100%;&#34;/&gt;
&lt;div class=&#34;caption&#34;&gt;Initialize a new pass store with &lt;code&gt;pass init&lt;/code&gt;.&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;After a gpg key has been generated, it can be used with pass.  First, find the key&amp;rsquo;s ID by using
&lt;code&gt;gpg2 --list-secret-keys&lt;/code&gt;. Then, configure pass with &lt;code&gt;pass init GPG-KEY-ID&lt;/code&gt;. This will create a
password-store directory, located by default at &lt;code&gt;~/.password-store/&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id=&#34;add-some-items&#34;&gt;Add some items&lt;/h3&gt;

&lt;p&gt;&lt;img alt=&#34;Adding, editing, and retrieving some passwords with `pass`, `pass insert`, `pass generate`, and `pass edit`&#34; src=&#34;../../img/posts/setting-up-pass/animation-hover.png&#34; onmouseover=&#34;this.src=&#39;../../img/posts/setting-up-pass/pass-add-demo.gif&#39;&#34; onmouseout=&#34;this.src=&#39;../../img/posts/setting-up-pass/animation-hover.png&#39;&#34; style=&#34;max-width: 100%;&#34;/&gt;
&lt;div class=&#34;caption&#34;&gt;Adding, editing, and retrieving some passwords with &lt;code&gt;pass&lt;/code&gt;, &lt;code&gt;pass insert&lt;/code&gt;, &lt;code&gt;pass generate&lt;/code&gt;, and &lt;code&gt;pass edit&lt;/code&gt;.&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;With pass initialized, lets start adding passwords to it! Here are &lt;em&gt;some&lt;/em&gt; of
the most common commands to do so:&lt;/p&gt;

&lt;h4 id=&#34;insert&#34;&gt;insert&lt;/h4&gt;

&lt;p&gt;Simply put, &lt;code&gt;pass insert&lt;/code&gt; &amp;hellip; inserts a password. Call it with the desired folder/file
structure for the password, and pass will then prompt for the password to
save. That&amp;rsquo;s it.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;pass insert Shopping/amazon.com/ryan
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;pass-generate&#34;&gt;pass generate&lt;/h4&gt;

&lt;p&gt;In addition to inserting existing passwords, pass can also &lt;em&gt;generate new&lt;/em&gt; ones
using &lt;code&gt;pass generate&lt;/code&gt;. Just provide the password path, and optionally the
length of the password. Pass will then generate a random password, spit it out
on screen, and insert the entry to the password-store.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;pass generate Shopping/SomeFakeStore/ryan 35
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;pass-edit&#34;&gt;pass edit&lt;/h4&gt;

&lt;p&gt;Generating passwords is great, but being a forgetful person, I like to keep additional information
in my pass entries (username, email, website url). This is where &lt;code&gt;pass edit&lt;/code&gt; comes in. When called,
&lt;code&gt;pass edit&lt;/code&gt; will open up the contents of the entry in the default editor. From there, make the
changes, and save.&lt;/p&gt;

&lt;p&gt;For example:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;pass edit Shopping/SomeFakeStore/ryan
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Then, in vim:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&amp;lt;&amp;amp;DdU1x&amp;lt;&amp;amp;~&amp;amp;&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;;w7w&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;kvsWdHAF-\Vi&amp;#34;&lt;/span&gt;I9Q&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;I
---
Username: ryan
Password: &amp;lt;&amp;amp;DdU1x&amp;lt;&amp;amp;~&amp;amp;&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;;w7w&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;kvsWdHAF-\Vi&amp;#34;&lt;/span&gt;I9Q&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;I
URL: https://www.some-bs-store.com
Notes: I love this place!&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id=&#34;pass&#34;&gt;pass&lt;/h4&gt;

&lt;p&gt;Lastly, to retrieve stored passwords, call &lt;code&gt;pass&lt;/code&gt; with the
password entry. Optionally, use the &lt;code&gt;-c&lt;/code&gt; flag to copy the password
(first line if a multi-line entry) to the clipboard instead of spewing it into
the terminal.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;pass Shopping/SomeFakeStore/ryan
&lt;span style=&#34;color:#75715e&#34;&gt;## or ##&lt;/span&gt;
pass -c Shopping/SomeFakeStore/ryan&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;making-pass-better&#34;&gt;Making Pass Better&lt;/h2&gt;

&lt;p&gt;With pass&amp;rsquo;s flexibility, there are many additional features to help improve it for each user&amp;rsquo;s
needs.  For me, there are two extensions that make my pass experience &lt;em&gt;much&lt;/em&gt; more enjoyable.&lt;/p&gt;

&lt;h3 id=&#34;pass-git&#34;&gt;Pass Git&lt;/h3&gt;

&lt;p&gt;&lt;img alt=&#34;Managing and maintaining the password-store with `pass git`&#34; src=&#34;../../img/posts/setting-up-pass/animation-hover.png&#34; onmouseover=&#34;this.src=&#39;../../img/posts/setting-up-pass/pass-git.gif&#39;&#34; onmouseout=&#34;this.src=&#39;../../img/posts/setting-up-pass/animation-hover.png&#39;&#34; style=&#34;max-width: 100%;&#34;/&gt;
&lt;div class=&#34;caption&#34;&gt;Use git to automatically maintain your password-store&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;Password-Store items are text files, which allows them to be easily version controlled.
Consequently, pass has built in support for git with the &lt;code&gt;pass git&lt;/code&gt; command. If a password-store
is linked up to a git repo, normal git commands (&lt;code&gt;add&lt;/code&gt;, &lt;code&gt;mv&lt;/code&gt;, &lt;code&gt;rm&lt;/code&gt;&amp;hellip;) can be used with the store.&lt;/p&gt;

&lt;p&gt;Additionally, when modifying the store&amp;rsquo;s contents, &lt;code&gt;pass git&lt;/code&gt; will automatically create commits
that reflect the changes. After adding or modifying a password, issue the command &lt;code&gt;pass git push&lt;/code&gt; on the updated
machine, and then &lt;code&gt;pass git pull&lt;/code&gt; on others to sync the changes.&lt;/p&gt;

&lt;h3 id=&#34;passmeu&#34;&gt;Passmeu&lt;/h3&gt;

&lt;p&gt;&lt;center&gt;
&lt;video style=&#34;max-width:100%;&#34; controls&gt;
  &lt;source src=&#34;../../img/posts/setting-up-pass/passmenu_demo.mp4&#34; type=&#34;video/mp4&#34;&gt;
  &lt;source src=&#34;movie.ogg&#34; type=&#34;video/ogg&#34;&gt;
Your browser does not support the video tag.
&lt;/video&gt;
&lt;div id=&#34;caption&#34;&gt;&lt;code&gt;passmenu&lt;/code&gt; lets you easily search and select a pass item.&lt;/div&gt;
&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;While having a CLI password manager is nice when working with headless systems, it can be a bit
cumbersome for normal day-to-day use. Hence,
&lt;a href=&#34;https://git.zx2c4.com/password-store/tree/contrib/dmenu/passmenu&#34;&gt;passmenu&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Passmenu is a script (now built into the upstream project) that wraps
&lt;a href=&#34;https://tools.suckless.org/dmenu/&#34;&gt;dmenu&lt;/a&gt; around pass. When &lt;code&gt;passmenu&lt;/code&gt; is run, &lt;code&gt;dmenu&lt;/code&gt; opens up
with all the password-store items to search/filter from. When an item is
selected in dmenu, the user is prompted for the gpg password (if it hasn&amp;rsquo;t been unlocked recently),
after which the password is then temporarily added to the user&amp;rsquo;s clipboard.&lt;/p&gt;

&lt;p&gt;On all my computers, I bind the command &lt;code&gt;passmenu&lt;/code&gt; to the keys &lt;code&gt;SUPER&lt;/code&gt; + &lt;code&gt;SHIFT&lt;/code&gt; + &lt;code&gt;P&lt;/code&gt;.  Whenever I
need a password, I just hit those three keys, and dmenu pops up so I can search for the password I
want.  After typing in my master passphrase, I can paste the password wherever I need it.  Passmenu
makes pass much more reasonable to use.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;See Also: &lt;a href=&#34;https://github.com/carnager/rofi-pass&#34;&gt;rofi-pass&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&#34;setting-up-your-pass-setup-on-a-new-system&#34;&gt;Setting up your pass setup on a new system&lt;/h2&gt;

&lt;p&gt;Now that I&amp;rsquo;ve done it over a hundred times, setting up a new system is easy. Here&amp;rsquo;s my usual steps:&lt;/p&gt;

&lt;h4 id=&#34;export-gpg-key&#34;&gt;Export GPG Key&lt;/h4&gt;

&lt;p&gt;&lt;img alt=&#34;Export a gpg key to use with pass on another system&#34; src=&#34;../../img/posts/setting-up-pass/animation-hover.png&#34; onmouseover=&#34;this.src=&#39;../../img/posts/setting-up-pass/export-key.gif&#39;&#34; onmouseout=&#34;this.src=&#39;../../img/posts/setting-up-pass/animation-hover.png&#39;&#34; style=&#34;max-width: 100%;&#34;/&gt;
&lt;div class=&#34;caption&#34;&gt;Export a gpg key to save or use on another system.&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;First, export the password-store&amp;rsquo;s gpg key.  To do that, use &lt;code&gt;gpg2 --list-secret-keys&lt;/code&gt; to confirm the
key&amp;rsquo;s ID, then export that key to a file with the following command:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;gpg2 --export-secret-keys KEY-ID &amp;gt;&amp;gt; key-filename.gpg
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Next, transfer that file to the new machine.&lt;/p&gt;

&lt;h4 id=&#34;import-gpg-key&#34;&gt;Import GPG Key&lt;/h4&gt;

&lt;p&gt;&lt;img alt=&#34;Import a gpg key and trust it to use with pass&#34; src=&#34;../../img/posts/setting-up-pass/animation-hover.png&#34; onmouseover=&#34;this.src=&#39;../../img/posts/setting-up-pass/pass-import-gpg-key.gif&#39;&#34; onmouseout=&#34;this.src=&#39;../../img/posts/setting-up-pass/animation-hover.png&#39;&#34; style=&#34;max-width: 100%;&#34;/&gt;
&lt;div class=&#34;caption&#34;&gt;Import and trust a gpg key to use it with pass.&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;On the new machine, import the gpg key using the following command (note, you
will be required to enter the key&amp;rsquo;s passphrase):&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;gpg2 --import key-filename.gpg
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;After the key is imported, its &lt;em&gt;trust level&lt;/em&gt; will have to be set to &lt;em&gt;ultimate&lt;/em&gt;. Use the command
&lt;code&gt;gpg2 --edit-key KEY-ID&lt;/code&gt; to enter the edit prompt. From there, type &lt;code&gt;trust&lt;/code&gt; and hit &lt;code&gt;ENTER&lt;/code&gt;. The
various levels will be shown on screen. Enter and confirm &lt;code&gt;5&lt;/code&gt;, to select &amp;lsquo;Ultimate&amp;rsquo;. Lastly, use
&lt;code&gt;quit&lt;/code&gt; to leave the gpg key editor.&lt;/p&gt;

&lt;h4 id=&#34;pull-pass-repo&#34;&gt;Pull Pass Repo&lt;/h4&gt;

&lt;p&gt;With the keys configured, the last step is to pull down the password-store to the new machine. If using git, this can be done with &lt;code&gt;pass git
clone&lt;/code&gt;&amp;hellip; but if I&amp;rsquo;m being honest, I usually just do a normal &lt;code&gt;git clone&lt;/code&gt;, and then move
the folder to &lt;code&gt;~/.password-store/&lt;/code&gt;. If not using git, just copy the store&amp;rsquo;s directory and files to
the new machine. The important thing is that the store can be found at &lt;code&gt;~/.password-store&lt;/code&gt; (by
default, this of course can be changed using &lt;code&gt;pass init&lt;/code&gt;).&lt;/p&gt;

&lt;h3 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h3&gt;

&lt;p&gt;That&amp;rsquo;s about it. As I previously stated, I&amp;rsquo;ve been loving pass for years, and I
don&amp;rsquo;t plan to be switching off of it any time soon. At this point, if there is
something I want to improve with my password setup&amp;hellip; I&amp;rsquo;m sure the community
has already figured out how to do it with pass!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Designing my new Ryzen Workstation</title>
      <link>http://ryan.himmelwright.net/post/charmeleon-desktop-design/</link>
      <pubDate>Mon, 26 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>http://ryan.himmelwright.net/post/charmeleon-desktop-design/</guid>
      <description>&lt;p&gt;Over the past few years (particularly after moving to the &lt;a href=&#34;../../post/my-t470/&#34;&gt;T470&lt;/a&gt;
as my main device), I have been anticipating what my next desktop
workstation build will look like. For a period of time, I was convinced that
I would build a &lt;a href=&#34;https://www.techspot.com/review/1155-affordable-dual-xeon-pc/&#34;&gt;muti-socket, used xeon
build&lt;/a&gt;. Then, in 2017
AMD released their &lt;a href=&#34;https://en.wikipedia.org/wiki/Ryzen&#34;&gt;Ryzen&lt;/a&gt;
series CPUs&amp;hellip;&lt;/p&gt;

&lt;h2 id=&#34;why-a-desktop&#34;&gt;Why a Desktop?&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;../../img/posts/chameleon-desktop-design/kadabra-cpu-usage.png&#34;&gt;&lt;img alt=&#34;Full system monitor on Laptop&#34; src=&#34;../../img/posts/charmeleon-desktop-design/kadabra-cpu-usage.png&#34; style=&#34;max-width: 100%;&#34;/&gt;&lt;/a&gt;
&lt;div class=&#34;caption&#34;&gt;My T470 has been a little tight on resources.&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;../../post/sold-my-bonobo/&#34;&gt;My&lt;/a&gt; &lt;a href=&#34;../../post/my-t470/&#34;&gt;laptops&lt;/a&gt; &lt;a href=&#34;../../post/my-new-used-x230&#34;&gt;have&lt;/a&gt;
served the majority of my needs these last few years, but I have been feeling
a bit restricted when trying to do more demanding workloads.
While I still side with a &amp;ldquo;&lt;em&gt;use low-powered, portable computers, and remote
into more powerful ones when needed&lt;/em&gt;&amp;rdquo; mentality, I enjoy having &lt;em&gt;one&lt;/em&gt; of those
power computers being my physical, main workstation desktop.&lt;/p&gt;

&lt;h2 id=&#34;workstation-goals&#34;&gt;Workstation Goals&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;../../img/posts/chameleon-desktop-design/ryzen-logo.png&#34;&gt;&lt;img alt=&#34;Ryzen Logo&#34; src=&#34;../../img/posts/charmeleon-desktop-design/ryzen-logo.png&#34; style=&#34;max-width: 100%;&#34;/&gt;&lt;/a&gt;
&lt;div class=&#34;caption&#34;&gt;My T470 has been a little tight on resources.&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;While building a new workstation may be fun, I have particular goals I want it
to achieve. Additionally, it seems like 98% of online build guides are for
designing &lt;em&gt;gaming&lt;/em&gt; desktops&amp;hellip; which is not exactly what I want. So, the
features I wanted in &lt;em&gt;my build&lt;/em&gt;, likely deviate from much of the
&lt;em&gt;suggested&lt;/em&gt; guidance found online, which tends to focus entirely on gaming
performance (more FPS). Here is the breakdown of what I was looking for:&lt;/p&gt;

&lt;h4 id=&#34;more-cores&#34;&gt;More Cores&lt;/h4&gt;

&lt;p&gt;I tend to have workloads that benefit from multiple cores (and threads). For
example, I run a bunch of virtual machines, often at the same time. While my
server&amp;rsquo;s 4 core Xeon handles day to day VMs just fine, it is nice to have a
workstation with several cores to spin up a virtualized cluster across. Beyond
VMs, I compile code, compress/decompress file packages, and occasionally encode
audio/video files. These are all tasks that love having many threads at their
disposal.&lt;/p&gt;

&lt;h4 id=&#34;lots-of-fast-ram&#34;&gt;Lots of (&lt;em&gt;fast&lt;/em&gt;) Ram&lt;/h4&gt;

&lt;p&gt;When running VMs, the amount of available RAM is usually more limiting than the
number of cpu cores. For example, when running 6 VM&amp;rsquo;s, my server&amp;rsquo;s 4-core Xeon
will typically be 15-35% utilized, whereas it&amp;rsquo;s 20GB of RAM is nearly full.  If
I want more cores, I should supplement it with lots of RAM. In addition&amp;hellip; I
use electron apps (Slack, Spotify,  etc.) and modern web browsers&amp;hellip; so yea&amp;hellip;. more RAM.&lt;/p&gt;

&lt;p&gt;Being a Ryzen build, the RAM also needs to be &lt;em&gt;fast&lt;/em&gt;.  More than other CPU
architectures, Ryzen CPUs actually &lt;a href=&#34;https://www.youtube.com/watch?v=g0SDr3EHHmY&#34;&gt;&lt;em&gt;run better&lt;/em&gt; with faster
RAM&lt;/a&gt;.&lt;/p&gt;

&lt;h4 id=&#34;fast-storage&#34;&gt;Fast Storage&lt;/h4&gt;

&lt;p&gt;This main goal of this build is for it to be a multi-tasking beast. If I am
running several VMs and a bunch of applications, utilizing a stack of &lt;em&gt;fast&lt;/em&gt; RAM
to move data around&amp;hellip; I need good &lt;em&gt;fast&lt;/em&gt; storage with &lt;a href=&#34;https://www.youtube.com/watch?v=Bh_f0uof7Jw&amp;amp;feature=youtu.be&amp;amp;t=359&#34;&gt;MOAR
IOPs&lt;/a&gt; to
support of these operations, which will all be competing for disk access. While I
wouldn&amp;rsquo;t mind having space to eventually throw in a pair 3.5&amp;rdquo; rust drives to configure as a
ZFS data pool, the goal for the initial &lt;em&gt;primary&lt;/em&gt; drive of this
machine is the most IOPs I can &lt;em&gt;afford&lt;/em&gt;. So, I ideally &lt;em&gt;want&lt;/em&gt; a m.2 NVMe SSD,
but &lt;em&gt;need&lt;/em&gt; a normal 2.5&amp;rdquo; SATA SSD at the very least.&lt;/p&gt;

&lt;h4 id=&#34;some-gaming-ability&#34;&gt;&lt;em&gt;Some&lt;/em&gt; Gaming Ability&lt;/h4&gt;

&lt;p&gt;While it doesn&amp;rsquo;t have to be a &lt;em&gt;gaming machine&lt;/em&gt;&amp;hellip; I would like to be able to
play the &lt;em&gt;occasional&lt;/em&gt; game. I don&amp;rsquo;t mind playing games with lower graphic
settings on my laptops, but I &lt;em&gt;do mind&lt;/em&gt; that even with the lower settings, the
CPUs nearly max out, which spikes up the temperature.
Increased graphics performance would also better support &lt;a href=&#34;../../post/new-lgud4379b/&#34;&gt;my large
monitor&lt;/a&gt;.  A discrete graphics card would be nice, ideally
an AMD one due to their recent work on improving their open source drivers.&lt;/p&gt;

&lt;h4 id=&#34;ability-to-upgrade&#34;&gt;Ability to Upgrade&lt;/h4&gt;

&lt;p&gt;Most importantly, I want this computer to be a solid &lt;em&gt;base&lt;/em&gt; that I can upgrade
over the next several years. Upgradability is hands-down &lt;em&gt;the main&lt;/em&gt; advantage
of switching to a desktop over a laptop for my main rig. I want this build
designed so that as my needs grow, I can easily max out the RAM, add storage,
or upgrade the CPU and/or GPU.&lt;/p&gt;

&lt;h2 id=&#34;final-build-selections&#34;&gt;Final Build Selections&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;../../img/posts/chameleon-desktop-design/charmeleon.png&#34;&gt;&lt;img alt=&#34;Chameleon Picture&#34; src=&#34;../../img/posts/charmeleon-desktop-design/charmeleon.png&#34; style=&#34;max-width: 40%; float: right;&#34;/&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After spending weeks researching all the parts on the market and building
probably 50 theoretical builds, I eventually settled on &lt;a href=&#34;https://pcpartpicker.com/user/himmelwr/saved/#view=MhbcYJ&#34;&gt;my final part list&lt;/a&gt;.&lt;/p&gt;

&lt;h4 id=&#34;name-charmeleon&#34;&gt;Name: Charmeleon&lt;/h4&gt;

&lt;p&gt;Since my last desktop build was named &amp;ldquo;Charmander&amp;rdquo;, I figured &amp;ldquo;Charmeleon&amp;rdquo; was
fitting. Also, I&amp;rsquo;m then free to rename it to &amp;ldquo;Charzard&amp;rdquo; in the future if I &lt;em&gt;evolve&lt;/em&gt;
the build to a next-generation Ryzen 7&amp;hellip;&lt;/p&gt;

&lt;h4 id=&#34;cpu-ryzen-5-2600-https-en-wikichip-org-wiki-amd-ryzen-5-2600&#34;&gt;CPU: &lt;a href=&#34;https://en.wikichip.org/wiki/amd/ryzen_5/2600&#34;&gt;Ryzen 5 2600&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;&lt;a href=&#34;../../img/posts/chameleon-desktop-design/ryzen2600.jpg&#34;&gt;&lt;img alt=&#34;ryzen 2600&#34; src=&#34;../../img/posts/charmeleon-desktop-design/ryzen2600.jpg&#34; style=&#34;max-width: 40%; float: left;&#34;/&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;While I initially wanted a Ryzen 2700, it pushed the build out of budget.
Coming from a 4 core/4 thread system&amp;hellip; it&amp;rsquo;s likely that I don&amp;rsquo;t &lt;em&gt;need&lt;/em&gt; 8
cores/16 threads right off the bat. Honestly, 4 cores/8 threads would be a
noticeable improvement from what I&amp;rsquo;ve been using&amp;hellip; which is why I first
considered the Ryzen 5 2400g. I planned to start with the 2400g and upgrade to
the 2700 and a GPU once I had more cash. However, &lt;a href=&#34;https://forum.level1techs.com/t/finalizing-an-upgradable-ryzen-linux-build/134670/2&#34;&gt;someone on the level1tech
forums&lt;/a&gt;
reminded me that the 2600 was the same price as the 2400g, and I could get that
plus a GPU for not much more cost (considering I don&amp;rsquo;t need an expensive GPU).
After thinking it over, I realized that was my best option, and should
&lt;em&gt;actually&lt;/em&gt; fit my needs for quite awhile.&lt;/p&gt;

&lt;h4 id=&#34;motherboard-msi-b450-tomahawk-https-www-msi-com-motherboard-b450-tomahawk&#34;&gt;Motherboard: &lt;a href=&#34;https://www.msi.com/Motherboard/B450-TOMAHAWK&#34;&gt;MSI B450 Tomahawk&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;&lt;a href=&#34;../../img/posts/chameleon-desktop-design/tomahawk.jpg&#34;&gt;&lt;img alt=&#34;B450 Tomahawk motherboard&#34; src=&#34;../../img/posts/charmeleon-desktop-design/tomahawk.jpg&#34; style=&#34;max-width: 40%; float: right;&#34;/&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I had selected the MSI B450 Tomahawk after &lt;a href=&#34;https://www.youtube.com/watch?v=lxtrHDJUMt4&#34;&gt;Wendell reviewed
it&lt;/a&gt;. &lt;a href=&#34;https://www.youtube.com/watch?v=MWGzmbbimPw&amp;amp;feature=youtu.be&amp;amp;t=145&#34;&gt;Several
other&lt;/a&gt; &lt;a href=&#34;https://www.youtube.com/watch?v=MMJoLyrWa7E&amp;amp;feature=youtu.be&amp;amp;t=1260&#34;&gt;reviews
confirmed&lt;/a&gt; that it was a solid board, especially for the price. When I was
considering the 2400g, I had to switch to the &lt;a href=&#34;https://www.newegg.com/Product/Product.aspx?Item=N82E16813144188&#34;&gt;MSI B450 Gaming Pro Carbon
AC&lt;/a&gt;, because
the Tomahawk didn&amp;rsquo;t have a display output that the integrated graphics could
properly use with &lt;a href=&#34;../../post/new-lgud4379b/&#34;&gt;my UHD monitor&lt;/a&gt;&amp;rsquo;s resolution (I need a
display port). When I switched to the 2600, I was able to go back to the
TOMAHAWK, and funnel the cost savings towards getting my GPU.&lt;/p&gt;

&lt;h4 id=&#34;gpu-sapphire-1024-4gb-pulse-radeon-rx-560-http-www-sapphiretech-com-productdetial-asp-pid-3ecead87-2972-477a-a3be-480194d9fd6e-lang-eng&#34;&gt;GPU: &lt;a href=&#34;http://www.sapphiretech.com/productdetial.asp?pid=3ECEAD87-2972-477A-A3BE-480194D9FD6E&amp;amp;lang=eng&#34;&gt;Sapphire 1024 4GB PULSE Radeon RX 560&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;&lt;a href=&#34;../../img/posts/chameleon-desktop-design/rx560.png&#34;&gt;&lt;img alt=&#34;The KDE Plasma 5 extend display GUI&#34; src=&#34;../../img/posts/charmeleon-desktop-design/rx560.png&#34; style=&#34;max-width: 35%; float: left;&#34;/&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As discussed above, I don&amp;rsquo;t need a killer GPU as I don&amp;rsquo;t play very demanding
games. However, I did want something that could perform at least a &lt;em&gt;little
bit&lt;/em&gt;. So, &lt;a href=&#34;https://www.youtube.com/watch?v=237L9UGQtGk&amp;amp;t=422s&#34;&gt;I picked the rx560 over the
rx550&lt;/a&gt;. At first I planned
to get something like a rx580, which I still might eventually do&amp;hellip; but
I don&amp;rsquo;t think I will &lt;em&gt;need&lt;/em&gt; to for a long time.&lt;/p&gt;

&lt;h4 id=&#34;ram-g-skill-trident-z-32gb-2-x-16gb-ddr4-3200mhz-ram&#34;&gt;RAM: G.Skill - Trident Z 32GB (2 x 16GB) DDR4-3200Mhz RAM&lt;/h4&gt;

&lt;p&gt;&lt;a href=&#34;../../img/posts/chameleon-desktop-design/ram.png&#34;&gt;&lt;img alt=&#34;The KDE Plasma 5 extend display GUI&#34; src=&#34;../../img/posts/charmeleon-desktop-design/ram.png&#34; style=&#34;max-width: 40%; float: right;&#34;/&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I wanted to start out with 32GB of RAM, with the ability to easily upgrade to
64GB down the road. This meant that I needed a 2x16GB pack. Additionally, I
needed the RAM to be &lt;em&gt;fast&lt;/em&gt;, but still not &lt;em&gt;overpriced&lt;/em&gt;. Some research showed
that at least right now, &lt;a href=&#34;https://youtu.be/lxtrHDJUMt4?t=752&#34;&gt;3200Mhz seems to be the sweet spot, especially for my
particular motherboard&lt;/a&gt;. I originally
picked another kit, but the reviews for it weren&amp;rsquo;t great, so I switched to the
G.Skill kit for only a few dollars more, but with much better reviews. I also
briefly searched for kits with tighter timings, but they were &lt;em&gt;way&lt;/em&gt; more expensive and not worth it.&lt;/p&gt;

&lt;h4 id=&#34;case-fractal-design-meshify-c-dark-tg-atx-mid-tower-https-www-fractal-design-com-home-product-cases-meshify-meshify-c&#34;&gt;Case: &lt;a href=&#34;https://www.fractal-design.com/home/product/cases/meshify/meshify-c&#34;&gt;Fractal Design - Meshify C Dark TG ATX Mid Tower&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;&lt;a href=&#34;../../img/posts/chameleon-desktop-design/meshifyc.png&#34;&gt;&lt;img alt=&#34;The KDE Plasma 5 extend display GUI&#34; src=&#34;../../img/posts/charmeleon-desktop-design/meshifyc.png&#34; style=&#34;max-width: 30%; float: left; margin-bottom: 10px;&#34;/&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I wanted a case that was sturdy, sleek, but not too flashy or expensive. During my
search, the Fractal Design cases kept catching eye. Eventually, I found the
Meshify C TG Dark, which seemed to be universally loved by reviewers. Additionally,
it appeared to have &lt;a href=&#34;https://www.fractal-design.com/home/product/cases/meshify/meshify-c&#34;&gt;good
thermals&lt;/a&gt;,
which I liked. This was my easiest part to pick.&lt;/p&gt;

&lt;h4 id=&#34;psu-evga-supernova-g4-650w-80-gold-fully-modular-atx-psu-https-www-evga-com-products-product-aspx-pn-120-g1-0650-xr&#34;&gt;PSU: EVGA - &lt;a href=&#34;https://www.evga.com/products/product.aspx?pn=120-g1-0650-xr&#34;&gt;SuperNOVA G4 650W 80+ Gold, fully modular ATX PSU&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;&lt;a href=&#34;../../img/posts/chameleon-desktop-design/psu.png&#34;&gt;&lt;img alt=&#34;The KDE Plasma 5 extend display GUI&#34; src=&#34;../../img/posts/charmeleon-desktop-design/psu.png&#34; style=&#34;max-width: 35%; float: right; margin-bottom: 10px;&#34;/&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For the power supply, I wanted one that was at least gold rated, and fully
modular. So I searched for the highest rated PSUs fitting those requirements&amp;hellip;
and SuperNova popped up all over the place. At first I picked a 550w model, but
upped to the 650w at the last minute because it was about the same price and
gives me a little more room as I upgrade.&lt;/p&gt;

&lt;h4 id=&#34;storage-one-of-my-samsung-850-evo-ssds-temp&#34;&gt;Storage: One of my Samsung 850 Evo SSDs (temp)&lt;/h4&gt;

&lt;p&gt;Lastly, storage. For now I am just going to use a spare 250GB Samsung 850 Evo SSD
I had in my test laptop. I plan to eventually upgrade to a &lt;a href=&#34;https://www.samsung.com/semiconductor/minisite/ssd/product/consumer/970evo/&#34;&gt;500GB Samsung 970 Evo
m.2 NVMe
drive&lt;/a&gt;,
but the 850 will work for now.&lt;/p&gt;

&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;So after months of planing and research, my desktop parts have all been
ordered. Hopefully, it meets the goals I set out to solve, and I will be able
to upgrade it over the next few years&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Reset Plasma 5 Monitor Configuration</title>
      <link>http://ryan.himmelwright.net/post/reset-plasma5-monitor-config/</link>
      <pubDate>Wed, 14 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>http://ryan.himmelwright.net/post/reset-plasma5-monitor-config/</guid>
      <description>&lt;p&gt;Extending a laptop&amp;rsquo;s screen to an external display can often be a nightmare.
Sometimes, it might be best to just hit the reset button and configure from
scratch. With KDE Plasma 5, you can. Here&amp;rsquo;s how.&lt;/p&gt;

&lt;h2 id=&#34;issue&#34;&gt;Issue&lt;/h2&gt;

&lt;p&gt;While I love having a &lt;a href=&#34;../../post/my-t470/&#34;&gt;dock-able laptop&lt;/a&gt; and &lt;a href=&#34;../../post/new-lgud4379b&#34;&gt;my 43&amp;rdquo; 4k LG
monitor&lt;/a&gt;, getting them configured and agreeing with each other
can sometimes be a headache. Luckily, KDE Plasma 5 (the desktop environment
I&amp;rsquo;ve been using for awhile now) is fantastic and remembers previous display
configurations.&lt;/p&gt;

&lt;p&gt;However, when I am playing around with resolutions or multiple inputs,
sometimes I set something that doesn&amp;rsquo;t work&amp;hellip; and it is remembered, causing
more problems.&lt;/p&gt;

&lt;h2 id=&#34;the-fix&#34;&gt;The Fix&lt;/h2&gt;

&lt;p&gt;Luckily, there is an easy fix: just delete the saved profile, and
re-setup the display again. However, I often forget these very simple steps&amp;hellip;
hence, this post (and to help anyone else that needs it, of course :P).&lt;/p&gt;

&lt;h4 id=&#34;delete-old-profile&#34;&gt;Delete old profile&lt;/h4&gt;

&lt;p&gt;The first step is to delete the plasma profile that saves the screen settings.
Note, this may remove the profiles for &lt;em&gt;all&lt;/em&gt; previously configured displays,
but I am okay with it for &lt;em&gt;my&lt;/em&gt; use case.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;cd ~/.local.share
rm -rf kscreen&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id=&#34;extend-monitors-when-docked&#34;&gt;Extend monitors when docked&lt;/h4&gt;

&lt;p&gt;&lt;a href=&#34;../../img/posts/reset-plasma5-monitor-config/extended-monitor.png&#34;&gt;&lt;img alt=&#34;The KDE Plasma 5 extend display GUI&#34; src=&#34;../../img/posts/reset-plasma5-monitor-config/extend-monitor.png&#34; style=&#34;max-width: 100%;&#34;/&gt;&lt;/a&gt;
&lt;div class=&#34;caption&#34;&gt;The KDE Plasma 5 extend display GUI.&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;After deleting the config, dock or reconnect the laptop to the display. A GUI
with extension layout options should pop up. If it does, select the preferred
layout option.&lt;/p&gt;

&lt;h4 id=&#34;close-laptop-lid-don-t-disable&#34;&gt;Close laptop lid (don&amp;rsquo;t disable)&lt;/h4&gt;

&lt;p&gt;After extending the display, I usually try to make the monitor the primary
display and disable the laptop screen. This doesn&amp;rsquo;t seem to work (It causes my
monitor to blank). However, I have learned that if I simply &lt;em&gt;close my laptop
lid&lt;/em&gt; once it is connected&amp;hellip; it does both of those things for me. I always
forget this&amp;hellip; but now it&amp;rsquo;s documented!&lt;/p&gt;

&lt;h4 id=&#34;optional-reset-kscreen&#34;&gt;(Optional) Reset kscreen&lt;/h4&gt;

&lt;p&gt;After flipping around the displays so much, plasma shell may have gotten a bit
frazzled. If so, just reset it using the following command:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;kquitapp5 plasmashell &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; kstart plasmashell&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I like to execute this in krunner (alt-F2) so that it runs in the background,
and because I can usually still get to krunner, even if something goes terribly
wrong with plasmashell during the process.&lt;/p&gt;

&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;That&amp;rsquo;s it. While this post is rather short (for once), hopefully it will be useful. Enjoy!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Creating a CI/CD &#39;Draft&#39; Website with Jenkins (and Hugo)</title>
      <link>http://ryan.himmelwright.net/post/draft-website-with-jenkins/</link>
      <pubDate>Wed, 15 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>http://ryan.himmelwright.net/post/draft-website-with-jenkins/</guid>
      <description>&lt;p&gt;The last few months I have been working more with the open source
automation server, &lt;a href=&#34;https://jenkins.io/&#34;&gt;Jenkins&lt;/a&gt;. While digging into
it, I have been thinking of ways to improve my home build
environment. One idea, was to utilize Jenkins to automatically build
and deploy a &amp;ldquo;draft&amp;rdquo; website, so I can stage new posts/website change
on my home network, before publishing it to the &amp;ldquo;production&amp;rdquo;
website. Here is how that idea was Instantiated&amp;hellip;&lt;/p&gt;

&lt;h2 id=&#34;my-website&#34;&gt;My Website&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;../../img/posts/draft-website-jenkins/jenkins-logo.png&#34;&gt;&lt;img
src=&#34;../../img/posts/draft-website-jenkins/jenkins-logo.png&#34; style=&#34;max-width:
50%; float: left; margin: 0px 12px 0px 0px;&#34; alt=&#34;Jenkins Logo&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I have previously &lt;a href=&#34;../../post/website-transition-to-hugo/&#34;&gt;described&lt;/a&gt; how my
website is &lt;a href=&#34;../../post/website-switched-to-hugo/&#34;&gt;currently generated&lt;/a&gt;, using
the &lt;a href=&#34;https://gohugo.io&#34;&gt;Hugo&lt;/a&gt; static website generator. To organize
this system, I have two git repos: One that consists of all the hugo
source files (where I write content), and one that contains the
generated static website (that gets deployed to my web host).&lt;/p&gt;

&lt;p&gt;When writing a post, I use &lt;code&gt;hugo server -D -F&lt;/code&gt; to live view the page
in my browser. However, I occasionally want to view the state of all
the &lt;em&gt;committed code&lt;/em&gt; in the &lt;em&gt;repo&lt;/em&gt;, to see what the site would look
like if I decided to publish a post. So, I created a &amp;ldquo;drafts&amp;rdquo; website,
which shows the current state of my website&amp;rsquo;s &lt;em&gt;source&lt;/em&gt; repo (including
draft and future posts). If I want to check how a post looks on my
phone, or any other device, I can just open up the draft website after
pushing my changes.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;../../img/posts/draft-website-jenkins/mr-mime.png&#34;&gt;&lt;img
src=&#34;../../img/posts/draft-website-jenkins/mr-mime.png&#34; style=&#34;max-width:
45%; float: right; margin: 20px 0px 0px 10px;&#34; alt=&#34;Jenkins Logo&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;jenkins&#34;&gt;Jenkins&lt;/h2&gt;

&lt;p&gt;I had previously created a dedicated Jenkins server on my home network
(Mr. Mime), using a CentOS 7 VM hosted on my home server. However, any
Jenkins setup should work for this project (including a &lt;a href=&#34;https://hub.docker.com/_/jenkins/&#34;&gt;docker
container&lt;/a&gt;). To get started, checkout the &lt;a href=&#34;https://jenkins.io/download/&#34;&gt;Jenkins
Website&lt;/a&gt;, and be sure to take advantage
of the &lt;a href=&#34;https://jenkins.io/doc/&#34;&gt;the documentation&lt;/a&gt; for help.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Note: just make sure hugo is installed on the Jenkins server, as we need
it to generate the website.&lt;/em&gt;&lt;/p&gt;

&lt;h3 id=&#34;github-integration&#34;&gt;GitHub Integration&lt;/h3&gt;

&lt;h4 id=&#34;jenkins-service&#34;&gt;Jenkins Service&lt;/h4&gt;

&lt;p&gt;My website repo is hosted on GitHub, so we need to configure it to
work with our Jenkins server. To do that, go to the project&amp;rsquo;s GitHub
page, and navigate through &lt;strong&gt;Settings&lt;/strong&gt; -&amp;gt; &lt;strong&gt;Integrations &amp;amp;
services&lt;/strong&gt;. Click the &lt;strong&gt;Add service&lt;/strong&gt; drop-down and select &lt;em&gt;Jenkins
(Git Plugin)&lt;/em&gt;. Next, add the Jenkins server url (assuming the server
is accessible from the internet. If not, hosting the Jenkins server on
something like &lt;a href=&#34;http://digitalocean.com&#34;&gt;Digital Ocean&lt;/a&gt; might be an
easy solution). Lastly, make sure the &lt;strong&gt;Activate&lt;/strong&gt; box is selected,
and click the &lt;strong&gt;Add Service&lt;/strong&gt; button.&lt;/p&gt;

&lt;h4 id=&#34;ssh-keys&#34;&gt;SSH Keys&lt;/h4&gt;

&lt;p&gt;While on the project&amp;rsquo;s GitHub page, make sure that the Jenkins
server&amp;rsquo;s ssh keys are added to the project. To add them, navigate to
the &lt;strong&gt;Deploy Keys&lt;/strong&gt; page (under the project&amp;rsquo;s &lt;strong&gt;Settings&lt;/strong&gt; tab). Then
select &lt;strong&gt;Add deploy key&lt;/strong&gt;, and add the public key.&lt;/p&gt;

&lt;h2 id=&#34;a-nginx-server&#34;&gt;A Nginx Server&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;../../img/posts/draft-website-jenkins/nginx.png&#34;&gt;&lt;img
src=&#34;../../img/posts/draft-website-jenkins/nginx.png&#34; style=&#34;max-width:
100%; float: center; margin: 0px 0px 0px 0px;&#34; alt=&#34;Default Nginx Page&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;With Jenkins ready, let&amp;rsquo;s quickly setup the web server before
configuring the Jenkins project. Any web server will do (it just needs
to serve the generated &lt;em&gt;static&lt;/em&gt; website content). I used
&lt;a href=&#34;https://nginx.org/en/&#34;&gt;nginx&lt;/a&gt; in for setup. After installing, make
sure it is running. To install and check the status of nginx on an
Ubuntu System:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;## Install&lt;/span&gt;
sudo apt install -y nginx

&lt;span style=&#34;color:#75715e&#34;&gt;## Check it is running&lt;/span&gt;
sudo systemctl status nginx

&lt;span style=&#34;color:#75715e&#34;&gt;## Optional: Ensure it is enabled to start up after reboots&lt;/span&gt;
sudo systemctl enable nginx&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;With the web server running, we need to know &lt;em&gt;where&lt;/em&gt; the website files
need to go. Nginx will by default serve content at
&lt;code&gt;/user/share/nginx/html/&lt;/code&gt;, so remember that location for later&amp;hellip;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Note: Don&amp;rsquo;t forget to add the &lt;code&gt;jenkins&lt;/code&gt; user&amp;rsquo;s ssh key from the
jenkins server to the &lt;code&gt;authorized_keys&lt;/code&gt; file of the nginx server. This
will make file transfers easier when setting up the jenkins project.&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&#34;configuring-a-project&#34;&gt;Configuring a Project&lt;/h2&gt;

&lt;p&gt;Let&amp;rsquo;s configure our Jenkins project! Log in to the Jenkins
server and click the &lt;strong&gt;New Item&lt;/strong&gt; option on the left side bar. Enter a
name for the project, select the &lt;strong&gt;Freestyle Project&lt;/strong&gt; option, and hit
&lt;strong&gt;OK&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;../../img/posts/draft-website-jenkins/general-config.png&#34;&gt;&lt;img
src=&#34;../../img/posts/draft-website-jenkins/general-config.png&#34; style=&#34;max-width:
100%; float: center; margin: 0px 0px 0px 0px;&#34; alt=&#34;The Project&#39;s General Configuration Section&#34; /&gt;&lt;/a&gt;
&lt;div class=&#34;caption&#34;&gt;The Project&amp;rsquo;s General Configuration Section&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;In the &lt;strong&gt;General&lt;/strong&gt; section of the configuration screen, optionally
write a description about the project. Next, select the &amp;ldquo;&lt;em&gt;GitHub
Project&lt;/em&gt;&amp;rdquo; check-box, and add the GitHub repo&amp;rsquo;s url into the &lt;em&gt;Project
url&lt;/em&gt; text box.&lt;/p&gt;

&lt;h4 id=&#34;source-control&#34;&gt;Source Control&lt;/h4&gt;

&lt;p&gt;&lt;a href=&#34;../../img/posts/draft-website-jenkins/credentials.png&#34;&gt;&lt;img
src=&#34;../../img/posts/draft-website-jenkins/credentials.png&#34;
style=&#34;max-width: 100%; float: center; margin: 0px 0px 0px 0px;&#34;
alt=&#34;Setting Credentials&#34; /&gt;&lt;/a&gt;
&lt;div class=&#34;caption&#34;&gt;Setting Credentials&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;In the &lt;strong&gt;Source Code Management&lt;/strong&gt; section of the configuration, select
the &lt;em&gt;Git&lt;/em&gt; option. Then, enter the repo&amp;rsquo;s url for the &lt;em&gt;Repository URL&lt;/em&gt;
box (I did the ssh url). For &lt;em&gt;Credentials&lt;/em&gt;, select &lt;em&gt;Add&lt;/em&gt; to configure a
new credential. Select &lt;em&gt;SSH Username with private key&lt;/em&gt; for &lt;em&gt;Kind&lt;/em&gt;,
use &lt;code&gt;jenkins&lt;/code&gt; for the &lt;em&gt;Username&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;More source control options can be configured, but this should be the
minimum setup required. &lt;em&gt;Again, for this to work public keys for the
&lt;code&gt;jenkins&lt;/code&gt; user on the jenkins server must be generated, and added as a
deployment key on GitHub.&lt;/em&gt;&lt;/p&gt;

&lt;h4 id=&#34;build-trigger&#34;&gt;Build Trigger&lt;/h4&gt;

&lt;p&gt;Under the &lt;strong&gt;Build Triggers&lt;/strong&gt; section, select &lt;em&gt;Poll SCM&lt;/em&gt;. Without
adding any schedule parameters, it will trigger each time a new commit
is detected. This is what we want.&lt;/p&gt;

&lt;h4 id=&#34;build-step&#34;&gt;Build Step&lt;/h4&gt;

&lt;p&gt;In the &lt;strong&gt;Build&lt;/strong&gt; section, click &lt;strong&gt;Add build step&lt;/strong&gt;, and select
&lt;strong&gt;Execute shell&lt;/strong&gt;. This is where we can add the shell commands to
build the website with hugo. Add the following command to the box
(don&amp;rsquo;t forget to change the url):&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;hugo -D -F -b &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;http://10.1.1.77&amp;#34;&lt;/span&gt; -d public&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;-D&lt;/code&gt; flag tells hugo to include all draft posts, while the &lt;code&gt;-F&lt;/code&gt; flag
has it include all posts with a future date. The &lt;code&gt;-b&lt;/code&gt; flag sets the
url for the generated website. This should the be url or IP address of
the nginx server setup previously. Lastly, the &lt;code&gt;-d&lt;/code&gt; flag tells hugo to
output the generated static website to the &lt;code&gt;public&lt;/code&gt; directory. This
will be useful to know when deploying the build.&lt;/p&gt;

&lt;h4 id=&#34;deploy-to-webserver&#34;&gt;Deploy to Webserver&lt;/h4&gt;

&lt;p&gt;For deployment, I used rsync to copy the build files to the nginx
web server. This step will be another shell command, so I&amp;rsquo;ve actually
added it as another &amp;ldquo;build&amp;rdquo; step. Add another &lt;strong&gt;Execute shell&lt;/strong&gt; and
paste the following command inside the text box (again, changing the url):&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;rsync -r &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$WORKSPACE&lt;span style=&#34;color:#e6db74&#34;&gt;/public/&amp;#34;&lt;/span&gt; ryan@10.1.1.77:/usr/share/nginx/html/&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I used the Jenkins &lt;code&gt;$WORKSPACE&lt;/code&gt; variable to get the location of the
build, and was able to append the &lt;code&gt;public&lt;/code&gt; directory to that, since we
defined it with the &lt;code&gt;-d&lt;/code&gt; flag in the hugo build step above. This will
copy the generated website, to the web server.&lt;/p&gt;

&lt;p&gt;Hit &lt;strong&gt;Save&lt;/strong&gt;, and test it out by clicking the &lt;strong&gt;Build Now&lt;/strong&gt; link on the
left. If the build is successful, check the nginx website to see if
the website was deployed!&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Note: If it doesn&amp;rsquo;t work, double check all permissions and
credentials between accounts and servers.&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&#34;better-yet-pipelines&#34;&gt;Better Yet&amp;hellip; Pipelines&lt;/h2&gt;

&lt;p&gt;What&amp;rsquo;s better than using Jenkins for automated &amp;ldquo;draft website&amp;rdquo;
deployments?  Using a &lt;a href=&#34;https://jenkins.io/doc/book/pipeline/&#34;&gt;Jenkins
Pipeline&lt;/a&gt;. A Pipeline allows
the jenkins project steps to be defined in a &lt;em&gt;Jenkinsfile&lt;/em&gt; that, among
other benefits, can be source controlled. In fact, by default a
Jenkins pipeline searches for the &lt;code&gt;Jenkinsfile&lt;/code&gt; right in the root
directory of a project&amp;rsquo;s git repo.&lt;/p&gt;

&lt;p&gt;While a pipeline and
&lt;a href=&#34;https://jenkins.io/doc/book/pipeline/jenkinsfile/&#34;&gt;Jenkinsfile&lt;/a&gt; might
be a bit more confusing to &lt;em&gt;learn&lt;/em&gt; how to setup, it is well worth it. For
example, the following Jenkinsfile can be used to do essentially what
we setup in the previous steps:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-groovy&#34; data-lang=&#34;groovy&#34;&gt;pipeline &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
    agent &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
	label &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;mr-mime&amp;#39;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
    stages &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
	stage &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;build&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
	    steps&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
		sh &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;hugo -D -F -b &amp;#34;http://10.1.1.77&amp;#34;&amp;#39;&lt;/span&gt;
	    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
	stage &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;deploy&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
	    steps&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
		sh &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;rsync -r &amp;#34;$WORKSPACE/public/&amp;#34; ryan@ponyta:/usr/share/nginx/html/&amp;#39;&lt;/span&gt;
	    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;

    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I&amp;rsquo;m not going to cover pipelines in &lt;em&gt;this&lt;/em&gt; post. However, I do
encourage readers to check them out.&lt;/p&gt;

&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;That&amp;rsquo;s it. While I currently host my website using &lt;a href=&#34;https://pages.github.com/&#34;&gt;GitHub
pages&lt;/a&gt;, if I ever self-host it again, I
will definitely automate publishing it using Jenkins as well. This has
been a &lt;em&gt;very&lt;/em&gt; basic example of what Jenkins can be used for, but I
have found it rather useful when working on the content of this
website. There is so much more it can do. Have fun!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Nginx as a Reverse Proxy to Forward Sub-Domains</title>
      <link>http://ryan.himmelwright.net/post/nginx-subdomain-reverse-proxy/</link>
      <pubDate>Tue, 03 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>http://ryan.himmelwright.net/post/nginx-subdomain-reverse-proxy/</guid>
      <description>&lt;p&gt;Last month, Rebecca and I moved to Durham, North Carolina. As a
result, I&amp;rsquo;ve had to re-setup our home network. In years past, I setup
a virtual machine running &lt;a href=&#34;https://www.nginx.com/&#34;&gt;Nginx&lt;/a&gt; as a
reverse-proxy (Tangela), and I decided to do that again on the new
network. While it is a simple process, it is one that other people often
ask me about. So, this time&amp;hellip; I&amp;rsquo;m taking notes!&lt;/p&gt;

&lt;h2 id=&#34;why&#34;&gt;Why?&lt;/h2&gt;

&lt;p&gt;The purpose of this reverse proxy is to direct outside traffic to the
appropriate host internally, by looking at the sub-domain of the URL
request. For example, I may have servers for both
&lt;code&gt;website.himmelwright.net&lt;/code&gt; and &lt;code&gt;dashboard.himmelwright.net&lt;/code&gt; running
internally on my network, but they will have the same public IP. Using
nginx, I can point all of my web traffic to &lt;em&gt;tangela&lt;/em&gt;, my
reverse-proxy. If tangela sees that the incoming request is for
&lt;code&gt;website.himmelwright.net&lt;/code&gt;, it will forward that traffic to the
website server. On the other hand, if the request is for
&lt;code&gt;dashboard.himmelwright.net&lt;/code&gt;, it will direct it to the dashboard
server. A reverse-proxy expands what can be accomplished on a single network,
and is a cleaner (and possibly safer) method than doing everything through
port-forwarding.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;../../img/posts/nginx-reverse-proxy/tangela.png&#34;&gt;&lt;img
src=&#34;../../img/posts/nginx-reverse-proxy/tangela.png&#34; style=&#34;max-width:
50%; float: right; margin: 0px 0px 0px 0px;&#34; alt=&#34;Example snippet of
my org-babel config.org file&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;setup-server&#34;&gt;Setup Server&lt;/h2&gt;

&lt;p&gt;To get started, configure a server/container/droplet that will host
nginx. I&amp;rsquo;m using a CentOS 7 minimal install VM on
&lt;a href=&#34;../../pages/homelab/#ninetales&#34;&gt;Nintales&lt;/a&gt; (my
home server). I don&amp;rsquo;t have a bunch of traffic (well, I &lt;em&gt;shouldn&amp;rsquo;t&lt;/em&gt;), so I&amp;rsquo;m
just giving it 1 core and 512MB RAM.&lt;/p&gt;

&lt;h3 id=&#34;setup-nginx&#34;&gt;Setup Nginx&lt;/h3&gt;

&lt;p&gt;Next, it&amp;rsquo;s time to setup and install Nginx.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Note&lt;/em&gt;: the rest of the post will be focused on using a CentOS 7 base,
since that is what I am using. Adjust for your distro accordingly.&lt;/p&gt;

&lt;p&gt;Add the nginx repo, and install it:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo rpm -Uvh http://nginx.org/packages/centos/7/noarch/RPMS/nginx-release-centos-7-0.el7.ngx.noarch.rpm
sudo yum -y install nginx&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Tell the firewall to allow http traffic:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo firewall-cmd --permanent --add-service&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;http
sudo systemctl reload firewalld&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Start and enable nginx:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo systemctl start nginx
sudo systemctl enable nginx&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;configure-nginx&#34;&gt;Configure Nginx&lt;/h2&gt;

&lt;p&gt;Examine the config file, just to check that everything looks alright.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;vim /etc/nginx/nginx.conf&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Specifically, we want to ensure that the following line exists before
proceeding:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;include /etc/nginx/conf.d/*.conf;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;That line basically states that any *.conf file inside the &lt;code&gt;/etc/nginx/conf.d/&lt;/code&gt;
directory will also be loaded and used by nginx. This allows us to add our own configuration file in the next step.&lt;/p&gt;

&lt;h2 id=&#34;configure-proxy&#34;&gt;Configure Proxy&lt;/h2&gt;

&lt;p&gt;I created a &lt;code&gt;reverse-proxies.config&lt;/code&gt; (it can be named anything with a
&lt;code&gt;.config&lt;/code&gt; extension) file in &lt;code&gt;/etc/nginx/conf.d/&lt;/code&gt; to contain all of
the reverse proxy definitions. These are just server block
entries. For example:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;server &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
        listen 80;
        server_name website.himmelwright.net;
        location / &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
                proxy_pass      http://192.168.1.198:80;
        &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;

server &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
        listen 80;
        server_name dashboard.himmelwright.net;
        location / &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
                proxy_pass      http://192.168.1.200:8080;
        &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Restart nginx for the changes to take effect:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo systemctl restart nginx&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id=&#34;side-note&#34;&gt;Side Note:&lt;/h4&gt;

&lt;p&gt;For some applications, you may need to add the URL to the &lt;code&gt;/etc/hosts&lt;/code&gt;
file, and use that for nginx. I have experienced this in the past with
&lt;a href=&#34;https://about.gitlab.com/&#34;&gt;Gitlab&lt;/a&gt;. For example:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;/etc/hosts
---
192.168.1.201  git.himmelwright.net&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;and then in the config file:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;/etc/nginx/config.d/reverse-proxies.config
---
server &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
        listen 80;
        server_name git.himmelwright.net;
        location / &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
                proxy_pass      http://git.himmelwright.net:80;
        &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;selinux-fixes&#34;&gt;SELinux Fixes&lt;/h2&gt;

&lt;p&gt;At this point, you may be done. However, I was having issues getting
nginx to forward some of my ports&amp;hellip; until I remembered that I was on
CentOS and it may be an issue with SELinux. It was.&lt;/p&gt;

&lt;p&gt;One &amp;ldquo;&lt;em&gt;fix&lt;/em&gt;&amp;rdquo; is to just disable SELinux. A &lt;em&gt;better&lt;/em&gt; solution is to use
setools to allow the http connections:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo yum install -y setools
setsebool -P httpd_can_network_connect true&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;Besides having to configure your router to forward http traffic to the
server, that is really it. This is a real basic configuration, but it
has worked well for me over the years. If I start doing something more
complex, I may provide an update. Until then, enjoy!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Organizing my Emacs config with Org-Babel</title>
      <link>http://ryan.himmelwright.net/post/org-babel-setup/</link>
      <pubDate>Wed, 27 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>http://ryan.himmelwright.net/post/org-babel-setup/</guid>
      <description>&lt;p&gt;In my &lt;a href=&#34;../../post/emacs-update-evil-usepackage/&#34;&gt;previous post&lt;/a&gt;, I completely
redid my emacs configuration from scratch, building it around the use
of evil mode and use-package. As I was wrapping up, I learned of yet
&lt;em&gt;another&lt;/em&gt; emacs package that wil forever change how I maintain my
emacs
configuration&amp;hellip; &lt;a href=&#34;https://orgmode.org/worg/org-contrib/babel/intro.html&#34;&gt;org-babel&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;org-babel&#34;&gt;Org Babel&lt;/h2&gt;

&lt;p&gt;Org-babel is an emacs package, that lets take an
&lt;a href=&#34;https://orgmode.org/&#34;&gt;org-mode&lt;/a&gt; file, and evaluates all of the &lt;a href=&#34;https://orgmode.org/org.html#Literal-examples&#34;&gt;code
blocks&lt;/a&gt; contained
within it. This means I can write an annotated org file, filled with
&lt;code&gt;emacs-lisp&lt;/code&gt; code blocks, and export just the emacs-lisp code. After
testing it out, I realized that the main emacs lisp file I use is&amp;hellip; my
&lt;code&gt;.emacs&lt;/code&gt; file&amp;hellip;&lt;/p&gt;

&lt;h2 id=&#34;setup&#34;&gt;Setup&lt;/h2&gt;

&lt;p&gt;Installing babel couldn&amp;rsquo;t be simpler. If you are running Emacs version
24 or higher, and a current version of Org-mode, Babel is already
available by default. In order to generate an &lt;code&gt;.emacs&lt;/code&gt; config from an
&lt;code&gt;.org&lt;/code&gt; file, we need to first setup a &lt;code&gt;config.org&lt;/code&gt; file, and then tell
&lt;code&gt;.emacs&lt;/code&gt; to load it with org-babel.&lt;/p&gt;

&lt;h3 id=&#34;config-org&#34;&gt;config.org&lt;/h3&gt;

&lt;p&gt;First, start by creating an &lt;code&gt;.org&lt;/code&gt; file to use for all of the
configuration content. This can be named anything, and exist anywhere,
but I like to keep mine in the emacs section of my &lt;a href=&#34;https://github.com/himmAllRight/dotfiles&#34;&gt;dotfiles
repo&lt;/a&gt;, named
&lt;code&gt;config.org&lt;/code&gt;. This file functions like any other org file, so I added
a small header section at the top&amp;hellip; because why not?&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-org&#34; data-lang=&#34;org&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#+TITLE&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;: My Emacs Configuration&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#+AUTHOR&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;: Ryan Himmelwright&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#+EMAIL&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;: ryan@himmelwright.net&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#+OPTIONS&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;: num:nil&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;After that, I broke down my file by creating org headings for the
different groups of the configuration. For example, I started with the
headings &lt;code&gt;Repos &amp;amp; Core Packages&lt;/code&gt;, &lt;code&gt;Core Setup&lt;/code&gt;, &lt;code&gt;Evil Mode&lt;/code&gt;, &lt;code&gt;Ivy&lt;/code&gt;,
&lt;code&gt;Writing&lt;/code&gt;, &lt;code&gt;Development&lt;/code&gt;&amp;hellip; etc.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Note: In org-mode, use &amp;ldquo;*&amp;rdquo; to create headings. Each contiguous &amp;ldquo;*&amp;ldquo;
corresponds to the equivalent HTML heading level. Ex: &lt;code&gt;*&lt;/code&gt; == &lt;code&gt;&amp;lt;h1&amp;gt;&lt;/code&gt;,
&lt;code&gt;**&lt;/code&gt; == &lt;code&gt;&amp;lt;h2&amp;gt;&lt;/code&gt;, and so on.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;I started transferring the emacs-lisp code from my previous &lt;code&gt;.emacs&lt;/code&gt;
file, to under each heading in &lt;code&gt;config.org&lt;/code&gt;. As I transferred text, I
transformed the comments that described each code snippet into normal
org text, and wrapped the &lt;code&gt;emacs-lisp&lt;/code&gt; inside an org code block.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;../../img/posts/org-babel-setup/config-org-example1.png&#34;&gt;&lt;img src=&#34;../../img/posts/org-babel-setup/config-org-example1.png&#34; style=&#34;max-width: 100%; float: left; margin: 0px 15px 0px 0px;&#34; alt=&#34;Example snippet of my org-babel config.org file&#34; /&gt;&lt;/a&gt;
&lt;br clear=&#34;all&#34;&gt;
&lt;div class=&#34;caption&#34;&gt;Example snippet of my org-babel config.org file&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;To create a code block, use the &lt;code&gt;#+BEGIN_SRC emacs-lisp&lt;/code&gt; and
&lt;code&gt;#+END_SRC&lt;/code&gt; org tags to encapsulate the &lt;code&gt;emacs-lisp&lt;/code&gt; code. Continue to
do this until all of the desired emacs-lisp code is contained inside
org code blocks.&lt;/p&gt;

&lt;h5 id=&#34;side-note-easy-org-code-blocks&#34;&gt;Side Note: Easy Org Code Blocks&lt;/h5&gt;

&lt;p&gt;&lt;a href=&#34;../../img/posts/org-babel-setup/easy-org-mode-code.gif&#34;&gt;&lt;img
src=&#34;../../img/posts/org-babel-setup/easy-org-mode-code.gif&#34;
style=&#34;max-width: 100%; float: left; margin: 0px 15px 0px 0px;&#34;
alt=&#34;Example snippet of my org-babel config.org file&#34; /&gt;&lt;/a&gt; &lt;br
clear=&#34;all&#34;&gt; &lt;div class=&#34;caption&#34;&gt;Code block can be easily created
with &lt;code&gt;&amp;lt;s&lt;/code&gt; and &lt;code&gt;TAB&lt;/code&gt;.&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;In org-mode, you can write &lt;code&gt;&amp;lt;s&lt;/code&gt;, then hit &lt;code&gt;TAB&lt;/code&gt; and it will expand
into the &lt;code&gt;BEGIN_SRC&lt;/code&gt; and &lt;code&gt;END_SRC&lt;/code&gt; tags. Just don&amp;rsquo;t forget to add
&lt;code&gt;emacs-lisp&lt;/code&gt; to the &lt;code&gt;BEGIN_SRC&lt;/code&gt; tag!&lt;/p&gt;

&lt;h3 id=&#34;emacs&#34;&gt;.emacs&lt;/h3&gt;

&lt;p&gt;For the contents of &lt;code&gt;.emacs&lt;/code&gt;, call &lt;code&gt;package-initialize&lt;/code&gt; and then have
&lt;code&gt;org-babel&lt;/code&gt; load the &lt;code&gt;config.org&lt;/code&gt; file.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;(package-initialize)
(org-babel-load-file &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;~/dotfiles/emacs/config.org&amp;#34;&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;That&amp;rsquo;s it. Assuming the &lt;code&gt;config.org&lt;/code&gt; is complete, emacs should now
initialize using the code snippets from &lt;em&gt;it&lt;/em&gt;. While these are the only
two &lt;em&gt;required&lt;/em&gt; lines, do note that emacs will still write the
&lt;code&gt;#&#39;custom-set-variables&lt;/code&gt; to the bottom of the &lt;code&gt;.emacs&lt;/code&gt; file. That&amp;rsquo;s
fine. If anything, it makes it easier to source control the &lt;em&gt;actual&lt;/em&gt;
configuration file, since emacs isn&amp;rsquo;t constantly adding to it,
changing the diff.&lt;/p&gt;

&lt;h2 id=&#34;what-i-like&#34;&gt;What I like&lt;/h2&gt;

&lt;h3 id=&#34;organized&#34;&gt;Organized&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;../../img/posts/org-babel-setup/org-expand-example.gif&#34;&gt;&lt;img
src=&#34;../../img/posts/org-babel-setup/org-expand-example.gif&#34;
style=&#34;max-width: 100%; float: left; margin: 0px 15px 0px 0px;&#34;
alt=&#34;Example snippet of expanding org headers to easily find code.&#34;
/&gt;&lt;/a&gt; &lt;br clear=&#34;all&#34;&gt; &lt;div class=&#34;caption&#34;&gt;Expanding org headers to
easily find code.&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;Org mode&amp;rsquo;s hierarchical structure inherently organizes the content of
files. Using it for my emacs configuration is no different. I can use
org headers to easily break down my file into sections and
sub-sections, which I can then expand and collapse as needed. For
example, my &lt;code&gt;config.org&lt;/code&gt; is currently over 500 lines long, but with
all the headers collapsed, it displays in less than 20. From there I
can just expand to the section I need.&lt;/p&gt;

&lt;h3 id=&#34;maintainable&#34;&gt;Maintainable&lt;/h3&gt;

&lt;p&gt;Being so organized, the &lt;code&gt;config.org&lt;/code&gt; file is very easy to maintain. If
I want to edit a setting, I can just search through the headers for
the section, and then edit the code block and/or text. If I want to
add a new item, I can just insert a new header, add the code block I
want, and maybe some explanatory text. Done. Most importantly, the
structure helps prevent it from turning into an &lt;em&gt;in-production
&amp;ldquo;scratch code&amp;rdquo;&lt;/em&gt; file&amp;hellip;&lt;/p&gt;

&lt;h3 id=&#34;easy-to-read&#34;&gt;Easy to Read&lt;/h3&gt;

&lt;p&gt;It should go without saying that the organization and maintainability
of org-mode configurations make them extremely &lt;em&gt;readable&lt;/em&gt;. Not only is
the source code easier to read, but org files can be
&lt;a href=&#34;https://orgmode.org/manual/Exporting.html&#34;&gt;exported&lt;/a&gt; to all sorts of
outputs (HTML, LaTeX, OpenDocument, etc). Combined with a style-sheet,
these outputs can look quite professional.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;../../img/posts/org-babel-setup/github-config.png&#34;&gt;&lt;img
src=&#34;../../img/posts/org-babel-setup/github-config.png&#34;
style=&#34;max-width: 100%; float: left; margin: 0px 15px 0px 0px;&#34;
alt=&#34;Example of how Github renders org files as a markdown&#34; /&gt;&lt;/a&gt; &lt;br
clear=&#34;all&#34;&gt; &lt;div class=&#34;caption&#34;&gt;Github renders org files as a markdown.&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;Beyond normal &lt;code&gt;org&lt;/code&gt; exporting, &lt;a href=&#34;http://www.github.com&#34;&gt;Github&lt;/a&gt; does
something awesome&amp;hellip; they &lt;em&gt;render&lt;/em&gt; &lt;code&gt;org&lt;/code&gt; files as a known markup
language on their website! This means that if you click an &lt;code&gt;*.org&lt;/code&gt;
file on Gihub&amp;rsquo;s web interface, it will display a rendered version of
the content, instead of defaulting to the raw org text.&lt;/p&gt;

&lt;h2 id=&#34;speaking-of-github&#34;&gt;Speaking of Github&amp;hellip;&lt;/h2&gt;

&lt;p&gt;While I have always maintained my emacs configuration in &lt;a href=&#34;https://github.com/himmAllRight/dotfiles&#34;&gt;my dotfiles
repo&lt;/a&gt;, org-babel has helped
me step up my game. My current &lt;a href=&#34;../../post/new-dotfiles/&#34;&gt;dotfile
system&lt;/a&gt; has all of my
emacs files in a separate &lt;code&gt;emacs&lt;/code&gt; folder. On Github, each directory in
a repo can contain a &lt;code&gt;README&lt;/code&gt; file (or&amp;hellip;. a symlink to &lt;em&gt;another&lt;/em&gt;
file&amp;hellip;)  to be displayed below the list of files.&lt;/p&gt;

&lt;h2 id=&#34;my-maintained-config&#34;&gt;My Maintained Config&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;../../img/posts/org-babel-setup/github-emacs.png&#34;&gt;&lt;img
src=&#34;../../img/posts/org-babel-setup/github-emacs.png&#34;
style=&#34;max-width: 100%; float: left; margin: 0px 15px 0px 0px;&#34;
alt=&#34;Example of how Github renders org files as a markdown&#34; /&gt;&lt;/a&gt; &lt;br
clear=&#34;all&#34;&gt; &lt;div class=&#34;caption&#34;&gt;Github renders org files as a
markdown.&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;In the emacs section of my dotfiles, I have created a symlink,
&lt;code&gt;README.org&lt;/code&gt;, to my &lt;code&gt;config.org&lt;/code&gt; file:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo ln -s config.org README.org&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Github recognizes this, so my &lt;code&gt;README&lt;/code&gt; file &amp;ldquo;contains&amp;rdquo; whatever the
contents of &lt;code&gt;config.org&lt;/code&gt; are. Now, when one visits the &lt;a href=&#34;https://github.com/himmAllRight/dotfiles/tree/master/emacs&#34;&gt;emacs
section&lt;/a&gt;
of my dotfiles repo, an organized, annotated, and always up-to-date
version of my &amp;ldquo;&lt;code&gt;.emacs&lt;/code&gt;&amp;rdquo; file is displayed as the &lt;code&gt;README&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The Github support was the cherry on top of a new emacs configuration
system I am already ecstatic about. I&amp;rsquo;ve been a fan of org-mode for
years, and org-babel is one more feature to add to the growing list of
reasons &lt;em&gt;why&lt;/em&gt; I love it. I highly recommend checking it out.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Emacs Config Redo - Evil &amp; Use-Package</title>
      <link>http://ryan.himmelwright.net/post/emacs-update-evil-usepackage/</link>
      <pubDate>Fri, 18 May 2018 00:00:00 +0000</pubDate>
      
      <guid>http://ryan.himmelwright.net/post/emacs-update-evil-usepackage/</guid>
      <description>&lt;p&gt;After switching to &lt;a href=&#34;http://spacemacs.org&#34;&gt;Spacemacs&lt;/a&gt; for the last year
or two, it&amp;rsquo;s about time to back and pull together &lt;em&gt;my own&lt;/em&gt; emacs
configuration again. However, spacemacs has shown me several packages
that I want to incorporate into my new emacs setup. Rather than
resurrect and Frankenstein the changes into my old &lt;code&gt;.emacs&lt;/code&gt;
file&amp;hellip; I&amp;rsquo;m starting from scratch.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;../../img/posts/emacs-config-evil-usepackage/newemacs1.png&#34;&gt;&lt;img src=&#34;../../img/posts/emacs-config-evil-usepackage/newemacs1.png&#34; style=&#34;max-width: 100%; float: left; margin: 0px 15px 0px 0px;&#34; alt=&#34;New Emacs Window&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;div class=&#34;caption&#34;&gt;A window of my New Emacs configuration&lt;/div&gt;

&lt;h2 id=&#34;evil-mode&#34;&gt;Evil Mode&lt;/h2&gt;

&lt;h4 id=&#34;history&#34;&gt;History&lt;/h4&gt;

&lt;p&gt;The one emacs package that spacemacs &lt;em&gt;really&lt;/em&gt; got me addicted to was
&lt;a href=&#34;https://github.com/emacs-evil/evil&#34;&gt;Evil&lt;/a&gt;, which emulates the main
features of the &lt;a href=&#34;https://www.vim.org&#34;&gt;vim&lt;/a&gt; text editor. I &lt;em&gt;started&lt;/em&gt;
with emacs in college, but eventually switched to Vim which, became
the first power editor that I &lt;em&gt;really&lt;/em&gt; got into (I even bought a
&lt;a href=&#34;https://www.amazon.com/dp/059652983X/?tag=mh0b-20&amp;amp;hvadid=78271540595342&amp;amp;hvqmt=b&amp;amp;hvbmt=bb&amp;amp;hvdev=c&amp;amp;ref=pd_sl_y7m3vu93e_b&#34;&gt;book&lt;/a&gt;
to learn it better). I stuck with Vim until I became a professional
LISP developer, and the switch back to Emacs was impossible to ignore,
and obvious.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;../../img/posts/emacs-config-evil-usepackage/vim.png&#34;&gt;&lt;img src=&#34;../../img/posts/emacs-config-evil-usepackage/vim.png&#34; style=&#34;max-width: 100%; float: left; margin: 0px 15px 0px 0px;&#34; alt=&#34;A Vim Window&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;div class=&#34;caption&#34;&gt;The Vim editor&lt;/div&gt;

&lt;p&gt;Even after switching to back Emacs, I have still enjoyed using command
line applications like &lt;a href=&#34;https://cmus.github.io&#34;&gt;cmus&lt;/a&gt;,
&lt;a href=&#34;https://github.com/ranger/ranger&#34;&gt;ranger&lt;/a&gt;, and
&lt;a href=&#34;http://w3m.sourceforge.net&#34;&gt;w3m&lt;/a&gt;, many of which are influenced by Vim
and often incorporate similar keyboard commands (at least the &lt;code&gt;j&lt;/code&gt;,
&lt;code&gt;k&lt;/code&gt;, &lt;code&gt;l&lt;/code&gt;, &lt;code&gt;;&lt;/code&gt; navigation). While it isn&amp;rsquo;t ideal for everything (I
prefer to &lt;em&gt;write&lt;/em&gt;, but not necessarily &lt;em&gt;edit&lt;/em&gt; code with emacs-syle
navigation), I never lost my love for the homerow-centric, and
efficient vim-style movement commands.&lt;/p&gt;

&lt;h4 id=&#34;best-of-both-worlds&#34;&gt;Best of Both Worlds&lt;/h4&gt;

&lt;p&gt;For the last two years, &lt;a href=&#34;http://spacemacs.org/&#34;&gt;Spacemacs&lt;/a&gt;&amp;rsquo;s default
Vim configuration has provided the best of both worlds. It had all of
the Evil packages pre-configured and optimized, but I could simply hit
&lt;code&gt;Ctrl-z&lt;/code&gt;, and jump back to Emacs-mode.&lt;/p&gt;

&lt;p&gt;Spacemacs was easy to use and I enjoyed it, but it really started to
have stability issues on my Windows 10 work computer. I thought that
going back to a stock emacs configuration may tone down the
complexity, and increase stability. I started to build a &lt;em&gt;new&lt;/em&gt;
configuration based around &lt;code&gt;Evil&lt;/code&gt;. During setup, I was happily
surprised to learn that the &lt;code&gt;Ctrl-z&lt;/code&gt; option to switch back to
Emacs-mode was a default &lt;code&gt;Evil&lt;/code&gt; behavior&amp;hellip; so I still have the best of
both worlds!&lt;/p&gt;

&lt;h4 id=&#34;starting-config&#34;&gt;Starting Config&lt;/h4&gt;

&lt;p&gt;Here is my starting &lt;code&gt;Evil&lt;/code&gt; setup. I&amp;rsquo;ve nested other &lt;code&gt;use-packages&lt;/code&gt;
inside of it, so that if &lt;code&gt;evil&lt;/code&gt; is configured, the packages that
depend on it go ahead and configure themselves too. I&amp;rsquo;m sure this will
grow over time as I add missing packages, but so far, it seems to
provide all the core functionality I need.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-lisp&#34; data-lang=&#34;lisp&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;;; Evil Mode&lt;/span&gt;
(&lt;span style=&#34;color:#a6e22e&#34;&gt;use-package&lt;/span&gt; evil
  &lt;span style=&#34;color:#e6db74&#34;&gt;:ensure&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;t&lt;/span&gt;
  &lt;span style=&#34;color:#e6db74&#34;&gt;:config&lt;/span&gt;

  (evil-mode &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)
  (&lt;span style=&#34;color:#a6e22e&#34;&gt;use-package&lt;/span&gt; evil-leader
    &lt;span style=&#34;color:#e6db74&#34;&gt;:ensure&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;t&lt;/span&gt;
    &lt;span style=&#34;color:#e6db74&#34;&gt;:config&lt;/span&gt;
    (global-evil-leader-mode &lt;span style=&#34;color:#66d9ef&#34;&gt;t&lt;/span&gt;)
    (evil-leader/set-leader &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;lt;SPC&amp;gt;&amp;#34;&lt;/span&gt;)
    (evil-leader/set-key
      &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;s s&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;swiper&lt;/span&gt;
      &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;d x w&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;delete-trailing-whitespace&lt;/span&gt;))

  (&lt;span style=&#34;color:#a6e22e&#34;&gt;use-package&lt;/span&gt; evil-surround
    &lt;span style=&#34;color:#e6db74&#34;&gt;:ensure&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;t&lt;/span&gt;
    &lt;span style=&#34;color:#e6db74&#34;&gt;:config&lt;/span&gt; (global-evil-surround-mode))

  (&lt;span style=&#34;color:#a6e22e&#34;&gt;use-package&lt;/span&gt; evil-indent-textobject
    &lt;span style=&#34;color:#e6db74&#34;&gt;:ensure&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;t&lt;/span&gt;)

  (&lt;span style=&#34;color:#a6e22e&#34;&gt;use-package&lt;/span&gt; evil-org
    &lt;span style=&#34;color:#e6db74&#34;&gt;:ensure&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;t&lt;/span&gt;
    &lt;span style=&#34;color:#e6db74&#34;&gt;:config&lt;/span&gt;
    (evil-org-set-key-theme
	  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#39;&lt;/span&gt;(textobjects insert navigation additional shift todo heading))
    (add-hook &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;org-mode-hook&lt;/span&gt; (lambda () (evil-org-mode))))

  (&lt;span style=&#34;color:#a6e22e&#34;&gt;use-package&lt;/span&gt; powerline-evil
    &lt;span style=&#34;color:#e6db74&#34;&gt;:ensure&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;t&lt;/span&gt;
    &lt;span style=&#34;color:#e6db74&#34;&gt;:config&lt;/span&gt;
    (powerline-evil-vim-color-theme)))&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I think it needs more key bindings over time&amp;hellip;&lt;/p&gt;

&lt;h2 id=&#34;use-package&#34;&gt;Use Package&lt;/h2&gt;

&lt;p&gt;After my setting up an initial install of the Evil mode parts, I
discovered the amazing
&lt;a href=&#34;https://github.com/jwiegley/use-package&#34;&gt;use-package&lt;/a&gt;. I have come
across it before reading blog posts, but never actually tried
it. After realizing how well it worked, I immediately combed through
my &lt;code&gt;.emacs&lt;/code&gt; file, converting all of my &lt;code&gt;(require &#39;package-name)&lt;/code&gt; calls
to &lt;code&gt;use-package&lt;/code&gt; forms instead.&lt;/p&gt;

&lt;h4 id=&#34;setup&#34;&gt;Setup&lt;/h4&gt;

&lt;p&gt;After ensuring the &lt;a href=&#34;http://melpa.org&#34;&gt;MELPA&lt;/a&gt; repos are added and
initialized:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-lisp&#34; data-lang=&#34;lisp&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;;; Add Melpa packages to Repos&lt;/span&gt;
(&lt;span style=&#34;color:#a6e22e&#34;&gt;require&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;package&lt;/span&gt;)
(add-to-list &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;package-archives&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#39;&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;melpa&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;http://melpa.org/packages/&amp;#34;&lt;/span&gt;))
(package-initialize)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;use-package&lt;/code&gt; package can be installed next. I wrapped the
install commands in an &lt;code&gt;unless&lt;/code&gt;, so that when my emacs loads, it
only installs &lt;code&gt;use-package&lt;/code&gt; if it is not already installed.&lt;/p&gt;

&lt;p&gt;Afterwards, make sure to &lt;code&gt;(require &#39;use-package)&lt;/code&gt;. It only needs to
happen during compile, so I have mine in an &lt;code&gt;(evail-when compile ...)&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-lisp&#34; data-lang=&#34;lisp&#34;&gt;(unless (package-installed-p &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;use-package&lt;/span&gt;)
  (package-refresh-contents)
  (package-install &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;use-package&lt;/span&gt;))

(eval-when-compile
  (&lt;span style=&#34;color:#a6e22e&#34;&gt;require&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;use-package&lt;/span&gt;))&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I keep all of this at the top of my configuration, which works well
even when initializing a new computer.&lt;/p&gt;

&lt;h4 id=&#34;bye-bye-emacs-init-el&#34;&gt;Bye Bye emacs_init.el&lt;/h4&gt;

&lt;p&gt;When I last had my own custom emacs config, I had to also maintain an
&lt;code&gt;emacs_init.el&lt;/code&gt; file. This was an emacs-lisp script that used a
&lt;code&gt;mapcar&lt;/code&gt; to apply &lt;code&gt;#&#39;package-install&lt;/code&gt; across an ever-growing list of
emacs packages my configuration required. My goal was to have a
script, so that when configuring Emacs on a new system, I could just load
and evaluate the contents of &lt;code&gt;emacs_init.el&lt;/code&gt;, and everything required
for &lt;code&gt;.emacs&lt;/code&gt; would automatically install.&lt;/p&gt;

&lt;p&gt;The reality was that it never fully worked. There were always a few
packages that would error, or that I had forgotten to add the last time
I updated my &lt;code&gt;.emacs&lt;/code&gt; file. With &lt;code&gt;use-package&lt;/code&gt;, this might be an issue
of the past, as it allows me to combine my emacs init script &lt;em&gt;with&lt;/em&gt;
my configuration files.&lt;/p&gt;

&lt;h4 id=&#34;key-bindings&#34;&gt;Key Bindings&lt;/h4&gt;

&lt;p&gt;After converting all of my &lt;code&gt;(require &#39;PACKAGE-NAME)&lt;/code&gt; calls and related
expressions to filled &lt;code&gt;use-package&lt;/code&gt; wrappers, I learned about the &lt;code&gt;:bind&lt;/code&gt;
parameter. Instead of manually setting key binds with a &lt;code&gt;setq&lt;/code&gt;,
&lt;code&gt;:bind&lt;/code&gt; takes a list of dotted pairs and binds the function (defined
in the second spot of the pair), to the key sequence stated in the
first spot of the pair.&lt;/p&gt;

&lt;p&gt;For example, to setup my preferred &lt;code&gt;ispell&lt;/code&gt; key-bindings, I used the
following &lt;code&gt;:bind&lt;/code&gt; parameter in my &lt;code&gt;ispell&lt;/code&gt; &lt;code&gt;use-package&lt;/code&gt; call:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;(use-package ispell
  :ensure &lt;span style=&#34;color:#66d9ef&#34;&gt;t&lt;/span&gt;
  :bind
  ((&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;C-c w&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ispell-word&lt;/span&gt;)
   (&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;C-c r&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ispell-region&lt;/span&gt;)))&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This helps to keep the configuration a bit cleaner and organized. The
syntax is also straight-forward and easy to remember.&lt;/p&gt;

&lt;h2 id=&#34;system-specific-load-files&#34;&gt;System Specific Load Files&lt;/h2&gt;

&lt;p&gt;Finally, I moved all my work-specific emacs configuration (setting up
Allegro Common Lisp, defining some helper functions&amp;hellip; and anything
Windows specific) into it&amp;rsquo;s own &lt;code&gt;emacs-work.el&lt;/code&gt; file. With that in it&amp;rsquo;s
own separate file, I just needed to &lt;code&gt;load&lt;/code&gt; it from my main &lt;code&gt;.emacs&lt;/code&gt;
configuration. The only issue with that, is I only want it to load on
my &lt;em&gt;work computer&lt;/em&gt;. So, I wrapped it with a nice little handler:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;(when (&lt;span style=&#34;color:#a6e22e&#34;&gt;string-equal&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;system-name&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;LAFAYETTE&amp;#34;&lt;/span&gt;)
  (&lt;span style=&#34;color:#a6e22e&#34;&gt;load&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;~/.emacs-work.el&amp;#34;&lt;/span&gt;))&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This works because I don&amp;rsquo;t name my home computers with the same name
as my work machine. This little tweak worked so well, that I decided
to make another file, &lt;code&gt;emacs-linux.el&lt;/code&gt;, that I could dump my Linux
and/or home specific configuration into. I only load it when on a
GNU/Linux machine:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;(when (&lt;span style=&#34;color:#a6e22e&#34;&gt;string-equal&lt;/span&gt; system-type &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;gnu/linux&amp;#34;&lt;/span&gt;)
  (&lt;span style=&#34;color:#a6e22e&#34;&gt;load&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;~/.emacs-linux.el&amp;#34;&lt;/span&gt;))&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I&amp;rsquo;ve really enjoyed the ability to only load parts of my configuration
when a certain condition is met. Breaking down my configuration into
use-specific components seems like a good idea (like abstracting messy
code to smaller functions). Right now, I try to keep my configuration
file partitioned into sections, based on use-case (Writing,
Development, Appearance, etc). However, as I continue to fine-tune my
emacs setup, I think I might break those sections into actual &lt;em&gt;files&lt;/em&gt;,
and then &lt;code&gt;load&lt;/code&gt; them from the main config.&lt;/p&gt;

&lt;p&gt;The only issue I can see with that is that it can be confusing with
 overlapping use-cases. However, I already have to deal with that in a
 single configuration (which &lt;em&gt;section&lt;/em&gt; to put it in), and my process
 of converting everything to &lt;code&gt;use-package&lt;/code&gt; has actually started to
 minimize that issue. So it might work&amp;hellip;&lt;/p&gt;

&lt;h2 id=&#34;next-steps&#34;&gt;Next Steps&lt;/h2&gt;

&lt;p&gt;Now that I have an &amp;ldquo;&lt;code&gt;Evil&lt;/code&gt;&amp;rdquo; Emacs setup configured, things should be
returning to business as usually. As I work, I sure there&amp;rsquo;ll be a
forgotten package here or there that needs to added. However, with
&lt;code&gt;use-package&lt;/code&gt;, that should be a piece of cake, and easy to maintain
from here on out.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>SQL Intro</title>
      <link>http://ryan.himmelwright.net/post/sql-intro/</link>
      <pubDate>Tue, 24 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>http://ryan.himmelwright.net/post/sql-intro/</guid>
      <description>&lt;p&gt;SQL is one of those technologies that which to be everywhere, but yet&amp;hellip; I
somehow haven&amp;rsquo;t &lt;em&gt;had&lt;/em&gt; to use it for anything in school or at work. I know, I
know&amp;hellip; it&amp;rsquo;s quite a feat. Still, the pervasiveness of SQL-like databases argues
that I really &lt;em&gt;should&lt;/em&gt; learn it. So I am.&lt;/p&gt;

&lt;p&gt;The main purpose of this website is to document some of the tech stuff I do in
my free time. This serves three purposes: 1) Organizing my thoughts into a post
enhances my learning, 2) I can easily refer back to the post to refresh my
memory in the future, 3) It&amp;rsquo;s a good medium to share what I&amp;rsquo;ve learned with
others.&lt;/p&gt;

&lt;p&gt;This post is a prime example, as it didn&amp;rsquo;t start out as a &lt;em&gt;post&lt;/em&gt;, but a file of
the &lt;em&gt;notes&lt;/em&gt; I took as I learned SQL basics. As I progressed, I realized all of
the accumulating information should be cleaned up and posted. So here we are.
I&amp;rsquo;ve redone the examples, and turned my shorthand blurbs into sentences, but if
this post still seems a bit different than previous ones (no images, more code
snippets than words)&amp;hellip; that&amp;rsquo;s because it&amp;rsquo;s my learning notes with makeup
heavily applied. Enjoy.&lt;/p&gt;

&lt;h2 id=&#34;install-setup&#34;&gt;Install Setup&lt;/h2&gt;

&lt;p&gt;I first installed mysql, by going to the &lt;a href=&#34;https://dev.mysql.com/downloads&#34;&gt;mySQL download
page&lt;/a&gt; and getting the appropriate the version
for my VM (centos 7). This may differ based on Distro/DB.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;I&amp;rsquo;m not going to cover any of the installation steps, as this post is more about
the SQL language, not setting up the DB. Besides, I did this in mysql, but in
the future I&amp;rsquo;ll likely look at using MariaDB anyway&amp;hellip;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;I do however want to note this issue I encountered, so I don&amp;rsquo;t stumble over it
in the future. At first, I couldn&amp;rsquo;t get the &lt;code&gt;/usr/bin/mysql_secure_installation&lt;/code&gt;
command to run due to a permission denied error&amp;hellip;&lt;/p&gt;

&lt;p&gt;Eventually, I learned that the first time mysql runs, it creates a temp password
in the log, located at &lt;code&gt;/var/log/mysqld.log&lt;/code&gt;. Using that password, I was able to
login.&lt;/p&gt;

&lt;h2 id=&#34;dbs-and-commands&#34;&gt;DBs and Commands:&lt;/h2&gt;

&lt;p&gt;Conventionally, SQL commands are typed in all CAPS, and statements end with a
terminating &lt;code&gt;;&lt;/code&gt;. The rest of this post contains some SQL functions, with
examples of how they are used.&lt;/p&gt;

&lt;h4 id=&#34;show-databases&#34;&gt;Show databases&lt;/h4&gt;

&lt;p&gt;To display all of the available databases, use the &lt;code&gt;SHOW DATABASES;&lt;/code&gt; command.
Note, some of the DBs displayed are ones generated for the database system. For
example, in the output below, &lt;em&gt;I&lt;/em&gt; only created &lt;code&gt;dbCustomerInfo&lt;/code&gt; and &lt;code&gt;dbTest&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-SQL&#34; data-lang=&#34;SQL&#34;&gt;mysql&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;SHOW&lt;/span&gt; DATABASES;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;--------------------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Database&lt;/span&gt;           &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;--------------------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; information_schema &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; dbCustomerInfo     &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; dbTest             &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; mysql              &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; performance_schema &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; sys                &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;--------------------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;rows&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;set&lt;/span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;00&lt;/span&gt; sec)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id=&#34;create-database&#34;&gt;Create database&lt;/h4&gt;

&lt;p&gt;To create a new database, use the &lt;code&gt;CREATE DATABASE&lt;/code&gt; command. Simple.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-SQL&#34; data-lang=&#34;SQL&#34;&gt;mysql&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;SHOW&lt;/span&gt; DATABASES;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;--------------------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Database&lt;/span&gt;           &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;--------------------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; information_schema &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; dbCustomerInfo     &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; dbTest             &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; mysql              &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; performance_schema &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; sys                &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;--------------------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;rows&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;set&lt;/span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;00&lt;/span&gt; sec)

mysql&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;DATABASE&lt;/span&gt; shotLivedDB;
Query OK, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;row&lt;/span&gt; affected (&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;00&lt;/span&gt; sec)

mysql&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;SHOW&lt;/span&gt; DATABASES;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;--------------------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Database&lt;/span&gt;           &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;--------------------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; information_schema &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; dbCustomerInfo     &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; dbTest             &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; mysql              &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; performance_schema &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; shotLivedDB        &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; sys                &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;--------------------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;rows&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;set&lt;/span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;00&lt;/span&gt; sec)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id=&#34;drop-a-database-delete&#34;&gt;Drop a database (delete):&lt;/h4&gt;

&lt;p&gt;As easy as it was to &lt;em&gt;create&lt;/em&gt; that database, deleting, or &lt;em&gt;dropping&lt;/em&gt; it is just
as effortless with the `DROP DATABASE command, so be careful!&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-SQL&#34; data-lang=&#34;SQL&#34;&gt;mysql&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;DROP&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;DATABASE&lt;/span&gt; shotLivedDB;
Query OK, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;rows&lt;/span&gt; affected (&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;00&lt;/span&gt; sec)

mysql&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;SHOW&lt;/span&gt; DATABASES;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;--------------------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Database&lt;/span&gt;           &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;--------------------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; information_schema &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; dbCustomerInfo     &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; dbTest             &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; mysql              &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; performance_schema &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; sys                &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;--------------------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;rows&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;set&lt;/span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;00&lt;/span&gt; sec)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id=&#34;select-db&#34;&gt;Select DB&lt;/h4&gt;

&lt;p&gt;To select which db to use inside the mysql shell use&amp;hellip; &lt;code&gt;USE&lt;/code&gt;. For this
tutorial, I created a database named &lt;code&gt;dbTest&lt;/code&gt; and selected it with &lt;code&gt;USE dbTest&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id=&#34;tables&#34;&gt;Tables&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;Note: make sure to first select a DB to work with: &lt;code&gt;USE dbTest;&lt;/code&gt;&amp;hellip;&lt;/em&gt;&lt;/p&gt;

&lt;h4 id=&#34;show-tables&#34;&gt;Show Tables&lt;/h4&gt;

&lt;p&gt;To show all of the tables in a database, use &lt;code&gt;SHOW TABLES;&lt;/code&gt;. For example:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-SQL&#34; data-lang=&#34;SQL&#34;&gt;mysql&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;SHOW&lt;/span&gt; TABLES;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;------------------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Tables_in_dbTest &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;------------------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; tblUsers         &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;------------------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;row&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;set&lt;/span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;00&lt;/span&gt; sec)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id=&#34;create-table&#34;&gt;Create Table&lt;/h4&gt;

&lt;p&gt;To create a &lt;em&gt;new&lt;/em&gt; table, use &lt;code&gt;CREATE TABLE&lt;/code&gt;. The &lt;code&gt;CREATE TABLE&lt;/code&gt; function takes
1) the name of the new table, and 2) a list of the table fields (with their
data types). For example, to create a user information table that contains a user&amp;rsquo;s
first name, last name, age, and state, as well as an identification number, the
following SQL command can be used:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-SQL&#34; data-lang=&#34;SQL&#34;&gt;mysql&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TABLE&lt;/span&gt; tblUsers (id int &lt;span style=&#34;color:#66d9ef&#34;&gt;PRIMARY&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;KEY&lt;/span&gt; AUTO_INCREMENT, firstname varchar(&lt;span style=&#34;color:#ae81ff&#34;&gt;50&lt;/span&gt;),lastname varchar(&lt;span style=&#34;color:#ae81ff&#34;&gt;50&lt;/span&gt;), age INT,&lt;span style=&#34;color:#66d9ef&#34;&gt;state&lt;/span&gt; varchar(&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;));
Query OK, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;rows&lt;/span&gt; affected (&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;01&lt;/span&gt; sec)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;first name&lt;/code&gt;, &lt;code&gt;last name&lt;/code&gt;, and &lt;code&gt;state&lt;/code&gt; columns have a &lt;code&gt;varchar&lt;/code&gt; data type,
which are strings of various sizes (50 and 2 characters in this case). The &lt;code&gt;id&lt;/code&gt;
and &lt;code&gt;age&lt;/code&gt; columns have an &lt;code&gt;int&lt;/code&gt; data type. Notice that the &lt;code&gt;id&lt;/code&gt; column
has some other junk defined after the &lt;code&gt;int&lt;/code&gt; identifier&amp;hellip;.&lt;/p&gt;

&lt;h4 id=&#34;constraints-and-fields&#34;&gt;Constraints and Fields&lt;/h4&gt;

&lt;p&gt;In addition to specifying data &lt;em&gt;type&lt;/em&gt;, other &lt;em&gt;constraints&lt;/em&gt; can be imposed on
columns when defining a new table. Constraints are used to limit the type of
data that goes into the table, and can be implemented at the column or table
level. To see the fields of a table, use the &lt;code&gt;SHOW FIELDS FROM tablename&lt;/code&gt;
command:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-SQL&#34; data-lang=&#34;SQL&#34;&gt;mysql&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;SHOW&lt;/span&gt; FIELDS &lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; tblUsers;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-----------|-------------|------|-----|---------|----------------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Field     &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Type&lt;/span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Null&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Key&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Default&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Extra          &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-----------|-------------|------|-----|---------|----------------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; id        &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; int(&lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt;)     &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;NO&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; PRI &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;NULL&lt;/span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; auto_increment &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; firstname &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; varchar(&lt;span style=&#34;color:#ae81ff&#34;&gt;50&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; YES  &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;     &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;NULL&lt;/span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;                &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; lastname  &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; varchar(&lt;span style=&#34;color:#ae81ff&#34;&gt;50&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; YES  &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;     &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;NULL&lt;/span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;                &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; age       &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; int(&lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt;)     &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; YES  &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;     &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;NULL&lt;/span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;                &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;state&lt;/span&gt;     &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; varchar(&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;)  &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; YES  &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;     &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;NULL&lt;/span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;                &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-----------|-------------|------|-----|---------|----------------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;rows&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;set&lt;/span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;00&lt;/span&gt; sec)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;id&lt;/code&gt; column uses the &lt;code&gt;PRIMARY KEY&lt;/code&gt; and &lt;code&gt;AUTO_INCREMENT&lt;/code&gt; constraints.
&lt;code&gt;PRIMARY_KEY&lt;/code&gt; is a combination of the &lt;code&gt;NOT NULL&lt;/code&gt; and &lt;code&gt;UNIQUE&lt;/code&gt; constraints,
meaning it ensures that all values in the column are unique and not &lt;code&gt;NULL&lt;/code&gt;. The
&lt;code&gt;AUTO_INCREMENT&lt;/code&gt; field generates an unique number that is automatically
incremented during each insert to the table.&lt;/p&gt;

&lt;h4 id=&#34;insert-into&#34;&gt;INSERT INTO&lt;/h4&gt;

&lt;p&gt;To actually &lt;em&gt;add&lt;/em&gt; data to the table, the &lt;code&gt;INSERT INTO&lt;/code&gt; command is used. As an
example, to add some users to the table created in the previous step:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-SQL&#34; data-lang=&#34;SQL&#34;&gt;mysql&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;INSERT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;INTO&lt;/span&gt; tblUsers (firstname,lastname,age,&lt;span style=&#34;color:#66d9ef&#34;&gt;state&lt;/span&gt;) 
&lt;span style=&#34;color:#66d9ef&#34;&gt;VALUES&lt;/span&gt; (&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Joe&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Fry&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;RI&amp;#39;&lt;/span&gt;);
Query OK, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;row&lt;/span&gt; affected (&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;01&lt;/span&gt; sec)

mysql&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;INSERT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;INTO&lt;/span&gt; tblUsers (firstname,lastname,age,&lt;span style=&#34;color:#66d9ef&#34;&gt;state&lt;/span&gt;) 
&lt;span style=&#34;color:#66d9ef&#34;&gt;VALUES&lt;/span&gt; (&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Emily&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Flanders&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;22&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;CA&amp;#39;&lt;/span&gt;);
Query OK, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;row&lt;/span&gt; affected (&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;01&lt;/span&gt; sec)

mysql&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;INSERT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;INTO&lt;/span&gt; tblUsers (firstname,lastname,age,&lt;span style=&#34;color:#66d9ef&#34;&gt;state&lt;/span&gt;) 
&lt;span style=&#34;color:#66d9ef&#34;&gt;VALUES&lt;/span&gt; (&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Tina&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Oak&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;42&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;NC&amp;#39;&lt;/span&gt;);
Query OK, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;row&lt;/span&gt; affected (&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;00&lt;/span&gt; sec)

mysql&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;INSERT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;INTO&lt;/span&gt; tblUsers (firstname,lastname,age,&lt;span style=&#34;color:#66d9ef&#34;&gt;state&lt;/span&gt;) 
&lt;span style=&#34;color:#66d9ef&#34;&gt;VALUES&lt;/span&gt; (&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Bob&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Builder&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;51&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;MO&amp;#39;&lt;/span&gt;);
Query OK, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;row&lt;/span&gt; affected (&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;01&lt;/span&gt; sec)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;tblUsers&lt;/code&gt; table should now contain the information of the 4 users added. To check
this, use &lt;code&gt;SELECT * FROM tblUsers;&lt;/code&gt; to select &lt;em&gt;everything&lt;/em&gt; from the &lt;code&gt;tblUsers&lt;/code&gt;
table:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-SQL&#34; data-lang=&#34;SQL&#34;&gt;mysql&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; tblUsers;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;----|-----------|----------|------|-------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; id &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; firstname &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; lastname &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; age  &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;state&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;----|-----------|----------|------|-------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Joe       &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Fry      &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; RI    &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Emily     &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Flanders &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;22&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; CA    &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Tina      &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Oak      &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;42&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; NC    &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Bob       &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Builder  &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;51&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; MO    &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;----|-----------|----------|------|-------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;rows&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;set&lt;/span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;00&lt;/span&gt; sec)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id=&#34;insert-into-another-table&#34;&gt;INSERT INTO Another Table&lt;/h4&gt;

&lt;p&gt;The &lt;code&gt;INSERT INTO&lt;/code&gt; command combined with &lt;code&gt;SELECT FROM&lt;/code&gt;, can insert contents of &lt;em&gt;one
table&lt;/em&gt; into &lt;em&gt;another&lt;/em&gt;. This technique can be quite useful, providing a simple way to
create quick backups.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-SQL&#34; data-lang=&#34;SQL&#34;&gt;mysql&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TABLE&lt;/span&gt; tblUsersBackup (id int &lt;span style=&#34;color:#66d9ef&#34;&gt;PRIMARY&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;KEY&lt;/span&gt; AUTO_INCREMENT, firstname varchar(&lt;span style=&#34;color:#ae81ff&#34;&gt;50&lt;/span&gt;),lastname varchar(&lt;span style=&#34;color:#ae81ff&#34;&gt;50&lt;/span&gt;), age INT,&lt;span style=&#34;color:#66d9ef&#34;&gt;state&lt;/span&gt; varchar(&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;));
Query OK, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;rows&lt;/span&gt; affected (&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;02&lt;/span&gt; sec)

mysql&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; tblUsersBackup;
Empty &lt;span style=&#34;color:#66d9ef&#34;&gt;set&lt;/span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;00&lt;/span&gt; sec)

mysql&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;INSERT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;INTO&lt;/span&gt; tblUsersBackup &lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; tblUsers;
Query OK, &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;rows&lt;/span&gt; affected (&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;00&lt;/span&gt; sec)
Records: &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;  Duplicates: &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;  Warnings: &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;

mysql&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; tblUsersBackup;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;----|-----------|----------|------|-------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; id &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; firstname &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; lastname &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; age  &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;state&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;----|-----------|----------|------|-------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Joe       &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Fry      &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; RI    &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Emily     &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Flanders &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;22&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; CA    &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Tina      &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Oak      &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;42&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; NC    &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Bob       &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Builder  &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;51&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; MO    &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;----|-----------|----------|------|-------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;rows&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;set&lt;/span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;00&lt;/span&gt; sec)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id=&#34;drop-delete-table&#34;&gt;Drop (delete) Table&lt;/h4&gt;

&lt;p&gt;To delete a table, the &lt;code&gt;DROP&lt;/code&gt; command is used. For example, to delete the backup
table from above, issue &lt;code&gt;DROP TABLE tblUsersBackup;&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-SQL&#34; data-lang=&#34;SQL&#34;&gt;mysql&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;DROP&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TABLE&lt;/span&gt; tblUsersBackup;
Query OK, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;rows&lt;/span&gt; affected (&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;01&lt;/span&gt; sec)

mysql&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; tblUsersBackup;
ERROR &lt;span style=&#34;color:#ae81ff&#34;&gt;1146&lt;/span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;42&lt;/span&gt;S02): &lt;span style=&#34;color:#66d9ef&#34;&gt;Table&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;dbTest.tblUsersBackup&amp;#39;&lt;/span&gt; doesn&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;t exist&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;NOTE: Using &lt;code&gt;DROP&lt;/code&gt; commands will delete the entire structure (including the
schema), even if there is data in it. Be Careful!&lt;/strong&gt;&lt;/p&gt;

&lt;h4 id=&#34;select&#34;&gt;SELECT&lt;/h4&gt;

&lt;p&gt;In addition to selecting &lt;em&gt;all&lt;/em&gt; of the data in a table using &lt;code&gt;SELECT *&lt;/code&gt;, The
&lt;code&gt;SELECT&lt;/code&gt; command can be utilized to select all sorts of combinations of the
data. Here are a few examples:&lt;/p&gt;

&lt;p&gt;&amp;ndash; Select specific columns from the table:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-SQL&#34; data-lang=&#34;SQL&#34;&gt;mysql&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; firstname,lastname &lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; tblUsers;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-----------|----------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; firstname &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; lastname &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-----------|----------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Joe       &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Fry      &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Emily     &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Flanders &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Tina      &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Oak      &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Bob       &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Builder  &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-----------|----------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;rows&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;set&lt;/span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;00&lt;/span&gt; sec)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&amp;ndash; Grab column(s), after matching in another:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-SQL&#34; data-lang=&#34;SQL&#34;&gt;mysql&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; firstname,lastname &lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; tblUsers &lt;span style=&#34;color:#66d9ef&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;state&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;RI&amp;#34;&lt;/span&gt;;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-----------|----------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; firstname &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; lastname &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-----------|----------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Joe       &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Fry      &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-----------|----------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;row&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;set&lt;/span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;00&lt;/span&gt; sec)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In addition to searching using &lt;code&gt;=&lt;/code&gt; (which only grabs exact matches), other
operators, such as &lt;code&gt;&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;&lt;/code&gt;, &lt;code&gt;&amp;lt;=&lt;/code&gt;, &lt;code&gt;&amp;gt;=&lt;/code&gt;, &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt; (not equal), &lt;code&gt;BETWEEN&lt;/code&gt; (between an
inclusive range), and &lt;code&gt;LIKE&lt;/code&gt; (search for pattern) can be used with the &lt;code&gt;WHERE&lt;/code&gt;
clause. For example:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-SQL&#34; data-lang=&#34;SQL&#34;&gt;mysql&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; firstname,lastname &lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; tblUsers &lt;span style=&#34;color:#66d9ef&#34;&gt;WHERE&lt;/span&gt; age&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;25&lt;/span&gt;;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-----------|----------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; firstname &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; lastname &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-----------|----------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Joe       &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Fry      &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Tina      &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Oak      &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Bob       &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Builder  &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-----------|----------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;rows&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;set&lt;/span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;00&lt;/span&gt; sec)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-SQL&#34; data-lang=&#34;SQL&#34;&gt;mysql&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; firstname,lastname &lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; tblUsers &lt;span style=&#34;color:#66d9ef&#34;&gt;WHERE&lt;/span&gt; age &lt;span style=&#34;color:#66d9ef&#34;&gt;BETWEEN&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;30&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;AND&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;50&lt;/span&gt;;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-----------|----------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; firstname &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; lastname &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-----------|----------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Joe       &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Fry      &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Tina      &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Oak      &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-----------|----------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;rows&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;set&lt;/span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;00&lt;/span&gt; sec)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id=&#34;alter&#34;&gt;ALTER&lt;/h4&gt;

&lt;p&gt;To change the table schema (add, drop or modify columns), the &lt;code&gt;ALTER&lt;/code&gt; command
is used along with &lt;code&gt;ADD&lt;/code&gt;, &lt;code&gt;DROP COLUMN&lt;/code&gt;, or &lt;code&gt;MODIFY COLUMN&lt;/code&gt; (respectively)
after the tablename. For example:&lt;/p&gt;

&lt;p&gt;&amp;ndash; Add a &lt;code&gt;born&lt;/code&gt; column to the table&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-SQL&#34; data-lang=&#34;SQL&#34;&gt;mysql&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; tblUsers;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;----|-----------|----------|------|-------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; id &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; firstname &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; lastname &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; age  &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;state&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;----|-----------|----------|------|-------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Joe       &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Fry      &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; RI    &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Emily     &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Flanders &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;22&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; CA    &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Tina      &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Oak      &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;42&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; NC    &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Bob       &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Builder  &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;51&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; MO    &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;----|-----------|----------|------|-------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;rows&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;set&lt;/span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;00&lt;/span&gt; sec)

mysql&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;ALTER&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TABLE&lt;/span&gt; tblUsers &lt;span style=&#34;color:#66d9ef&#34;&gt;ADD&lt;/span&gt; born &lt;span style=&#34;color:#66d9ef&#34;&gt;year&lt;/span&gt;;
Query OK, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;rows&lt;/span&gt; affected (&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;07&lt;/span&gt; sec)
Records: &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;  Duplicates: &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;  Warnings: &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;

mysql&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; tblUsers;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;----|-----------|----------|------|-------|------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; id &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; firstname &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; lastname &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; age  &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;state&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; born &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;----|-----------|----------|------|-------|------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Joe       &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Fry      &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; RI    &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;NULL&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Emily     &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Flanders &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;22&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; CA    &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;NULL&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Tina      &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Oak      &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;42&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; NC    &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;NULL&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Bob       &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Builder  &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;51&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; MO    &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;NULL&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;----|-----------|----------|------|-------|------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;rows&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;set&lt;/span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;00&lt;/span&gt; sec)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&amp;ndash; Change &lt;code&gt;born&lt;/code&gt; column from a &lt;code&gt;year&lt;/code&gt; data type to a &lt;code&gt;date&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-SQL&#34; data-lang=&#34;SQL&#34;&gt;mysql&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;ALTER&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TABLE&lt;/span&gt; tblUsers &lt;span style=&#34;color:#66d9ef&#34;&gt;MODIFY&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;COLUMN&lt;/span&gt; born date;
Query OK, &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;rows&lt;/span&gt; affected (&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;03&lt;/span&gt; sec)
Records: &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;  Duplicates: &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;  Warnings: &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&amp;ndash; Drop the &lt;code&gt;born&lt;/code&gt; column from the table&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-SQL&#34; data-lang=&#34;SQL&#34;&gt;mysql&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; tblUsers;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;----|-----------|----------|------|-------|------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; id &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; firstname &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; lastname &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; age  &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;state&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; born &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;----|-----------|----------|------|-------|------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Joe       &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Fry      &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; RI    &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;NULL&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Emily     &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Flanders &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;22&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; CA    &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;NULL&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Tina      &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Oak      &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;42&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; NC    &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;NULL&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Bob       &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Builder  &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;51&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; MO    &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;NULL&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;----|-----------|----------|------|-------|------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;rows&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;set&lt;/span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;00&lt;/span&gt; sec)

mysql&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;ALTER&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TABLE&lt;/span&gt; tblUsers &lt;span style=&#34;color:#66d9ef&#34;&gt;DROP&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;COLUMN&lt;/span&gt; born;
Query OK, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;rows&lt;/span&gt; affected (&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;04&lt;/span&gt; sec)
Records: &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;  Duplicates: &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;  Warnings: &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;

mysql&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; tblUsers;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;----|-----------|----------|------|-------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; id &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; firstname &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; lastname &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; age  &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;state&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;----|-----------|----------|------|-------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Joe       &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Fry      &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; RI    &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Emily     &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Flanders &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;22&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; CA    &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Tina      &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Oak      &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;42&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; NC    &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Bob       &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Builder  &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;51&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; MO    &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;----|-----------|----------|------|-------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;rows&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;set&lt;/span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;00&lt;/span&gt; sec)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;NOTE: Depending on the type of SQL database being used, the &lt;code&gt;MODIFY&lt;/code&gt; command may
be known as &lt;code&gt;ALTER&lt;/code&gt;.&lt;/p&gt;

&lt;h4 id=&#34;delete&#34;&gt;Delete&lt;/h4&gt;

&lt;p&gt;All the &lt;em&gt;data&lt;/em&gt; in a table can be removed using &lt;code&gt;DELETE * FROM tblName&lt;/code&gt;,
&lt;em&gt;without&lt;/em&gt; deleting the table schema. However, this is almost never used because
there are better commands to do that.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Specific&lt;/em&gt; items from the table can be removed using &lt;code&gt;DELETE FROM&lt;/code&gt;
commands:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-SQL&#34; data-lang=&#34;SQL&#34;&gt;mysql&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; tblUsersBackup;                                                                    
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;----|-----------|----------|------|-------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; id &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; firstname &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; lastname &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; age  &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;state&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;----|-----------|----------|------|-------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Joe       &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Fry      &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; RI    &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Emily     &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Flanders &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;22&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; CA    &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Tina      &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Oak      &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;42&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; NC    &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Bob       &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Builder  &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;51&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; MO    &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;----|-----------|----------|------|-------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;rows&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;set&lt;/span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;00&lt;/span&gt; sec)

mysql&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;DELETE&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; tblUsersBackup &lt;span style=&#34;color:#66d9ef&#34;&gt;WHERE&lt;/span&gt; age&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;35&lt;/span&gt;;
Query OK, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;rows&lt;/span&gt; affected (&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;01&lt;/span&gt; sec)

mysql&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; tblUsersBackup;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;----|-----------|----------|------|-------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; id &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; firstname &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; lastname &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; age  &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;state&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;----|-----------|----------|------|-------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Joe       &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Fry      &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; RI    &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Emily     &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Flanders &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;22&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; CA    &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;----|-----------|----------|------|-------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;rows&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;set&lt;/span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;00&lt;/span&gt; sec)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Multiple criteria can also be used to specify what to delete:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-SQL&#34; data-lang=&#34;SQL&#34;&gt;mysql&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; tblUsersBackup;                                                                    
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;----|-----------|----------|------|-------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; id &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; firstname &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; lastname &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; age  &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;state&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;----|-----------|----------|------|-------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Joe       &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Fry      &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; RI    &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Emily     &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Flanders &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;22&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; CA    &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Tina      &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Oak      &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;42&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; NC    &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Bob       &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Builder  &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;51&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; MO    &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;----|-----------|----------|------|-------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
mysql&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;DELETE&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; tblUsersBackup &lt;span style=&#34;color:#66d9ef&#34;&gt;WHERE&lt;/span&gt; age&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;50&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;OR&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;state&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;RI&amp;#34;&lt;/span&gt;;
Query OK, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;rows&lt;/span&gt; affected (&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;00&lt;/span&gt; sec)

mysql&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; tblUsersBackup;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;----|-----------|----------|------|-------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; id &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; firstname &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; lastname &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; age  &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;state&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;----|-----------|----------|------|-------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Emily     &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Flanders &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;22&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; CA    &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Tina      &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Oak      &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;42&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; NC    &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;----|-----------|----------|------|-------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;rows&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;set&lt;/span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;00&lt;/span&gt; sec)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id=&#34;indexes&#34;&gt;Indexes&lt;/h4&gt;

&lt;p&gt;An index speeds up the data retrieval time of a table. However, this comes at a
speed cost for &lt;em&gt;updating&lt;/em&gt; the table. So, it is usually a good idea to only index
columns or tables that are frequently searched on.&lt;/p&gt;

&lt;p&gt;To add an index, use &lt;code&gt;CREATE INDEX&lt;/code&gt;. &lt;em&gt;(Again, may differ depending on database
technology being used)&lt;/em&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-SQL&#34; data-lang=&#34;SQL&#34;&gt;mysql&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;SHOW&lt;/span&gt; FIELDS &lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; tblUsers;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-----------|-------------|------|-----|---------|----------------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Field     &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Type&lt;/span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Null&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Key&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Default&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Extra          &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-----------|-------------|------|-----|---------|----------------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; id        &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; int(&lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt;)     &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;NO&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; PRI &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;NULL&lt;/span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; auto_increment &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; firstname &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; varchar(&lt;span style=&#34;color:#ae81ff&#34;&gt;50&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; YES  &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;     &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;NULL&lt;/span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;                &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; lastname  &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; varchar(&lt;span style=&#34;color:#ae81ff&#34;&gt;50&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; YES  &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;     &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;NULL&lt;/span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;                &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; age       &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; int(&lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt;)     &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; YES  &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;     &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;NULL&lt;/span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;                &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;state&lt;/span&gt;     &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; varchar(&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;)  &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; YES  &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;     &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;NULL&lt;/span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;                &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-----------|-------------|------|-----|---------|----------------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;rows&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;set&lt;/span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;00&lt;/span&gt; sec)

mysql&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;INDEX&lt;/span&gt; indexTblUsers &lt;span style=&#34;color:#66d9ef&#34;&gt;ON&lt;/span&gt; tblUsers (id);
Query OK, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;rows&lt;/span&gt; affected (&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;01&lt;/span&gt; sec)
Records: &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;  Duplicates: &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;  Warnings: &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id=&#34;drop-table&#34;&gt;Drop Table&lt;/h4&gt;

&lt;p&gt;As we already know, you can drop a whole table with &lt;code&gt;DROP&lt;/code&gt;. However, like many
of the other commands, &lt;code&gt;DROP&lt;/code&gt; can be used with other items, like an index:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-SQL&#34; data-lang=&#34;SQL&#34;&gt;mysql&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;ALTER&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TABLE&lt;/span&gt; tblUsers &lt;span style=&#34;color:#66d9ef&#34;&gt;DROP&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;INDEX&lt;/span&gt; indexTblUsers;
Query OK, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;rows&lt;/span&gt; affected (&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;01&lt;/span&gt; sec)
Records: &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;  Duplicates: &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;  Warnings: &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id=&#34;truncate&#34;&gt;Truncate&lt;/h4&gt;

&lt;p&gt;The &lt;code&gt;truncate&lt;/code&gt; command will delete the data, but leave table schema the same&amp;hellip;
again, still be careful because it &lt;em&gt;will&lt;/em&gt; delete &lt;em&gt;all the data&lt;/em&gt; in the table.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-SQL&#34; data-lang=&#34;SQL&#34;&gt;mysql&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; tblUsersBackup;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;----|-----------|----------|------|-------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; id &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; firstname &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; lastname &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; age  &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;state&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;----|-----------|----------|------|-------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Emily     &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Flanders &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;22&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; CA    &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Tina      &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Oak      &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;42&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; NC    &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;----|-----------|----------|------|-------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;rows&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;set&lt;/span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;00&lt;/span&gt; sec)

mysql&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TRUNCATE&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TABLE&lt;/span&gt; tblUsersBackup;
Query OK, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;rows&lt;/span&gt; affected (&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;03&lt;/span&gt; sec)

mysql&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; tblUsersBackup;
Empty &lt;span style=&#34;color:#66d9ef&#34;&gt;set&lt;/span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;00&lt;/span&gt; sec)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id=&#34;auto-increment&#34;&gt;Auto Increment&lt;/h4&gt;

&lt;p&gt;An Integer value, that once assigned, auto increments by 1 everytime the table
is updated.&lt;/p&gt;

&lt;p&gt;You can auto increment a key, which is very useful for IDs in a table (as we saw
earlier).all the data&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-SQL&#34; data-lang=&#34;SQL&#34;&gt;mysql&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;SHOW&lt;/span&gt; FIELDS &lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; tblPeople;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-----------|-------------|------|-----|---------|----------------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Field     &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Type&lt;/span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Null&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Key&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Default&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Extra          &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-----------|-------------|------|-----|---------|----------------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; id        &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; int(&lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt;)     &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;NO&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; PRI &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;NULL&lt;/span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; auto_increment &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; firstname &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; varchar(&lt;span style=&#34;color:#ae81ff&#34;&gt;50&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; YES  &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;     &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;NULL&lt;/span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;                &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; lastname  &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; varchar(&lt;span style=&#34;color:#ae81ff&#34;&gt;50&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; YES  &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;     &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;NULL&lt;/span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;                &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; age       &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; int(&lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt;)     &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; YES  &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;     &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;NULL&lt;/span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;                &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;state&lt;/span&gt;     &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; varchar(&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;)  &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; YES  &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;     &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;NULL&lt;/span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;                &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-----------|-------------|------|-----|---------|----------------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;rows&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;set&lt;/span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;00&lt;/span&gt; sec)

mysql&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;INSERT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;INTO&lt;/span&gt; tblPeople (firstname, lastname, age, &lt;span style=&#34;color:#66d9ef&#34;&gt;state&lt;/span&gt;) 
&lt;span style=&#34;color:#66d9ef&#34;&gt;VALUES&lt;/span&gt; (&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Josh&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Rivers&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;19&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;PA&amp;#34;&lt;/span&gt;);
Query OK, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;row&lt;/span&gt; affected (&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;00&lt;/span&gt; sec)

mysql&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;INSERT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;INTO&lt;/span&gt; tblPeople (firstname, lastname, age, &lt;span style=&#34;color:#66d9ef&#34;&gt;state&lt;/span&gt;) 
&lt;span style=&#34;color:#66d9ef&#34;&gt;VALUES&lt;/span&gt; (&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Kim&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Medows&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;CO&amp;#34;&lt;/span&gt;);
Query OK, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;row&lt;/span&gt; affected (&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;00&lt;/span&gt; sec)

mysql&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt;  tblPeople;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;----|-----------|----------|------|-------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; id &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; firstname &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; lastname &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; age  &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;state&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;----|-----------|----------|------|-------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Josh      &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Rivers   &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;19&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; PA    &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Kim       &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Medows   &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; CO    &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;----|-----------|----------|------|-------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;rows&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;set&lt;/span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;00&lt;/span&gt; sec)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note: The auto increment value can be manually set.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-SQL&#34; data-lang=&#34;SQL&#34;&gt;mysql&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;INSERT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;INTO&lt;/span&gt; tblPeople (firstname, lastname, age, &lt;span style=&#34;color:#66d9ef&#34;&gt;state&lt;/span&gt;) 
&lt;span style=&#34;color:#66d9ef&#34;&gt;VALUES&lt;/span&gt; (&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Dan&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Valley&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;40&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;NH&amp;#34;&lt;/span&gt;);
Query OK, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;row&lt;/span&gt; affected (&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;01&lt;/span&gt; sec)

mysql&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt;  tblPeople;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;------|-----------|----------|------|-------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; id   &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; firstname &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; lastname &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; age  &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;state&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;------|-----------|----------|------|-------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;    &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Josh      &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Rivers   &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;19&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; PA    &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;    &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Kim       &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Medows   &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; CO    &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1000&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Dan       &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Valley   &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;40&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; NH    &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;------|-----------|----------|------|-------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;rows&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;set&lt;/span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;00&lt;/span&gt; sec)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When setting the auto increment value manually, just be careful that it isn&amp;rsquo;t
set to one that will eventually overwrite another value in the table that &lt;em&gt;must&lt;/em&gt;
be unique, or it will error.&lt;/p&gt;

&lt;h3 id=&#34;sql-functions&#34;&gt;SQL Functions&lt;/h3&gt;

&lt;p&gt;SQL &lt;em&gt;functions&lt;/em&gt;, are SQL statements that don&amp;rsquo;t directly manipulate data, but can
be use to extract other useful information from the database and tables. They
are often used in conjunction with &lt;code&gt;SELECT&lt;/code&gt;. There are a bunch of base SQL
functions to use. Here is a sampling of a few:&lt;/p&gt;

&lt;h4 id=&#34;count&#34;&gt;COUNT&lt;/h4&gt;

&lt;p&gt;Shows the number of matched results returned. In this example, the number of
rows in &lt;code&gt;tblUsers&lt;/code&gt;, and then the number of users over the age of 35:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-SQL&#34; data-lang=&#34;SQL&#34;&gt;mysql&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; tblUsers;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;----|-----------|----------|------|-------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; id &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; firstname &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; lastname &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; age  &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;state&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;----|-----------|----------|------|-------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Joe       &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Fry      &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; RI    &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Emily     &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Flanders &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;22&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; CA    &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Tina      &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Oak      &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;42&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; NC    &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Bob       &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Builder  &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;51&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; MO    &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;----|-----------|----------|------|-------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;rows&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;set&lt;/span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;00&lt;/span&gt; sec)

mysql&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;COUNT&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;) &lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; tblUsers;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;----------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;COUNT&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;----------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;        &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;----------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;row&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;set&lt;/span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;00&lt;/span&gt; sec)

mysql&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;COUNT&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;) &lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; tblUsers &lt;span style=&#34;color:#66d9ef&#34;&gt;WHERE&lt;/span&gt; age&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;35&lt;/span&gt;;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;----------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;COUNT&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;----------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;        &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;----------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;row&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;set&lt;/span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;00&lt;/span&gt; sec)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id=&#34;average-and-sum-functions&#34;&gt;Average and Sum Functions&lt;/h4&gt;

&lt;p&gt;To get an average of the number values in a column, use the &lt;code&gt;AVG&lt;/code&gt; function:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-SQL&#34; data-lang=&#34;SQL&#34;&gt;mysql&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;AVG&lt;/span&gt;(age) &lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt; tblUsers;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;----------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;AVG&lt;/span&gt;(age) &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;----------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;36&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;7500&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;----------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;row&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;set&lt;/span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;00&lt;/span&gt; sec)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To get a total of a column&amp;rsquo;s number values, use the &lt;code&gt;SUM&lt;/code&gt; function:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-SQL&#34; data-lang=&#34;SQL&#34;&gt;mysql&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;SUM&lt;/span&gt;(age) &lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt; tblUsers;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;----------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;SUM&lt;/span&gt;(age) &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;----------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#ae81ff&#34;&gt;147&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;----------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;row&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;set&lt;/span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;00&lt;/span&gt; sec)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note, that select statements using functions can still be combined:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-SQL&#34; data-lang=&#34;SQL&#34;&gt;mysql&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;COUNT&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;),&lt;span style=&#34;color:#66d9ef&#34;&gt;AVG&lt;/span&gt;(age) &lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt; tblUsers;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;----------|----------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;COUNT&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;AVG&lt;/span&gt;(age) &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;----------|----------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;        &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;36&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;7500&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;----------|----------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;row&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;set&lt;/span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;00&lt;/span&gt; sec)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;the-like-operator&#34;&gt;The Like Operator&lt;/h3&gt;

&lt;p&gt;The &lt;code&gt;LIKE&lt;/code&gt; operator can be used for matching, with wildcards (&lt;code&gt;%&lt;/code&gt;). For example
in the following searches, &lt;code&gt;%S&lt;/code&gt; and &lt;code&gt;S%&lt;/code&gt; yield different results because the
first looks for last names which &lt;em&gt;end&lt;/em&gt; in an &amp;ldquo;s&amp;rdquo;, and the second grabs last
names which &lt;em&gt;start&lt;/em&gt; with &amp;ldquo;s&amp;rdquo;. The last example returns names which have &amp;ldquo;er&amp;rdquo;
anywhere in the last name.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Note, &lt;code&gt;LIKE&lt;/code&gt; uses higher CPU usage. With larger data sets, try to use it on
columns which are indexed if possible.&lt;/em&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-SQL&#34; data-lang=&#34;SQL&#34;&gt;mysql&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; tblUsers;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;----|-----------|----------|------|-------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; id &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; firstname &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; lastname &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; age  &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;state&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;----|-----------|----------|------|-------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Joe       &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Fry      &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; RI    &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Emily     &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Flanders &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;22&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; CA    &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Tina      &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Oak      &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;42&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; NC    &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Bob       &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Builder  &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;51&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; MO    &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Zach      &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Scout    &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;27&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; NV    &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;----|-----------|----------|------|-------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;rows&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;set&lt;/span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;00&lt;/span&gt; sec)

mysql&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; tblUsers &lt;span style=&#34;color:#66d9ef&#34;&gt;WHERE&lt;/span&gt; lastname &lt;span style=&#34;color:#66d9ef&#34;&gt;LIKE&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;%S&amp;#39;&lt;/span&gt;;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;----|-----------|----------|------|-------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; id &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; firstname &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; lastname &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; age  &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;state&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;----|-----------|----------|------|-------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Emily     &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Flanders &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;22&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; CA    &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;----|-----------|----------|------|-------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;row&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;set&lt;/span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;00&lt;/span&gt; sec)

mysql&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; tblUsers &lt;span style=&#34;color:#66d9ef&#34;&gt;WHERE&lt;/span&gt; lastname &lt;span style=&#34;color:#66d9ef&#34;&gt;LIKE&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;S%&amp;#39;&lt;/span&gt;;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;----|-----------|----------|------|-------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; id &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; firstname &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; lastname &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; age  &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;state&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;----|-----------|----------|------|-------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Zach      &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Scout    &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;27&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; NV    &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;----|-----------|----------|------|-------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;row&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;set&lt;/span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;00&lt;/span&gt; sec)

mysql&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; tblUsers &lt;span style=&#34;color:#66d9ef&#34;&gt;WHERE&lt;/span&gt; lastname &lt;span style=&#34;color:#66d9ef&#34;&gt;LIKE&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;%er%&amp;#39;&lt;/span&gt;;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;----|-----------|----------|------|-------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; id &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; firstname &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; lastname &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; age  &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;state&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;----|-----------|----------|------|-------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Emily     &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Flanders &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;22&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; CA    &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Bob       &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Builder  &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;51&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; MO    &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;----|-----------|----------|------|-------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;rows&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;set&lt;/span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;00&lt;/span&gt; sec)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;views&#34;&gt;Views&lt;/h3&gt;

&lt;p&gt;Views create a custom filter to display a set of the data. This can be useful
when defining several use cases of an application. For example, a view can
saved, and then just &lt;em&gt;updated&lt;/em&gt;, instead of &lt;em&gt;recalculated&lt;/em&gt;, when querying for
dash boards, and/or reports.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-SQL&#34; data-lang=&#34;SQL&#34;&gt;mysql&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; tblUsers;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;----|-----------|----------|------|-------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; id &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; firstname &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; lastname &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; age  &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;state&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;----|-----------|----------|------|-------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Joe       &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Fry      &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; RI    &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Emily     &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Flanders &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;22&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; CA    &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Tina      &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Oak      &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;42&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; NC    &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Bob       &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Builder  &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;51&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; MO    &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Zach      &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Scout    &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;27&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; NV    &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;----|-----------|----------|------|-------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;rows&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;set&lt;/span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;00&lt;/span&gt; sec)

mysql&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;VIEW&lt;/span&gt; myView &lt;span style=&#34;color:#66d9ef&#34;&gt;AS&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;COUNT&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;), &lt;span style=&#34;color:#66d9ef&#34;&gt;AVG&lt;/span&gt;(age), &lt;span style=&#34;color:#66d9ef&#34;&gt;SUM&lt;/span&gt;(age) &lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; tblUsers;
Query OK, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;rows&lt;/span&gt; affected (&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;01&lt;/span&gt; sec)

mysql&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; myView;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;----------|----------|----------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;COUNT&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;AVG&lt;/span&gt;(age) &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;SUM&lt;/span&gt;(age) &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;----------|----------|----------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;        &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;34&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;8000&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#ae81ff&#34;&gt;174&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;----------|----------|----------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;row&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;set&lt;/span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;00&lt;/span&gt; sec)

mysql&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;DELETE&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; tblUsers &lt;span style=&#34;color:#66d9ef&#34;&gt;WHERE&lt;/span&gt; firstname&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Bob&amp;#39;&lt;/span&gt;;
Query OK, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;row&lt;/span&gt; affected (&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;01&lt;/span&gt; sec)

mysql&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; myView;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;----------|----------|----------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;COUNT&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;AVG&lt;/span&gt;(age) &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;SUM&lt;/span&gt;(age) &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;----------|----------|----------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;        &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;30&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;7500&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#ae81ff&#34;&gt;123&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;----------|----------|----------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;row&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;set&lt;/span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;00&lt;/span&gt; sec)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;joins&#34;&gt;Joins&lt;/h3&gt;

&lt;h4 id=&#34;inner-join&#34;&gt;Inner Join&lt;/h4&gt;

&lt;p&gt;An Inner join will return the selected rows from multiple tables, when there is
at least one match in each table. For example:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-SQL&#34; data-lang=&#34;SQL&#34;&gt;mysql&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; tblUsers;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;----|-----------|----------|------|-------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; id &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; firstname &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; lastname &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; age  &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;state&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;----|-----------|----------|------|-------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Joe       &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Fry      &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; RI    &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Emily     &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Flanders &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;22&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; CA    &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Tina      &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Oak      &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;42&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; NC    &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Zach      &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Scout    &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;27&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; NV    &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;----|-----------|----------|------|-------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;rows&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;set&lt;/span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;00&lt;/span&gt; sec)

mysql&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; tblUsersPts;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;----|-----------|----------|-------|--------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; id &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; firstname &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; lastname &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; team  &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; points &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;----|-----------|----------|-------|--------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Joe       &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Fry      &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Red   &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;20000&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Emily     &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Flanders &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Blue  &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;17000&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Tina      &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Oak      &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Red   &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;32800&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Bob       &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Builder  &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Green &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;40100&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;----|-----------|----------|-------|--------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;rows&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;set&lt;/span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;00&lt;/span&gt; sec)

mysql&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; tblUsersPts.firstname, tblUsersPts.lastname, tblUsersPts.points
    &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; tblUsersPts &lt;span style=&#34;color:#66d9ef&#34;&gt;INNER&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;JOIN&lt;/span&gt; tblUsers
    &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;ON&lt;/span&gt; tblUsers.lastname&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;tblUsersPts.lastname 
    &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;AND&lt;/span&gt; tblUsers.firstname&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;tblUsersPts.firstname;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-----------|----------|--------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; firstname &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; lastname &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; points &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-----------|----------|--------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Joe       &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Fry      &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;20000&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Emily     &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Flanders &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;17000&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Tina      &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Oak      &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;32800&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-----------|----------|--------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;rows&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;set&lt;/span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;00&lt;/span&gt; sec)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id=&#34;right-join&#34;&gt;Right Join&lt;/h4&gt;

&lt;p&gt;A &lt;em&gt;right&lt;/em&gt; join will return &lt;em&gt;everything&lt;/em&gt; in the right table, and any existing/matched
items on the left. Any non-matching data will display as null.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-SQL&#34; data-lang=&#34;SQL&#34;&gt;mysql&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; tblUsers;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;----|-----------|----------|------|-------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; id &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; firstname &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; lastname &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; age  &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;state&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;----|-----------|----------|------|-------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Joe       &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Fry      &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; RI    &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Emily     &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Flanders &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;22&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; CA    &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Tina      &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Oak      &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;42&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; NC    &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Zach      &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Scout    &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;27&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; NV    &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;----|-----------|----------|------|-------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;rows&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;set&lt;/span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;00&lt;/span&gt; sec)

mysql&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; tblUsersPts;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;----|-----------|----------|-------|--------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; id &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; firstname &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; lastname &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; team  &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; points &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;----|-----------|----------|-------|--------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Joe       &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Fry      &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Red   &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;20000&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Emily     &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Flanders &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Blue  &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;17000&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Tina      &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Oak      &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Red   &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;32800&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Bob       &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Builder  &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Green &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;40100&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;----|-----------|----------|-------|--------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;rows&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;set&lt;/span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;00&lt;/span&gt; sec)

mysql&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; firstname, lastname, points &lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; tblUsersPts 
&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;RIGHT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;JOIN&lt;/span&gt; tblUsers &lt;span style=&#34;color:#66d9ef&#34;&gt;ON&lt;/span&gt; tblUsers.lastname&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;tblUsersPts.lastname 
&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;AND&lt;/span&gt; tblUsers.firstname&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;tblUsersPts.firstname;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-----------|----------|--------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; firstname &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; lastname &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; points &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-----------|----------|--------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Joe       &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Fry      &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;20000&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Emily     &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Flanders &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;17000&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Tina      &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Oak      &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;32800&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;NULL&lt;/span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;NULL&lt;/span&gt;     &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;NULL&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-----------|----------|--------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;rows&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;set&lt;/span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;00&lt;/span&gt; sec)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id=&#34;left-join&#34;&gt;Left Join&lt;/h4&gt;

&lt;p&gt;Basically the same as a &lt;code&gt;RIGHT&lt;/code&gt; join, but with the left table items all joining.&lt;/p&gt;

&lt;h4 id=&#34;full-join&#34;&gt;Full Join&lt;/h4&gt;

&lt;p&gt;A full join shows &lt;em&gt;all&lt;/em&gt; records from both the right and left table, regardless
of matching the relation records of either.&lt;/p&gt;

&lt;p&gt;NOTE: Full outer joins do not work on mysql, but would on postresql. It is
recommended to use Unions to emulate them if needed.&lt;/p&gt;

&lt;h3 id=&#34;unions&#34;&gt;Unions&lt;/h3&gt;

&lt;p&gt;Unions are used to combine and concatenate &lt;code&gt;SELECT&lt;/code&gt; statements from multiple
tables.&lt;/p&gt;

&lt;p&gt;This example doesn&amp;rsquo;t work well because it doesn&amp;rsquo;t make much sense (&lt;code&gt;age&lt;/code&gt; isn&amp;rsquo;t
the same as a &lt;code&gt;point&lt;/code&gt;), but at least it displays what is happening during the &lt;code&gt;UNION&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-SQL&#34; data-lang=&#34;SQL&#34;&gt;mysql&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; firstname, lastname, points &lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; tblUsersPts 
&lt;span style=&#34;color:#66d9ef&#34;&gt;UNION&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; firstname, lastname, age &lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; tblUsers;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-----------|----------|--------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; firstname &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; lastname &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; points &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-----------|----------|--------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Joe       &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Fry      &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;20000&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Emily     &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Flanders &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;17000&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Tina      &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Oak      &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;32800&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Bob       &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Builder  &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;40100&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Joe       &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Fry      &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;     &lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Emily     &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Flanders &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;     &lt;span style=&#34;color:#ae81ff&#34;&gt;22&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Tina      &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Oak      &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;     &lt;span style=&#34;color:#ae81ff&#34;&gt;42&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Zach      &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Scout    &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;     &lt;span style=&#34;color:#ae81ff&#34;&gt;27&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-----------|----------|--------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;rows&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;set&lt;/span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;00&lt;/span&gt; sec)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;sorting-records&#34;&gt;Sorting Records&lt;/h3&gt;

&lt;p&gt;Record rows can be sorted in the ascending or descending order of a column by using
the &lt;code&gt;ODER&lt;/code&gt; command and either &lt;code&gt;ASC&lt;/code&gt; for &amp;ldquo;ascending&amp;rdquo; or &lt;code&gt;DESC&lt;/code&gt; for &amp;ldquo;descending&amp;rdquo;.
The results can be limited or trimmed using another statement, like &lt;code&gt;LIMIT
1&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-SQL&#34; data-lang=&#34;SQL&#34;&gt;mysql&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; tblUsersPts;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;----|-----------|----------|-------|--------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; id &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; firstname &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; lastname &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; team  &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; points &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;----|-----------|----------|-------|--------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Joe       &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Fry      &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Red   &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;20000&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Emily     &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Flanders &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Blue  &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;17000&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Tina      &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Oak      &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Red   &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;32800&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Bob       &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Builder  &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Green &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;40100&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;----|-----------|----------|-------|--------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;rows&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;set&lt;/span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;00&lt;/span&gt; sec)

mysql&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; tblUsersPts &lt;span style=&#34;color:#66d9ef&#34;&gt;ORDER&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;BY&lt;/span&gt; points &lt;span style=&#34;color:#66d9ef&#34;&gt;DESC&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;LIMIT&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;----|-----------|----------|-------|--------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; id &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; firstname &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; lastname &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; team  &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; points &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;----|-----------|----------|-------|--------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Bob       &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Builder  &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Green &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;40100&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Tina      &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Oak      &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Red   &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;32800&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Joe       &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Fry      &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Red   &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;20000&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;----|-----------|----------|-------|--------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;rows&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;set&lt;/span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;00&lt;/span&gt; sec)

mysql&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; tblUsersPts &lt;span style=&#34;color:#66d9ef&#34;&gt;ORDER&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;BY&lt;/span&gt; team,lastname &lt;span style=&#34;color:#66d9ef&#34;&gt;ASC&lt;/span&gt;;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;----|-----------|----------|-------|--------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; id &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; firstname &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; lastname &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; team  &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; points &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;----|-----------|----------|-------|--------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Emily     &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Flanders &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Blue  &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;17000&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Bob       &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Builder  &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Green &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;40100&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Joe       &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Fry      &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Red   &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;20000&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Tina      &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Oak      &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Red   &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;32800&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;----|-----------|----------|-------|--------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;rows&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;set&lt;/span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;00&lt;/span&gt; sec)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;minimum-and-maximum-values&#34;&gt;Minimum and Maximum Values&lt;/h3&gt;

&lt;p&gt;Similar to &lt;code&gt;ORDER&lt;/code&gt;, the minimum and maximum values in a particular column of the
table can be returned using the &lt;code&gt;MIN&lt;/code&gt; and &lt;code&gt;MAX&lt;/code&gt; commands:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-SQL&#34; data-lang=&#34;SQL&#34;&gt;mysql&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; tblUsersPts &lt;span style=&#34;color:#66d9ef&#34;&gt;ORDER&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;BY&lt;/span&gt; team,lastname &lt;span style=&#34;color:#66d9ef&#34;&gt;ASC&lt;/span&gt;;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;----|-----------|----------|-------|--------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; id &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; firstname &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; lastname &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; team  &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; points &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;----|-----------|----------|-------|--------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Emily     &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Flanders &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Blue  &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;17000&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Bob       &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Builder  &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Green &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;40100&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Joe       &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Fry      &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Red   &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;20000&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Tina      &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Oak      &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Red   &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;32800&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;----|-----------|----------|-------|--------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;rows&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;set&lt;/span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;00&lt;/span&gt; sec)

mysql&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;MIN&lt;/span&gt;(points),&lt;span style=&#34;color:#66d9ef&#34;&gt;MAX&lt;/span&gt;(points)  &lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; tblUsersPts;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-------------|-------------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;MIN&lt;/span&gt;(points) &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;MAX&lt;/span&gt;(points) &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-------------|-------------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;       &lt;span style=&#34;color:#ae81ff&#34;&gt;17000&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;       &lt;span style=&#34;color:#ae81ff&#34;&gt;40100&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-------------|-------------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;row&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;set&lt;/span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;00&lt;/span&gt; sec)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To return other fields with the min/max item, a sub-query (another SQL query
inside parenthesis) may have to be used:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-SQL&#34; data-lang=&#34;SQL&#34;&gt;mysql&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; firstname,lastname,points &lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; tblUsersPts 
&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;WHERE&lt;/span&gt; points&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;MAX&lt;/span&gt;(points) &lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; tblUsersPts);
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-----------|----------|--------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; firstname &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; lastname &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; points &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-----------|----------|--------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Bob       &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Builder  &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;40100&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-----------|----------|--------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;row&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;set&lt;/span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;00&lt;/span&gt; sec)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;upper-and-lower-case-conversions&#34;&gt;Upper and Lower Case Conversions&lt;/h3&gt;

&lt;p&gt;Strings (such as names), and be easily altered using functions like &lt;code&gt;UCASE&lt;/code&gt; and
&lt;code&gt;LCASE&lt;/code&gt;. These two functions change the &lt;em&gt;displayed&lt;/em&gt; text (the data is not
altered) to be upper or lower case.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-SQL&#34; data-lang=&#34;SQL&#34;&gt;mysql&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; tblUsersPts;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;----|-----------|----------|-------|--------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; id &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; firstname &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; lastname &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; team  &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; points &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;----|-----------|----------|-------|--------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Joe       &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Fry      &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Red   &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;20000&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Emily     &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Flanders &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Blue  &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;17000&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Tina      &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Oak      &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Red   &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;32800&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Bob       &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Builder  &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Green &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;40100&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;----|-----------|----------|-------|--------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;rows&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;set&lt;/span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;01&lt;/span&gt; sec)

mysql&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; UCASE(lastname),LCASE(firstname) &lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; tblUsersPts;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-----------------|------------------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; UCASE(lastname) &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; LCASE(firstname) &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-----------------|------------------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; FRY             &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; joe              &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; FLANDERS        &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; emily            &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; OAK             &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; tina             &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; BUILDER         &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; bob              &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-----------------|------------------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;rows&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;set&lt;/span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;00&lt;/span&gt; sec)

mysql&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; tblUsersPts;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;----|-----------|----------|-------|--------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; id &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; firstname &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; lastname &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; team  &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; points &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;----|-----------|----------|-------|--------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Joe       &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Fry      &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Red   &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;20000&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Emily     &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Flanders &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Blue  &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;17000&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Tina      &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Oak      &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Red   &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;32800&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Bob       &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Builder  &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Green &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;40100&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;----|-----------|----------|-------|--------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;rows&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;set&lt;/span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;00&lt;/span&gt; sec)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;now&#34;&gt;Now()&lt;/h3&gt;

&lt;p&gt;The &lt;code&gt;Now*()&lt;/code&gt; function creates a new value, using the current date and time. This
can be appended when creating a view, to mark when changes happen over time.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;mysql&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; id,firstname,lastname,team,points, Now() &lt;span style=&#34;color:#66d9ef&#34;&gt;AS&lt;/span&gt; updated
    &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; tblUsersPts;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;----|-----------|----------|-------|--------|---------------------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; id &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; firstname &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; lastname &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; team  &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; points &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; updated             &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;----|-----------|----------|-------|--------|---------------------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Joe       &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Fry      &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Red   &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;20000&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2018&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;04&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;17&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;56&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;53&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Emily     &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Flanders &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Blue  &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;17000&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2018&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;04&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;17&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;56&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;53&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Tina      &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Oak      &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Red   &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;32800&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2018&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;04&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;17&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;56&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;53&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Bob       &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Builder  &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Green &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;40100&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2018&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;04&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;17&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;56&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;53&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;----|-----------|----------|-------|--------|---------------------+
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;rows&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;set&lt;/span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;00&lt;/span&gt; sec)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;I think that is enough to at least get started with SQL :) (it was for me
anyway). There&amp;rsquo;s not much else to say other than hopefully this post server as
a good SQL quick-reference down the road :). Enjoy!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Trying Out Seafile</title>
      <link>http://ryan.himmelwright.net/post/trying-out-seafile/</link>
      <pubDate>Sun, 01 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>http://ryan.himmelwright.net/post/trying-out-seafile/</guid>
      <description>&lt;p&gt;In college, I mostly used Dropbox to handle all of my file syncing needs. As I
approached graduation, I setup an Owncloud droplet (which is now a Nextcloud
instance) to supplant my Dropbox usage. While it has worked fairly well, I&amp;rsquo;ve
been watching &lt;a href=&#34;https://www.seafile.com/en/home/&#34;&gt;seafile&lt;/a&gt; from a distance the
last few years, but haven&amp;rsquo;t taken the time to try it out. I have now.&lt;/p&gt;

&lt;h2 id=&#34;seafile&#34;&gt;Seafile&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;../../img/posts/trying-out-seafile/seafilelogo.png&#34;&gt;&lt;img src=&#34;../../img/posts/trying-out-seafile/seafilelogo.png&#34; style=&#34;max-width: 95%; float: left; margin: 0px 15px 0px 0px;&#34; alt=&#34;Docker ps&#34; /&gt;&lt;/a&gt;
&lt;div class=&#34;caption&#34;&gt;The Seafile Logo&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;As stated on their website:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Seafile is an enterprise file hosting platform with high reliability and
performance. Put files on your own server. Sync and share files across
different devices, or access all the files as a virtual disk.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;While self-defined as an &amp;ldquo;&lt;em&gt;enterprise&lt;/em&gt; file hosting platform&amp;rdquo;, there is a
Community Edition that is &lt;em&gt;Free &amp;amp; Open Source&lt;/em&gt;.. which is exactly how I like my
software. So lets get started.&lt;/p&gt;

&lt;h2 id=&#34;setup&#34;&gt;Setup&lt;/h2&gt;

&lt;p&gt;Similar to a Nextcloud configuration, to get seafile up and running, a server
 component is first installed. Afterwards, clients connect to it.&lt;/p&gt;

&lt;h3 id=&#34;server&#34;&gt;Server&lt;/h3&gt;

&lt;p&gt;The countless number of configurations seafile supports may make setting up the
server component for the first time a bit intimidating. There are several
database back-ends (SQLite, MySQL&amp;hellip;), web servers (Nginx, Apache), and
advanced options (Memcached, LDAP, etc) which can be selected. However, the
seafile developers &lt;em&gt;do&lt;/em&gt; provide an &lt;a href=&#34;https://github.com/haiwen/seafile-server-installer&#34;&gt;installation
script&lt;/a&gt; to easily install
both the Pro and Community editions under Linux. Which is what I used.&lt;/p&gt;

&lt;h4 id=&#34;download&#34;&gt;Download&lt;/h4&gt;

&lt;p&gt;The first step is to download the server application. A link for the
install package can found &lt;a href=&#34;https://www.seafile.com/en/download/#server&#34;&gt;partway down the download
page&lt;/a&gt;. After Downloading, extract
the contents of the package.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;wget https://download.seadrive.org/seafile-server_6.2.5_x86-64.tar.gz
tar xf seafile-server*.tar.gz&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Inside the extracted directory, there are several &lt;code&gt;setup-seafile-*.sh*&lt;/code&gt; scripts.
I just used the basic &lt;code&gt;setup-seafile.sh&lt;/code&gt; one.&lt;/p&gt;

&lt;h4 id=&#34;dependencies&#34;&gt;Dependencies&lt;/h4&gt;

&lt;p&gt;&lt;a href=&#34;../../img/posts/trying-out-seafile/ubuntu-logo.jpg&#34;&gt;&lt;img
src=&#34;../../img/posts/trying-out-seafile/ubuntu-logo.jpg&#34; style=&#34;max-width:
100%; float: right; margin: 5px 10px 10px 10px;&#34; alt=&#34;Ubuntu Logo&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Depending on which setup script it used, and the state of the host machine,
there may be some missing dependencies. While I am sure there is a nice list of
the required dependencies posted &lt;em&gt;somewhere&lt;/em&gt;&amp;hellip; I didn&amp;rsquo;t look for it. If I am
being completely honest&amp;hellip; I just kept repeatedly running the script, and
installed whichever package it yelled at me for each time. Eventually, the install
worked. On my fresh install of Ubuntu 16.04 server, this meant
installing the following dependency packages:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;python-setuptools&lt;/li&gt;
&lt;li&gt;python-imaging&lt;/li&gt;
&lt;li&gt;sqlite3&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This means that on an Ubuntu 16.04 server, a simple &lt;code&gt;sudo apt install python-setuptools
python-imaging sqlite3&lt;/code&gt; should do the trick&amp;hellip;&lt;/p&gt;

&lt;h4 id=&#34;install-script&#34;&gt;Install Script&lt;/h4&gt;

&lt;p&gt;With the dependencies installed, the script should run through without screaming
for missing packages. However, it &lt;em&gt;will&lt;/em&gt; ask for a few pieces of information
including &lt;em&gt;server-name&lt;/em&gt;, &lt;em&gt;server-ip/domain&lt;/em&gt;, &lt;em&gt;data-dir&lt;/em&gt;, and &lt;em&gt;fileserver port&lt;/em&gt;
to install the fileserver component. Answer accordingly.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;../../img/posts/trying-out-seafile/seahub-web.png&#34;&gt;&lt;img src=&#34;../../img/posts/trying-out-seafile/seahub-web.png&#34; style=&#34;max-width: 100%; float: left; margin: 0px 15px 0px 0px;&#34; alt=&#34;Docker ps&#34; /&gt;&lt;/a&gt;
&lt;div class=&#34;caption&#34;&gt;The Seafile Web Client, Seahub&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;After configuring the fileserver, the script will flow right into configuring
&lt;a href=&#34;https://github.com/haiwen/seahub&#34;&gt;Seahub&lt;/a&gt;, the web interface that sits on top
of the fileserver. This part is less needy, and will only require an &lt;em&gt;[Enter]&lt;/em&gt;
press to continue.&lt;/p&gt;

&lt;p&gt;At the end, the script should display useful information about how to
start/stop/reset the servers, as well as what ports each part is running on.&lt;/p&gt;

&lt;h4 id=&#34;run-start&#34;&gt;Run &amp;amp; Start&lt;/h4&gt;

&lt;p&gt;Starting the servers is done by doing what the script says&amp;hellip; run the
following commands:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;./seafile.sh start
./seahub.sh start&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;With the servers running, it may be necessary to configure the firewall to allow
their ports. On Ubuntu 16.04:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo ufw allow 8000/tcp
sudo ufw allow 8082/tcp&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;That&amp;rsquo;s it. With any luck, clients should be able to connect to the server
(assuming the server is reachable from the client computer&amp;hellip; but that&amp;rsquo;s a
lesson for another day).&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Note: The first time seahub is run, it will need to setup an admin account. So
while it was nice and considerate in the last step&amp;hellip; it will insist on being
supplied a username (email) and password for the new admin account. Again, just
comply.&lt;/em&gt;&lt;/p&gt;

&lt;h3 id=&#34;client&#34;&gt;Client&lt;/h3&gt;

&lt;p&gt;The seafile desktop client was trivial to install. It was in the Solus repos, so
I just needed to run &lt;code&gt;sudo eopkg it seafile-client&lt;/code&gt;, and I was done. I also
installed it on my work computers (which unfortunately runs Windows 10), and
even that was simple. I just downloaded and installed the Windows &amp;ldquo;Desktop
Syncing Client&amp;rdquo; at the top of the &lt;a href=&#34;https://www.seafile.com/en/download/&#34;&gt;download
page&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;my-thoughts&#34;&gt;My Thoughts&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;../../img/posts/trying-out-seafile/seafile-client.png&#34;&gt;&lt;img
src=&#34;../../img/posts/trying-out-seafile/seafile-client.png&#34; style=&#34;max-width:
100%; float: right; margin: 0px 0px 0px 0px;&#34; alt=&#34;Seafile Desktop Client&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I have been using seafile as a syncing solution for the past few weeks. After
the initial setup, it has been rather uneventful&amp;hellip; which is a good thing. It
just runs in the background, and I don&amp;rsquo;t really think about it. Exactly what you
want with a syncing solution.&lt;/p&gt;

&lt;p&gt;That being said, I haven&amp;rsquo;t fully dug into all of the details of the application
yet. So, if I incorrectly critique something due to my own ignorance that
simply isn&amp;rsquo;t true, I apologize in advance.&lt;/p&gt;

&lt;h3 id=&#34;what-i-like&#34;&gt;What I Like&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Desktop Client&lt;/strong&gt; - The desktop client is simple. It responds quickly, and is
a nice little command center where I can view how seafile is configured on each
individual system.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Select &lt;em&gt;which&lt;/em&gt; Libraries to sync&lt;/strong&gt; - Seafile libraries allow me to sync only
what I need. Nextcloud had this feature, but it was implemented a little differently. I
had to go to the &lt;code&gt;Nextcloud&lt;/code&gt; folder in the client UI, and then check/uncheck all
of the sub-folders I wanted to sync on my machine.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Pick &lt;em&gt;where each&lt;/em&gt; libraries sync&lt;/strong&gt; - Even better than being able to pick
&lt;em&gt;which&lt;/em&gt; libraries to sync, is having the power to choose &lt;em&gt;where&lt;/em&gt; each one will
reside. In seafile, the location of each library is completely independent.
For example, I can sync my &lt;code&gt;work&lt;/code&gt; library to &lt;code&gt;~/Documents/Work/&lt;/code&gt;, my &lt;code&gt;Music&lt;/code&gt;
to &lt;code&gt;~/Music&lt;/code&gt;, and &lt;code&gt;emacs&lt;/code&gt; to
&lt;code&gt;~/Documents/Programming/Editors/why/so/many/diectories/emacs/&lt;/code&gt;. On another
computer, I may choose to only sync my &lt;code&gt;work&lt;/code&gt; library to &lt;code&gt;~/Desktop/work&lt;/code&gt; (It
doesn&amp;rsquo;t have to be the same across computers). I love this. It lets seafile &lt;em&gt;integrate&lt;/em&gt; with my
workflow, rather than forcing me to make &lt;em&gt;it be&lt;/em&gt; my workflow.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Encrypted Libraries&lt;/strong&gt; - When creating a new library, it is possible to
make an encrypted one. These libraries use client-side, end-to-end encryption
and require a password. The file &lt;em&gt;contents&lt;/em&gt; (Note: not directory or file
&lt;em&gt;names&lt;/em&gt;) are encrypted on the client side, and not on the server. This means
that even the server admin cannot access the file contents on the server.
This is a feature I&amp;rsquo;d like to see in more applications.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&#34;../../img/posts/trying-out-seafile/encrypt-library.png&#34;&gt;&lt;img
src=&#34;../../img/posts/trying-out-seafile/encrypt-library.png&#34; style=&#34;max-width:
100%; align: center; float: center; margin: 0px 0px 0px 0px;&#34; alt=&#34;Docker ps&#34; /&gt;&lt;/a&gt;
&lt;div class=&#34;caption&#34;&gt;When syncing an encrypted library, a password must be entered.&lt;/div&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Fast Sync&lt;/strong&gt; - I only have anecdotal evidence, but the syncing in seafile
&lt;em&gt;feels fast&lt;/em&gt;. Files seem to pull down very quickly, and setting up my
libraries on a new device doesn&amp;rsquo;t take a very long time. I might have to
actually &lt;em&gt;measure&lt;/em&gt; if it&amp;rsquo;s any better than something like nextcloud, but if I&amp;rsquo;m
happy&amp;hellip; does it really &lt;em&gt;matter&lt;/em&gt;?&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;what-i-don-t-like&#34;&gt;What I Don&amp;rsquo;t Like&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;No Folders/Nested libraries&lt;/strong&gt; - As far as I can tell, I don&amp;rsquo;t think it is
possible to organize seafile libraries with folders, or a nested library
structure. Admittedly, this is one of those areas that I haven&amp;rsquo;t had to look
too much into yet. However, as I start to increase my seafile usage and the
number of my libraries increases, I could see this being a feature I&amp;rsquo;d really
enjoy.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Phone Sync Tricky&lt;/strong&gt; - The phone sync (specifically auto photo upload) was
tricky to get working at first. After setting it up, it didn&amp;rsquo;t seem to work,
or at least not as promptly as nextcloud does. I took a few photos to test it
out today, it seemed to work &lt;em&gt;okay&lt;/em&gt;, but I don&amp;rsquo;t think it started syncing
right away. Right now, I don&amp;rsquo;t 100% trust it to work without me thinking
about it. Hopefully this improves with time.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;future-plans&#34;&gt;Future Plans&lt;/h3&gt;

&lt;p&gt;To summarize, I have been loving seafile, and I think I have only scratched the
surface. I haven&amp;rsquo;t even tried playing with features like History and Snapshots,
Full Text File Search, or yet. My plan is to continue experimenting a bit more,
and then switch to it as my main syncing system when I redo my main server
setup in a couple of weeks. If you haven&amp;rsquo;t given seafile a try recently, I
recommend it.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Docker Quick Start</title>
      <link>http://ryan.himmelwright.net/post/docker-quickstart/</link>
      <pubDate>Sun, 25 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>http://ryan.himmelwright.net/post/docker-quickstart/</guid>
      <description>&lt;p&gt;Over the past few months (particularly over the holiday season), I started to
explore and learn several technologies I&amp;rsquo;ve had my eye on the last few years.
First on the list: &lt;a href=&#34;https://docker.io&#34;&gt;Docker&lt;/a&gt;. These days, Docker has a massive
ecosystem surrounding it, and can take years to truly master. This post on the
other hand, will &lt;em&gt;hopefully&lt;/em&gt; help you get up and playing with docker containers in
just a few minutes. Lets get started.&lt;/p&gt;

&lt;h2 id=&#34;installing-docker&#34;&gt;Installing Docker&lt;/h2&gt;

&lt;p&gt;&lt;img src=&#34;../../img/posts/docker-quickstart/docker-logo.png&#34; style=&#34;max-width: 100%; width: 400px; float: right; margin: 0px 15px 5px 5px;&#34; alt=&#34;Docker Logo&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Installing docker on &lt;a href=&#34;https://getsol.us&#34;&gt;Solus&lt;/a&gt; was easy enough. I just
had to install the package, and then enable the service:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo eopkg it docker
sudo systemctl enable docker
sudo systemctl start docker&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;On other distributions, it may not be in the package manager, or it might be
under a different name. To be sure, check out the community edition
&lt;a href=&#34;https://docs.docker.com/install/linux/docker-ce/fedora/#set-up-the-repository&#34;&gt;installation
documentation&lt;/a&gt;
for your specific distro.&lt;/p&gt;

&lt;h2 id=&#34;adding-user-to-docker-group&#34;&gt;Adding User to Docker Group&lt;/h2&gt;

&lt;p&gt;By default, user accounts will not have permission to run docker commands
without root access. So, after first installing docker, it might be tempting to
just run everything using &lt;code&gt;sudo&lt;/code&gt;, but that isn&amp;rsquo;t the best idea. To get around
this, simply add the user account to the &lt;code&gt;docker&lt;/code&gt; group:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo usermod -a -G docker ryan&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If the docker group is not created for some reason, it can be added:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo groupadd docker&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Afterwards, that user should be able to run docker commands without requiring
&lt;code&gt;sudo&lt;/code&gt;. They &lt;em&gt;might&lt;/em&gt; have to log out and back in first.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Note: These commands may differ based on distro.&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&#34;some-useful-commands&#34;&gt;Some Useful Commands&lt;/h2&gt;

&lt;p&gt;Before getting too caught up in creating and using containers, lets first go
over a few useful commands that make navigating docker a bit easier.&lt;/p&gt;

&lt;h4 id=&#34;docker-ps&#34;&gt;docker ps&lt;/h4&gt;

&lt;p&gt;&lt;a href=&#34;../../img/posts/docker-quickstart/docker-ps.png&#34;&gt;&lt;img src=&#34;../../img/posts/docker-quickstart/docker-ps.png&#34; style=&#34;max-width: 100%; float: left; margin: 0px 15px 0px 0px;&#34; alt=&#34;Docker ps&#34; /&gt;&lt;/a&gt;
&lt;div class=&#34;caption&#34;&gt;Example of the docker ps and docker ps -a commands&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;Similar to how Unix-based systems have the &lt;code&gt;ps&lt;/code&gt; command to see running
processes, docker has &lt;code&gt;docker ps&lt;/code&gt; to see created and running containers. To
view the currently running containers, use the basic &lt;code&gt;docker ps&lt;/code&gt; command:&lt;/p&gt;

&lt;p&gt;The base command however, doesn&amp;rsquo;t always tell the whole story. A system might
have containers that &lt;em&gt;exist&lt;/em&gt; but are not running. A container may have been
stopped, &lt;em&gt;or&lt;/em&gt; exited if it encountered an error. Containers that are stopped or
exited &lt;em&gt;will not&lt;/em&gt; show up in the default &lt;code&gt;docker ps&lt;/code&gt; command. To see &lt;em&gt;all&lt;/em&gt; of the
current containers on the system, run &lt;code&gt;ps&lt;/code&gt; with the &lt;code&gt;-a&lt;/code&gt; flag.&lt;/p&gt;

&lt;h4 id=&#34;docker-inspect&#34;&gt;docker inspect&lt;/h4&gt;

&lt;p&gt;&lt;a href=&#34;../../img/posts/docker-quickstart/docker-inspect.png&#34;&gt;&lt;img src=&#34;../../img/posts/docker-quickstart/docker-inspect.png&#34; style=&#34;max-width: 100%; float: left; margin: 0px 15px 0px 0px;&#34; alt=&#34;Docker inspect examples: docker inspect web-test | grep Status and docker inspect web-test | grep IPAddress&#34; /&gt;&lt;/a&gt;
&lt;div class=&#34;caption&#34;&gt;Using the docker inspect command to get the container&amp;rsquo;s status and IP address&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;Another useful command when working with docker containers is &lt;code&gt;docker inspect&lt;/code&gt;.
The &lt;code&gt;inspect&lt;/code&gt; command will dump the xml for all the low level information of the
container/docker object. The output contains basically &lt;em&gt;everything&lt;/em&gt; about the
container: Full ID, time created, state, volumes, network information&amp;hellip;
everything. It can be useful to pipe the output of &lt;code&gt;inspect&lt;/code&gt; to grep, in order
to get specific information about the container quickly.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;docker inspect container_name | grep IPAddress&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For example, the above command will grab and return only the lines which contain
&amp;ldquo;IPAddress&amp;rdquo;.&lt;/p&gt;

&lt;h4 id=&#34;help&#34;&gt;help&lt;/h4&gt;

&lt;p&gt;&lt;a href=&#34;../../img/posts/docker-quickstart/docker-help.png&#34;&gt;&lt;img src=&#34;../../img/posts/docker-quickstart/docker-help.png&#34; style=&#34;max-width: 100%; float: left; margin: 0px 15px 0px 0px;&#34; alt=&#34;Using the docker help command flags. For Example: docker inspect --help&#34; /&gt;&lt;/a&gt;
&lt;div class=&#34;caption&#34;&gt;Using the docker help command flags.&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;Last but not least, don&amp;rsquo;t forget about the &lt;code&gt;help&lt;/code&gt; command. To see all the
available docker commands, run &lt;code&gt;docker help&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Additionally, when using each of those specific commands, (&lt;code&gt;inspect&lt;/code&gt; for
example), a description and possible options can be shown using the &lt;code&gt;--help&lt;/code&gt;
flag (as in &lt;code&gt;docker inspect --help&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;Just as man pages can be extremely valuable when working on a Linux system,
&lt;code&gt;help&lt;/code&gt; is just as essential when using docker.&lt;/p&gt;

&lt;h2 id=&#34;images&#34;&gt;Images&lt;/h2&gt;

&lt;p&gt;A docker container is created from a base &lt;em&gt;image&lt;/em&gt;. Images can be pulled down
from &lt;a href=&#34;https://hub.docker.com/&#34;&gt;Dockerhub&lt;/a&gt;. To search docker hub from command
line, use the &lt;code&gt;docker search&lt;/code&gt; command. For example, &lt;code&gt;docker search nginx&lt;/code&gt; will
search for images related to nginx.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;../../img/posts/docker-quickstart/docker-search.png&#34;&gt;&lt;img src=&#34;../../img/posts/docker-quickstart/docker-search.png&#34; style=&#34;max-width: 100%; float: left; margin: 0px 15px 0px 0px;&#34; alt=&#34;Docker Search output. Ex: docker search nginx&#34; /&gt;&lt;/a&gt;
&lt;div class=&#34;caption&#34;&gt;The search output for nginx images&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;The search will list all of the public images in order, from most to least
stars. When a desired image is found, pull it down using the &lt;code&gt;docker pull&lt;/code&gt;
command. For example, &lt;code&gt;docker pull nginx&lt;/code&gt; will pull down the &lt;a href=&#34;https://hub.docker.com/_/nginx/&#34;&gt;nginx
image&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;../../img/posts/docker-quickstart/docker-pull.png&#34;&gt;&lt;img src=&#34;../../img/posts/docker-quickstart/docker-pull.png&#34; style=&#34;max-width: 100%; width:100%; float: left; margin: 0px 15px 0px 0px;&#34; alt=&#34;Docker Pull output. Ex: docker pull nginx&#34; /&gt;&lt;/a&gt;
&lt;div class=&#34;caption&#34;&gt;Pulling the latest nginx image&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;Docker will then download all the layers for the image. When the download
completes, the image will be locally available to create docker containers
from. To see all of the local images, use the &lt;code&gt;docker images&lt;/code&gt; command:&lt;/p&gt;

&lt;p&gt;To delete an image, use the &lt;code&gt;docker images rm&lt;/code&gt; command, or my preferred, lazier
command, &lt;code&gt;docker rmi&lt;/code&gt;:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;../../img/posts/docker-quickstart/docker-images.png&#34;&gt;&lt;img src=&#34;../../img/posts/docker-quickstart/docker-images.png&#34; style=&#34;max-width: 100%; float: left; margin: 0px 15px 0px 0px;&#34; alt=&#34;docker images and docker rmi. Ex: docker images, then docker rmi test-ubuntu&#34; /&gt;&lt;/a&gt;
&lt;div class=&#34;caption&#34;&gt;Viewing downloaded images with the docker images command, then deleting the &amp;ldquo;test-ubuntu&amp;rdquo; image using the docker rmi command&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;Lastly, it should be noted that custom images can be created/tailored using a
&lt;a href=&#34;https://docs.docker.com/engine/reference/builder/#usage&#34;&gt;Dockerfile&lt;/a&gt;. With a
Dockerfile is defined, an image can be created from it using the &lt;code&gt;docker build&lt;/code&gt;
command. For example, the following Dockerfile would use an
&lt;a href=&#34;https://hub.docker.com/_/ubuntu/&#34;&gt;ubuntu&lt;/a&gt; image for the base, but also update &amp;amp;
install several packages in the image:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# This is a custom ubuntu image with SSH already installed&lt;/span&gt;
FROM ubuntu:latest
MAINTAINER himmallright &amp;lt;ryan.himmelwright@gmail.com&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;gt;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;RUN apt-get update&lt;/span&gt;

RUN apt-get install -y vim stow git tmux fish htop emacs&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To build the image, run the following command in the same directory as the
Dockerfile (if defining a specific file, the &lt;code&gt;-f&lt;/code&gt; flag can be used):&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;docker build -t ubuntu-base:v1 .&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I like to use the &lt;code&gt;-t&lt;/code&gt; flag, so that I can specify a &lt;code&gt;name:tag&lt;/code&gt; for the image.
This helps to make it easier to find it in the &lt;code&gt;docker images&lt;/code&gt; list.&lt;/p&gt;

&lt;h2 id=&#34;creating-containers&#34;&gt;Creating Containers&lt;/h2&gt;

&lt;p&gt;Docker containers can be &lt;em&gt;created&lt;/em&gt; (but not run) with the &lt;code&gt;docker create&lt;/code&gt;
command. When creating containers, it is useful to use flags to tailor the
details of the container. For example, the &lt;code&gt;-m&lt;/code&gt; flag can be used to create a
memory limit, &lt;code&gt;--name&lt;/code&gt; to name the container, and so on. To create a simple nginx
container from the image we previously pulled:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;docker create --name web-test nginx:latest&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;starting-running-containers&#34;&gt;Starting &amp;amp; Running Containers&lt;/h2&gt;

&lt;p&gt;To &lt;em&gt;start&lt;/em&gt; a container created with &lt;code&gt;docker create&lt;/code&gt;, or one that has been previously
stopped, use the &lt;code&gt;docker start&lt;/code&gt; command. For example, to start
the container created in the previous step:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;docker start web-test
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Similarly, a container can be stopped with &lt;code&gt;docker stop&lt;/code&gt;, or restarted with
&lt;code&gt;docker restart&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Instead of using a &lt;code&gt;docker create&lt;/code&gt; and &lt;code&gt;docker start&lt;/code&gt; combination, &lt;code&gt;docker run&lt;/code&gt;
can be used to both instantiate &lt;em&gt;and&lt;/em&gt; start a container. To create and start the
&amp;ldquo;web-test&amp;rdquo; container from the previous examples:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;docker run --name web-test -d nginx:latest
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;cleaning-containers&#34;&gt;Cleaning containers&lt;/h4&gt;

&lt;p&gt;&lt;a href=&#34;../../img/posts/docker-quickstart/docker-rm.png&#34;&gt;&lt;img src=&#34;../../img/posts/docker-quickstart/docker-rm.png&#34; style=&#34;max-width: 100%; float: left; width: 95%;&#34; alt=&#34;Docker rm all images. Ex: docker rm `docker ps -aq`&#34; /&gt;&lt;/a&gt;
&lt;div class=&#34;caption&#34;&gt;Removing all the older container images&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;Over time, old containers may build up on the system. To remove an old (but not
running) container, use &lt;code&gt;docker rm&lt;/code&gt; with either the container name, &lt;em&gt;or&lt;/em&gt; the id.
Note, to easily delete &lt;em&gt;all&lt;/em&gt; of the containers on the system, &lt;code&gt;docker rm&lt;/code&gt; can be
fed the output of &lt;code&gt;docker ps -aq&lt;/code&gt;, where the &lt;code&gt;-aq&lt;/code&gt; flag returns a list of all
the container ids.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;docker rm &lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;docker ps -aq&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;em&gt;(Note: this doesn&amp;rsquo;t work in my Fish shell, but does in bash)&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&#34;attaching-to-containers&#34;&gt;Attaching to Containers&lt;/h2&gt;

&lt;p&gt;After a container is running, it might occasionally be necessary to attach to
it and poke around with a shell. There is the obvious way to do this,
&lt;code&gt;docker attach&lt;/code&gt;, and a somewhat work-around way, which I prefer to use: &lt;code&gt;docker
exec&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;../../img/posts/docker-quickstart/docker-attach.png&#34;&gt;&lt;img src=&#34;../../img/posts/docker-quickstart/docker-attach.png&#34; style=&#34;max-width: 100%; float: left;&#34; alt=&#34;Docker attach example&#34; /&gt;&lt;/a&gt;
&lt;div class=&#34;caption&#34;&gt;An example using the docker attach command&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;The attach command works as one would expect. It allows a user to &amp;ldquo;Attach local
standard input, output, and error streams to a running container&amp;rdquo;. This is all
well an good, except for one issue: when exiting the attached container, the
&lt;em&gt;container also&lt;/em&gt; exits.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;../../img/posts/docker-quickstart/docker-exec-bash.png&#34;&gt;&lt;img src=&#34;../../img/posts/docker-quickstart/docker-exec-bash.png&#34; style=&#34;max-width: 100%; float: left;&#34; alt=&#34;Docker exec bash example&#34; /&gt;&lt;/a&gt;
&lt;div class=&#34;caption&#34;&gt;An example using docker exec with a bash shell, as an alternative to docker attach&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;A way around this annoyance is to utilize the &lt;code&gt;docker exec&lt;/code&gt; command, which
allows a command to be executed inside a container. Executing a shell program
inside the container, such as &lt;code&gt;bash&lt;/code&gt;, mimics the &lt;code&gt;attach&lt;/code&gt; command, but with the
added benefit that when exiting, only the shell exits, and &lt;em&gt;not&lt;/em&gt; the entire
container.&lt;/p&gt;

&lt;h2 id=&#34;ports-volumes&#34;&gt;Ports &amp;amp; Volumes&lt;/h2&gt;

&lt;p&gt;As mentioned earlier, docker containers can be built and run using many specific
commands to tailor the container and how it interfaces with the host system.
There are two concepts in particular that I want to briefly touch on in this
&lt;em&gt;quick start&lt;/em&gt; post. Those two items, are &lt;code&gt;ports&lt;/code&gt; and &lt;code&gt;volumes&lt;/code&gt;.&lt;/p&gt;

&lt;h4 id=&#34;ports&#34;&gt;Ports&lt;/h4&gt;

&lt;p&gt;&lt;a href=&#34;../../img/posts/docker-quickstart/nginx-firefox-port.png&#34;&gt;&lt;img src=&#34;../../img/posts/docker-quickstart/nginx-firefox-port.png&#34; style=&#34;max-width: 100%; float: center;&#34; alt=&#34;Containerized nginx server connected to through localhost&#34; /&gt;&lt;/a&gt;
&lt;div class=&#34;caption&#34;&gt;Container ports can be forwarded to the host&amp;rsquo;s ports.&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;While it is nice to spin up a web server inside a docker container, it isn&amp;rsquo;t
always very useful to only have it available to the host machine. By using the
&lt;code&gt;-p&lt;/code&gt; flag when running a container, the container&amp;rsquo;s ports can be forwarded to
ports on the host system.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;../../img/posts/docker-quickstart/docker-port.png&#34;&gt;&lt;img src=&#34;../../img/posts/docker-quickstart/docker-port.png&#34; style=&#34;max-width: 100%; float: center;&#34; alt=&#34;Creating an nginx container, forwarding port 80 to he host&#39;s 8081&#34; /&gt;&lt;/a&gt;
&lt;div class=&#34;caption&#34;&gt;Creating an nginx container, forwarding it&amp;rsquo;s port 80 to the host&amp;rsquo;s port 8081&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;Using &lt;code&gt;-p&lt;/code&gt; with just a single number, as in &lt;code&gt;-p 8080&lt;/code&gt;, will declare that port of
the container to be exposed. To forward exposed ports to the host, use &lt;em&gt;two&lt;/em&gt;
port numbers, separated with a &lt;code&gt;:&lt;/code&gt;. The first number is the host port to bind
to, and the second is the container port to expose and forward.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;docker run -itd --name webtest -p 8081:80 nginx:latest
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The above example, a nginx container is started with port 80 forwarded to port
8081 on the host. As a result, any computer connecting to port 8081 of the host
machine will be directed to the nginx web server inside the container.&lt;/p&gt;

&lt;h4 id=&#34;volumes&#34;&gt;Volumes&lt;/h4&gt;

&lt;p&gt;&lt;a href=&#34;../../img/posts/docker-quickstart/nginx-firefox-volume.png&#34;&gt;&lt;img src=&#34;../../img/posts/docker-quickstart/nginx-firefox-volume.png&#34; style=&#34;max-width: 100%; float: center;&#34; alt=&#34;Nginx container with website pages in a volume from the host.&#34; /&gt;&lt;/a&gt;
&lt;div class=&#34;caption&#34;&gt;Containers can attach volumes from the host system for persistent data.&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;Lastly, by design docker containers are mean to be expendable. They are run, and then
disposed. It should not be assumed that &lt;em&gt;any&lt;/em&gt; data inside the container will
be preserved by default. That is, unless
&lt;a href=&#34;https://docs.docker.com/storage/volumes/&#34;&gt;volumes&lt;/a&gt; are used.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;../../img/posts/docker-quickstart/docker-volume.png&#34;&gt;&lt;img src=&#34;../../img/posts/docker-quickstart/docker-volume.png&#34; style=&#34;max-width: 100%; float: center;&#34; alt=&#34;Creating an nginx container, forwarding port 80 to he host&#39;s 8081&#34; /&gt;&lt;/a&gt;
&lt;div class=&#34;caption&#34;&gt;Creating an nginx container, forwarding it&amp;rsquo;s port 80 to the host&amp;rsquo;s port 8081&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;Docker volumes are the preferred mechanism for preserving data across container
runs, and are specified using the &lt;code&gt;-v&lt;/code&gt; flag. Similar to setting ports, volumes
can be created by providing either a single path, or two separated by a &lt;code&gt;:&lt;/code&gt;.
When a single path is provided, as in &lt;code&gt;-v /Data&lt;/code&gt;, docker will create a volume
and bind it to that location within the container. Two locations can be provided
to bind a directory on the host system, to the volume inside to container.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;docker run -d --name testsite -v /home/ryan/testsite/:/usr/share/nginx/html nginx:latest
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;In the above command, for example, &lt;code&gt;-v
/home/ryan/testsite/:/usr/share/nginx/html&lt;/code&gt; will use the &lt;code&gt;/home/ryan/testsite/&lt;/code&gt;
directory of the host system, as a volume located at &lt;code&gt;/usr/share/nginx/html&lt;/code&gt;
inside the container. This means that the container will server the website
files, which are located (and can be easily edited), on the host system.&lt;/p&gt;

&lt;h2 id=&#34;in-conclusion&#34;&gt;In Conclusion&lt;/h2&gt;

&lt;p&gt;So, this has been&amp;hellip; a rather long post. However, when it comes to Docker, this
&lt;em&gt;really is just the tip of the iceberg&lt;/em&gt;. With any luck though, you should now
know the basic to at &lt;em&gt;least&lt;/em&gt; get &lt;em&gt;started&lt;/em&gt;. So&amp;hellip; go ahead and have some fun!.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Living the Dock Life: My Thinkpad T470</title>
      <link>http://ryan.himmelwright.net/post/my-t470/</link>
      <pubDate>Thu, 01 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>http://ryan.himmelwright.net/post/my-t470/</guid>
      <description>&lt;p&gt;In my previous post, I discussed how I sold off my System76 Bonobo laptop, and
 planned to replace it with a new computer. Well, I did&amp;hellip; awhile ago. For the
 last few months, I have been using a Lenovo T470 Thinkpad (with dock) as my new
 daily driver. Here are my thoughts.&lt;/p&gt;

&lt;h2 id=&#34;the-choice&#34;&gt;The Choice&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;../../img/posts/my-t470/coffee-picture.jpg&#34;&gt;&lt;img alt=&#34;T470 Coffee&#34; src=&#34;../../img/posts/my-t470/coffee-picture.jpg&#34; style=&#34;max-width: 100%;&#34;/&gt;&lt;/a&gt;
&lt;div class=&#34;caption&#34;&gt;My T470 on a Sunday morning&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;The
&lt;a href=&#34;https://www.notebookcheck.net/Lenovo-ThinkPad-T470-Core-i5-Full-HD-Notebook-Review.198130.0.html&#34;&gt;T470&lt;/a&gt;
is the 14&amp;rdquo; model of Lenovo&amp;rsquo;s &amp;ldquo;business&amp;rdquo; laptop lineup. The T470 series actually
has several variants itself, including the &amp;ldquo;high end&amp;rdquo;
&lt;a href=&#34;https://www.notebookcheck.net/Lenovo-ThinkPad-T470s-Core-i7-WQHD-Laptop-Review.200880.0.html&#34;&gt;T470s&lt;/a&gt;,
that has a slimmer chassis, made from &amp;ldquo;higher quality materials&amp;rdquo;, and a better
screen compared to the T470. There is also the &amp;ldquo;high
performance&amp;rdquo;&lt;a href=&#34;https://www.notebookcheck.net/Lenovo-ThinkPad-T470p-Core-i7-GeForce-940MX-Laptop-Review.226802.0.html&#34;&gt;T470p&lt;/a&gt;,
which features a faster, quad-core CPU, but a slightly larger chassis. While
these variants caught my attention, I ultimately decided on the normal T470.
This was partially because I could max the T470 out at 32GBs of RAM (The T470s
can only hit 24GB due to one of the sticks being soldered in), but mostly
because I assumed that the combination of having a lower powered CPU (compared
to the T70p), but a slightly larger case (compared to the T480s) would make it
the optimal choice concerning my heat/noise concerns outlined in the previous
post.&lt;/p&gt;

&lt;h2 id=&#34;the-specs&#34;&gt;The Specs&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;../../img/posts/my-t470/inside.jpg&#34;&gt;&lt;img alt=&#34;Inside T470&#34; src=&#34;../../img/posts/my-t470/inside.jpg&#34; style=&#34;max-width: 100%;&#34;/&gt;&lt;/a&gt;
&lt;div class=&#34;caption&#34;&gt;The Guts of the T470&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;So, the T470 then&amp;hellip;&lt;/p&gt;

&lt;p&gt;I got my T470 from a vendor on Ebay. It came configured with a 2.5GHz (3.1 GHz
Turbo) i5-7200u cpu, 8 GBs of DDR4 RAM, a 14&amp;rdquo; 1920x1080 screen, and a 500GB Hard
Drive with Windows 10 on it. After checking that it booted up fine, I
immediately swapped the slow HD with the 250GB SSD that was in my x230, and
installed &lt;a href=&#34;https://getsol.us&#34;&gt;Solus&lt;/a&gt; on it. In Solus, everything worked
&amp;ldquo;out of the box&amp;rdquo;, and I would guess other Linux distributions would as well. For
Christmas, I got a new 500GB Samsung EVO SSD to upgrade the 250GB one. In total,
the T470 has less total storage than the Bonobo had, but &lt;em&gt;all&lt;/em&gt; of it is fast SSD
storage. I am getting better at using my server for network storage anyway, so
it all works out &lt;i class=&#34;fa fa-smile-o&#34; aria-hidden=&#34;true&#34;&gt;&lt;/i&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;../../img/posts/my-t470/solus-install.jpg&#34;&gt;&lt;img alt=&#34;Solus Install&#34; src=&#34;../../img/posts/my-t470/solus-install.jpg&#34; style=&#34;max-width: 100%;&#34;/&gt;&lt;/a&gt;
&lt;div class=&#34;caption&#34;&gt;Installing Solus the first night&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;While I still plan to upgrade the T470 in the future, here are it&amp;rsquo;s specs at the
time of writing this post:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;T470 Thinkpad
Intel i5-7200u [2.5 Ghz (3.1 Ghz Turbo), 2 Cores, 4 Threads]
8 GB RAM
500 GB Samsung EVO SSD
14&amp;quot; 1920x1080 IPS Display
Solus
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The hardware on the T470 is nice, and the technical specs are &lt;em&gt;okay&lt;/em&gt;, but the
real killer feature of switching to a Thinkpad for my main computer is that I
also purchased the ThinkPad Ultra Dock (40A2). This means that I am able to
&lt;em&gt;easily&lt;/em&gt; take advantage of my periphery devices whenever I am working at my
desk.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Thinkpad Ultra Dock 40A2
2 x 23.6&amp;quot; ASUS 1920x1080 Monitors
Happy Hacking Keyboard Pro2
Audioengine A2+ Speakers &amp;amp; Stands
Bose AE2 Headphones
Logitech HD Pro Webcam c920 Widescreen
Blue Yeti Microphone - Backout Edition
Inateck USB 3.0 to SATA Dual-Bay Hard Drive Docking Station
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;what-i-like&#34;&gt;What I like&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;../../img/posts/my-t470/hotel.jpg&#34;&gt;&lt;img alt=&#34;T470 in Hotel&#34; src=&#34;../../img/posts/my-t470/hotel.jpg&#34; style=&#34;max-width: 100%;&#34;/&gt;&lt;/a&gt;
&lt;div class=&#34;caption&#34;&gt;I&amp;rsquo;ve enjoyed the portability and great keyboard of the T470&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;Now that I&amp;rsquo;ve provided some background information and a summary, I&amp;rsquo;ll quickly
list what I &lt;em&gt;like&lt;/em&gt; and &lt;em&gt;do not like&lt;/em&gt; about my new T470.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Cool &amp;amp; Quiet&lt;/strong&gt; - After realizing that I am picky about heat and noise in
computers, one of my biggest goals when replacing my old computer was to find
one that ran cooler and quieter. I think I did well here. &lt;em&gt;This thing is
silent.&lt;/em&gt; Using one of my new favorite command line applications,
&lt;a href=&#34;https://amanusk.github.io/s-tui/&#34;&gt;s-tui&lt;/a&gt;, I have observed that most of the
time when I&amp;rsquo;m writing code, browsing the web, or listening to music, the fans
in the T470 don&amp;rsquo;t even kick on. When I do push the machine a little by
running VMs, or being on a video conference, the do kick up, but even then I
have to put my ear right against the computer to hear anything. At it&amp;rsquo;s
loudest, the T470 is still a very quiet device.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Size &amp;amp; Portability&lt;/strong&gt; - I love the size and portability of this laptop. The
14&amp;rdquo; form factor is large enough that I don&amp;rsquo;t feel cramped when using it as a
stand-alone device, but still small enough that I can easily throw it in my
bag and bring it with me. While I wouldn&amp;rsquo;t mind the T470 shedding a &lt;em&gt;little&lt;/em&gt;
weight (which is mostly from the battery), I find it&amp;rsquo;s thickness perfectly
acceptable for my uses (hear that Apple?). As far as build quality, it is a
solid machine. When I rest my hands on it to type, they feel fully supported
and there is &lt;em&gt;zero&lt;/em&gt; flex. When holding the closed laptop, it feels as though
it could take quite a beating and still be fine. I love that.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Keyboard &amp;amp; Track-point/pad&lt;/strong&gt; - It&amp;rsquo;s a Thinkpad keyboard, what else do I have
to say? The keys are adequately spaced, have travel (though not as much as my
x230), and feel &lt;em&gt;crisp&lt;/em&gt; when pressed, not mushy. It has a track&lt;em&gt;point&lt;/em&gt; with
physical buttons, which at this point I don&amp;rsquo;t think I could do without (Crap.
Unintentional pun. Oh well, I&amp;rsquo;m leaving it.). While I don&amp;rsquo;t use it often, the
track&lt;em&gt;pad&lt;/em&gt; is also quite nice. I find it to be an ideal size, and has
rubberized texture which prevents my fingers from feeling raw after long use.
I find it hard these days for others laptops to compete with the Thinkpad&amp;rsquo;s
keyboard/track-point setup.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Dock-able&lt;/strong&gt; - I&amp;rsquo;ve already mentioned this above, but I love that the T470 is
dock-able. This is becoming more common with the pervasiveness of USB-C, but
Thinkpads have been in the dock game for years. It works well, and fits my
current computing use-case perfectly.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Thunderbolt/USB C&lt;/strong&gt; - The big difference between the T470 and the T460
essentially comes down to the Thunderbolt 3/USB-C port on the T470. I don&amp;rsquo;t
use it much &lt;em&gt;so far&lt;/em&gt;, but I hope the industry continues the move down the this
route, and I will be glad to already have the port as they do.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Battery(s)&lt;/strong&gt; - The battery configuration and life on this laptop is great.
The T470 can get a 3-cell battery that doesn&amp;rsquo;t stick out, or an extended
battery that comes in 6 and 9 cell variations (Note: the 6 and 9 cell are the
same size). The T470 also supports an internal 3 cell battery, that can be
used to keep the laptop powered on while the external battery is swapped. I
currently have the least optimal configuration: A bulky 6-cell external, with
no internal battery. Even so, it easily lasts me throughout the day, and I can
always upgrade it down the road. I love the flexibility.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;what-i-don-t-like&#34;&gt;What I don&amp;rsquo;t like&lt;/h2&gt;

&lt;p&gt;While I overall love the T470, there are a few things I&amp;rsquo;m not thrilled about.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;The Screen&lt;/strong&gt; - When I first got my laptop&amp;hellip; I thought the screen was
defective. I had read in reviews that it wasn&amp;rsquo;t very &lt;em&gt;bright&lt;/em&gt;, but the colors
were terrible. My screen always looked as if I was using something like
&lt;a href=&#34;https://justgetflux.com/&#34;&gt;f.lux&lt;/a&gt;. After doing some reading, it turns out that
IPS panels (which I had never owned before) can appear warmer in color. That
combined with the low brightness and &lt;em&gt;not great&lt;/em&gt; color accuracy of the T470
panel, made it appear particularly awful to me. I found and configured a &lt;a href=&#34;https://www.notebookcheck.net/uploads/tx_nbc2/N140HCA_EAB_01.icm&#34;&gt;ICC
file&lt;/a&gt; which
helped, but the biggest fix was time. As terrible as it was at first, I really
don&amp;rsquo;t mind the screen. Yea, it could be brighter with better colors, but now I
think it looks nice, and colors on top of black really pop.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Track-point&lt;/strong&gt; - I stated in the section above that the track-point was one of
the features I loved about this laptop. That is true&amp;hellip; but, if I &lt;em&gt;had&lt;/em&gt; to get
picky, the track-point itself is not that great. It&amp;rsquo;s hard to move around with
and it&amp;rsquo;s sensitivity differs depending on which direction it is traveling. At
times it can be a real pain. By contrast, my x230 is very stable and precise.
I wish the T470&amp;rsquo;s track-point was like the one on my x230&amp;rsquo;s.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Graphics&lt;/strong&gt; - I can&amp;rsquo;t complain too much here because I knew what I was
getting myself into, but&amp;hellip; the graphics performance isn&amp;rsquo;t the best. I know
&lt;em&gt;not&lt;/em&gt; having dedicated graphics is what allows the T470 to run cool and sip
power, but I wouldn&amp;rsquo;t mind a &lt;em&gt;little&lt;/em&gt; more umph. I don&amp;rsquo;t expect to do heavy
gaming on the T470. If I want to game, I am going to build a gaming computer.
However, I do wish I could play basic games a &lt;em&gt;little&lt;/em&gt; better in the meantime.
(&lt;em&gt;On the bright side&amp;hellip;with the thunderbolt 3 port&amp;hellip; an eGPU is a
possibility&amp;hellip;hmmm&amp;hellip;&lt;/em&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;future-plans&#34;&gt;Future Plans&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;../../img/posts/my-t470/ram-upgrade.jpg&#34;&gt;&lt;img alt=&#34;T470 Ram Slot&#34; src=&#34;../../img/posts/my-t470/ram-upgrade.jpg&#34; style=&#34;max-width: 100%;&#34;/&gt;&lt;/a&gt;
&lt;div class=&#34;caption&#34;&gt;The empty RAM slot I hope to add a 16GB stick to&amp;hellip; if prices ever drop again&amp;hellip;&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;Overall, I have been very happy with the T470 as my main computer. I&amp;rsquo;d still
like to upgrade the RAM at some point, and I &lt;em&gt;have&lt;/em&gt; entertained the idea of
trying an eGPU setup&amp;hellip; I might &lt;em&gt;eventually&lt;/em&gt; build a new desktop, but even then,
I would likely have it headless, running VMs and connect to it remotely from the
T470 (except for occasional gaming). That being said, right now, the T470 is
working great as is!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Sold My Bonobo</title>
      <link>http://ryan.himmelwright.net/post/sold-my-bonobo/</link>
      <pubDate>Sun, 14 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>http://ryan.himmelwright.net/post/sold-my-bonobo/</guid>
      <description>&lt;p&gt;Last fall, I did something I didn&amp;rsquo;t think I would do anytime soon&amp;hellip;. I sold my
main workstation computer. Specifically, my System76 Bonobo Extreme laptop.
Several events over the last year have led me to the realization that my
&lt;em&gt;actual&lt;/em&gt; computing &lt;em&gt;needs&lt;/em&gt; are drastically different than what they were when I
purchased the Bonobo in early 2015. This post will highlight some of those
realizations, and why I ultimately decided to sell my Bonobo laptop.&lt;/p&gt;

&lt;h2 id=&#34;why-i-got-the-bonobo&#34;&gt;Why I got the Bonobo&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;../../img/posts/sold-bonobo/alakazam.jpg&#34;&gt;&lt;img alt=&#34;Bonobo Setup&#34; src=&#34;../../img/posts/sold-bonobo/alakazam.jpg&#34; style=&#34;max-width: 100%;&#34;/&gt;&lt;/a&gt;
&lt;div class=&#34;caption&#34;&gt;Bonobo Workstation Setup&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;I bought my Bonobo laptop from &lt;a href=&#34;https://www.system76.com&#34;&gt;System76&lt;/a&gt; during my
first post-college year. I needed to replace my old workstation: an aging
desktop that I built before my High School graduation. While its i7-930 CPU,
6GB of RAM, NVIDIA GTX 260, and hodgepodge of hard drives (SSD and HHD) serverd
my needs throughout college, I was starting to feel restricted. After some
research, I came to the conclusion that it would be better to get a new system,
instead of trying to upgrade my old desktop. I wanted a new, powerful computer
that could easily run multiple VMs, play some video games, and compile
software/run models &lt;em&gt;fast&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;After a few months at my new job, I noticed I didn&amp;rsquo;t use a portable computer
as much. I went to work, used my work computer, and then came home to my
desktop. So portability wasn&amp;rsquo;t the &lt;em&gt;biggest&lt;/em&gt; concern when searching. That being
said, I still lived out of state from my family, and would leave for a week or
more at a time during hollidays or vacation. I wanted to still &lt;em&gt;be able&lt;/em&gt; to lug
my computer with me during family vists. I also liked to game &lt;em&gt;a little bit&lt;/em&gt;
when visiting with my brothers, or after work, so I added a dedicated GPU to the search criteria.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;../../img/posts/sold-bonobo/portable-setup.jpg&#34;&gt;&lt;img alt=&#34;Portable Bonobo Setup&#34; src=&#34;../../img/posts/sold-bonobo/portable-setup.jpg&#34; style=&#34;max-width: 100%;&#34;/&gt;&lt;/a&gt;
&lt;div class=&#34;caption&#34;&gt;Portable Bonobo Setup&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;All of this pointed me towards desktop-replacement laptops. I wanted to support
a Linux-only vendoor, so I looked at System76. The Bonobo seemed comparable to
other laptops on the market, but being a System76 device, I felt more confident
all the hardware would play nicely with Linux. It was a big laptop, but my plan
was to use it mostly as a desktop computer, with the option to still travel with
it when I needed to go somewhere for more than just a day or two. Besides, I
liked that the case was larger, as I hoped it would help increase airflow
to help with heat management.&lt;/p&gt;

&lt;p&gt;I purchased the Bonobo, and it worked out very well for several years. It was a
very powerful computer (more than my old &lt;em&gt;desktop&lt;/em&gt;), but still portable &lt;em&gt;enough&lt;/em&gt;
for when I wanted to take it somewhere.&lt;/p&gt;

&lt;h2 id=&#34;the-modern-reality&#34;&gt;The Modern Reality&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;../../img/posts/sold-bonobo/side-view.jpg&#34;&gt;&lt;img alt=&#34;Bonobo Thickness&#34; src=&#34;../../img/posts/sold-bonobo/side-view.jpg&#34; style=&#34;max-width: 100%;&#34;/&gt;&lt;/a&gt;
&lt;div class=&#34;caption&#34;&gt;Bonobo Side View&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;As the years passed, my computing needs changed. On top of that, some of the
initial assumptions about my computer use turned out to not be entirely true.&lt;/p&gt;

&lt;h4 id=&#34;i-m-not-a-big-pc-gamer&#34;&gt;I&amp;rsquo;m Not a Big &lt;del&gt;PC&lt;/del&gt; Gamer.&lt;/h4&gt;

&lt;p&gt;For example, when my brothers and I would pull out our laptops to play games
together, the games we played were never highly demanding. Our top played games
were Minecraft, Serious Sam 3, Dungeon Defenders, and &lt;em&gt;maybe&lt;/em&gt; CS GO. Needless to
say, the Bonobo was a little overkill. Unfortunately, with my brothers and I all
living in different states now, we really don&amp;rsquo;t see each other in person enough
to play computer games in the same room anymore. These days, when we want to
remotely play video games together&amp;hellip; we play on the Xbox ONE (which I bought
mostly to keep in touch with my friends and family. I didn&amp;rsquo;t own one when I
purchased the Bonobo).&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;../../img/posts/sold-bonobo/xboxone.png&#34;&gt;&lt;img alt=&#34;xbox one&#34; src=&#34;../../img/posts/sold-bonobo/xboxone.png&#34; style=&#34;max-width: 100%;&#34;/&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I have enjoyed owning a computer that can handle most of games I throw at
it, but if I&amp;rsquo;m being honest&amp;hellip; I don&amp;rsquo;t play games too often. Even on the Xbox,
I go in bursts of playing once or twice a week, and then don&amp;rsquo;t touch a game for
months. While I wouldn&amp;rsquo;t mind having the ability to play more demanding games on
my computer, it isn&amp;rsquo;t a &lt;em&gt;requirement&lt;/em&gt; for me&amp;hellip; expecially on a laptop.&lt;/p&gt;

&lt;h4 id=&#34;i-travel-more-sometimes-on-airplanes&#34;&gt;I Travel More. Sometimes On Airplanes.&lt;/h4&gt;

&lt;p&gt;One change compared to when I originally bought my bonobo is that I travel more.
When I first moved to Massachusetts, I figured most of my traveling would be
from here back to Pennsylvania, or to vacation once a year. However, my
wife and I have managed to keep in touch with some of our old friends&amp;hellip; who
live all over the country. Plus, now that my brothers have moved out of
the house, they have started to spread out too (as already mentioned in the
section above). So, I travel more often. In particular, I fly more
frequently.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;../../img/posts/sold-bonobo/tsa.png&#34;&gt;&lt;img alt=&#34;TSA logo&#34; src=&#34;../../img/posts/sold-bonobo/tsa.png&#34; style=&#34;max-width: 80%;&#34;/&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To say it bluntly, the Bonobo sucks to travel with. It takes up the majority of
my bag, and most bags don&amp;rsquo;t even fit it. Besides the laptop size, TSA is often
freaked out by the MASSIVE power supply, and has had to re-scan my bag several
times, thinking I had a &amp;ldquo;bluetooth speaker&amp;rdquo; or something else I neglected to
tell them about (despite my polite warnings that &amp;ldquo;my laptop&amp;rsquo;s power charger is
massive&amp;rdquo;). Beyond security, It isn&amp;rsquo;t a computer I can pull out of my bag
and easily use in an airport terminal. In fact, the last time I flew with it, I
tried to work on it at table, but couldn&amp;rsquo; because the power
outlet didn&amp;rsquo;t supply enough juice to charge the laptop. So, I was
forced to switch to my phone for entertainment while waiting several hours
for my flight, despite having a massive gaming laptop in my bag.&lt;/p&gt;

&lt;h4 id=&#34;it-turns-out-i-m-noise-picky&#34;&gt;It turns out I&amp;rsquo;m noise picky.&lt;/h4&gt;

&lt;p&gt;When building or purchasing a computer, something to consider is noise. With my
previous machines, I didn&amp;rsquo;t worry about it. I&amp;rsquo;d joke to myself, &amp;ldquo;Noise? Why
should I be concerned about that? I&amp;rsquo;m not building a recording studio&amp;rdquo;! After
several years of focusing on how I &lt;em&gt;actually&lt;/em&gt; use my computing devices, I&amp;rsquo;ve
noticed that I am very picky with noise, and on a related note, heat. Every time
I hear the fans kick up, I start to worry that I am over-taxing the system and
start to monitor the biggest culprits. When running taxing processes, I watch
the cpu temps and hate seeing them high.&lt;/p&gt;

&lt;p&gt;&lt;center&gt;
&lt;a href=&#34;../../img/posts/sold-bonobo/temps.jpg&#34;&gt;&lt;img alt=&#34;Temp Sensors&#34; src=&#34;../../img/posts/sold-bonobo/temps.jpg&#34; style=&#34;max-width: 80%;&#34;/&gt;&lt;/a&gt;
&lt;/center&gt;
&lt;div class=&#34;caption&#34;&gt;Parallel Compression on the Bonobo Spiked the Temps&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;I hoped the extra &lt;em&gt;thickness&lt;/em&gt; of the Bonobo would help with any heating issues.
While it might have a little bit, when you shove a decent GPU into a laptop&amp;hellip;
it&amp;rsquo;s going to give off heat. Additionally, when using a powerful CPU to it&amp;rsquo;s
full potential, it is very difficult for a laptop to compete with a
desktop-level cooling system. The Bonobo is a very powerful laptop, but the loud
fans prevented me from actually &lt;em&gt;using&lt;/em&gt; it to its full potential, because I
would immediately start shutting down processes when the noise kicked up. I know
the fans spin up to &lt;em&gt;help&lt;/em&gt; with thermals, the Bonobo was just a tad to hot and
loud for my taste.&lt;/p&gt;

&lt;h4 id=&#34;a-desktop-replacement&#34;&gt;A Desktop Replacement?&lt;/h4&gt;

&lt;p&gt;My issues with the Bonobo boiled down to the fact that based on &lt;em&gt;my current
computing use-case&lt;/em&gt;, the Bonobo functioned less as a
&lt;em&gt;desktop-replacement-laptop&lt;/em&gt;, and more of just a &lt;em&gt;shitty, somewhat portable,
desktop&lt;/em&gt;. Most of the time, I am just browsing or writing code on the machine in
front of me. If I need more power, I connect remotely to a bigger, better,
computer. I also never game &amp;ldquo;on the go&amp;rdquo;, so if I want to have a computer for
gaming, it makes much more sense to eventually have a half-decent desktop (or
invest in an eGPU), which will fit my needs much better that even high-end
gaming laptops.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;../../img/posts/sold-bonobo/power-cord.jpg&#34;&gt;&lt;img alt=&#34;Bonobo Power Cord&#34; src=&#34;../../img/posts/sold-bonobo/power-cord.jpg&#34; style=&#34;max-width: 100%;&#34;/&gt;&lt;/a&gt;
&lt;div&gt;The power cord alone made it difficult to pick up the Bonobo and move it elsewhere&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;The Bonobo is great if you sit it on a desk and use it as your full computer. I
did not. I have a ton of periphery devices, and started to even use it in
clam-shell mode, making the nice 17&amp;rdquo; screen a waste. Additionally, I hated
having to unplug and re-plug all the devices when I wanted to move the computer.
&lt;em&gt;In theory&lt;/em&gt;, I could move the Bonobo from my desk into the other room and work
with my wife at the kitchen table whenever we wanted, but I &lt;em&gt;rarely&lt;/em&gt; did.
Unplugging all my devices and fishing the massive power cable out from behind my
desk (because the battery life is &amp;hellip; yea, I don&amp;rsquo;t think I need to explain
this), was usually enough to prompt me to treat the Bonobo as a desktop, rather
than a laptop.&lt;/p&gt;

&lt;h2 id=&#34;recent-discoveries-my-new-plan&#34;&gt;Recent Discoveries &amp;amp; My New Plan&lt;/h2&gt;

&lt;p&gt;A while back, I bought a &lt;a href=&#34;../../post/my-new-used-x230/&#34;&gt;used x230 Thinkpad&lt;/a&gt;. Last
summer, I finally purchased a &lt;a href=&#34;https://www.ebay.com/itm/Lenovo-Thinkpad-Mini-Docking-Station-Series-3-USB-3-0-T410-L420-L520-X230-T530/272238176342?epid=562055390&amp;amp;hash=item3f62a8e856:g:PbIAAOSw2x1XMPHU:sc:USPSPriority!02703!US!-1&#34;&gt;used docking
station&lt;/a&gt;
for it, so I could try out a docked setup. I loved it. It matched my needs
exceptionally. I was able to have &lt;em&gt;all&lt;/em&gt; of my periphery devices attached to the
dock and thus, the x230, but with the push of a button I could detach the laptop be
on my way. The setup worked so well in fact, that I started to use my x230 as my
desk computer, and would remote to my Bonobo on the other side of the room when
I needed it. At that point, I realized I might want to switch things up.&lt;/p&gt;

&lt;p&gt;I want to conclude by again stating that my System76 Bonobo Extreme was &lt;em&gt;not&lt;/em&gt; a
bad machine. It is great when used as a standalone, semi-portable computer. I
didn&amp;rsquo;t use it that way, and as a result, it just wasn&amp;rsquo;t for me anymore. I
learned that a quite, cool, portable, but dockable, laptop is ideal for my main
device &lt;em&gt;right now&lt;/em&gt;, even if it isn&amp;rsquo;t as powerful. Unfortunately, System76
doesn&amp;rsquo;t offer such a machine at this time. So, my plan is to replace the Bonobo
with newer thinkpad + dock combination. Hopefully that combination will give me
a nice dock setup that I have grown to appreciate and love.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Simple Reverse SSH Tunnels</title>
      <link>http://ryan.himmelwright.net/post/simple-reverse-ssh-tunnel/</link>
      <pubDate>Sat, 26 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>http://ryan.himmelwright.net/post/simple-reverse-ssh-tunnel/</guid>
      <description>

&lt;p&gt;Reverse SSH tunnels are &lt;em&gt;very&lt;/em&gt; useful and simple to setup, but can be a bit
 tricky to figure out at first. So, here&amp;rsquo;s a brief and simple guide on how to
 easily create reverse tunnels.&lt;/p&gt;

&lt;hr /&gt;

&lt;!--more --&gt;

&lt;h3 id=&#34;ssh-tunnels&#34;&gt;SSH Tunnels&lt;/h3&gt;

&lt;p&gt;A secured shell (SSH) tunnel is an encrypted tunnel, created with a connection using the ssh protocol. It can be thought of as a pipe between two computers that data travels through. Being encrypted, people outside the pipe can only see that data packages are traveling through it, but cannot read the actual contents of the package. SSH tunnels are used to securely connect between devices, as well as forward ports between devices. For example, if I am working on a website hosted on port 3000 of my internally networked laptop, I can use a ssh tunnel to forward that port to one on a public server so that friends can view the website.&lt;/p&gt;

&lt;h3 id=&#34;reverse-tunnels&#34;&gt;Reverse Tunnels&lt;/h3&gt;

&lt;p&gt;Reverse tunnels are just like normal ssh tunnels except&amp;hellip; well&amp;hellip; in reverse. This means that I can connect to a remote computer, and have &lt;em&gt;its&lt;/em&gt; port tunneled to &lt;em&gt;me&lt;/em&gt;, which can be very handy. This is largely used for one particular usecase: providing easy, temporarily, ssh access to computers behind a network and/or firewall.&lt;/p&gt;

&lt;p&gt;To make all of this (hopefully) easier to understand, I have drafted up a few diagrams. For the example, lets say I am away and my wife wants me to fix something on her laptop. Unless I have her &lt;em&gt;properly&lt;/em&gt; configure the router to forward ssh traffic to her laptop, I normally cannot do this. Additionally, she might be at a friends house, office, or other public place where there is no access to the router controls (well, she &lt;em&gt;shouldn&amp;rsquo;t&lt;/em&gt;). So, her laptop doesn&amp;rsquo;t have a direct public IP address, but our server &lt;em&gt;does&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;../../img/posts/simple-reverse-ssh-tunnel/network-diagram.png&#34;&gt;&lt;img alt=&#34;Computer behind firewall&#34; src=&#34;../../img/posts/simple-reverse-ssh-tunnel/network-diagram.png&#34; style=&#34;max-width: 100%;&#34;/&gt;&lt;a&gt;
&lt;em&gt;Two computers (at least one without a direct public IP), both with access to a cloud server with a public IP&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Because my wife can connect to the public cloud server, she can initiate a reverse tunnel from her laptop, with the server. The tunnel directly connects the server to her laptop.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;../../img/posts/simple-reverse-ssh-tunnel/ssh-tunnel.png&#34;&gt;&lt;img alt=&#34;Computer behind firewall&#34; src=&#34;../../img/posts/simple-reverse-ssh-tunnel/ssh-tunnel.png&#34; style=&#34;max-width: 100%;&#34;/&gt;&lt;/a&gt;
&lt;em&gt;The laptop computer creates a reverse ssh tunnel to the cloud server.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;On my end, I first ssh to the server from my computer. Once the tunnel is started, I can then ssh again to a specified local port on the server, and it will tunnel me directly to her laptop. This will give me a command prompt as if I was sitting with an open terminal at her computer.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;../../img/posts/simple-reverse-ssh-tunnel/connect-through-tunnel.png&#34;&gt;&lt;img alt=&#34;Computer behind firewall&#34; src=&#34;../../img/posts/simple-reverse-ssh-tunnel/connect-through-tunnel.png&#34; style=&#34;max-width: 100%;&#34;/&gt;&lt;/a&gt;
&lt;em&gt;With the reverse tunnel setup, the first computer can ssh to the second via the cloud server and tunnel connection.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;When I am done working, my wife can close the tunnel, and I will no longer be able to access her computer.&lt;/p&gt;

&lt;h3 id=&#34;creating-the-reverse-tunnel&#34;&gt;Creating The Reverse Tunnel&lt;/h3&gt;

&lt;p&gt;SSH tunnels can be initiated on linux easily from the command line (assuming ssh is setup and properly configured). To create a reverse tunnel, use the &lt;code&gt;-R&lt;/code&gt; flag. After the flag, provide what I call the &amp;ldquo;path&amp;rdquo; of the tunnel. So, the server&amp;rsquo;s port where the tunnel will be found, the host of that port (I almost always use &lt;code&gt;localhost&lt;/code&gt;), and the port to be tunneled. Lastly, make sure to specify the &lt;em&gt;IP&lt;/em&gt; or &lt;em&gt;hostname&lt;/em&gt; of the remote computer just like in a typical plain &lt;code&gt;ssh hostname&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ssh -R remote-port:localhost:local-port host
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Example:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ssh -R 19999:localhost:22 meowth
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;connecting&#34;&gt;Connecting&lt;/h3&gt;

&lt;p&gt;After setting up the tunnel, the initializing computer can be accessed &lt;em&gt;from the server&lt;/em&gt; by ssh&amp;rsquo;ing to the &lt;em&gt;remote-port&lt;/em&gt; of &lt;em&gt;localhost&lt;/em&gt; (defined above):&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ssh -p 19999 localhost
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This should start an ssh session to the initializing computer. In my example, this is the laptop.&lt;/p&gt;

&lt;h3 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h3&gt;

&lt;p&gt;SSH tunnels are a fascinating and useful piece of technology. The ssh protocol makes modern computing much more secure, and easier to manage multiple computers. That&amp;rsquo;s &lt;em&gt;reverse&lt;/em&gt; tunnels in a nutshell. Have fun tunneling!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Back to Solus</title>
      <link>http://ryan.himmelwright.net/post/back-to-solus/</link>
      <pubDate>Mon, 31 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>http://ryan.himmelwright.net/post/back-to-solus/</guid>
      <description>&lt;p&gt;Well, that was faster than I expected. This past weekend, I wiped the Fedora installation on my main computer, and replaced it with Solus. My Fedora install broke, and I needed to use a Fedora Live CD to fix it. I thought that if I had to use a live CD to fix the issue, I might as well just do a clean install. With the idea of a clean install in my head&amp;hellip; I thought (possibly influenced by my recent &lt;a href=&#34;../../post/dabbling-with-go/#motivation&#34;&gt;motivation&lt;/a&gt; to play with Go), that I might as well do the clean install with &lt;a href=&#34;https://getsol.us/&#34;&gt;Solus&lt;/a&gt;&amp;hellip;&lt;/p&gt;

&lt;h2 id=&#34;nvidia-issues&#34;&gt;Nvidia Issues&lt;/h2&gt;

&lt;div class=&#34;video-container&#34;&gt;
&lt;iframe width=&#34;100%&#34; height=&#34;360&#34; src=&#34;https://www.youtube.com/embed/IVpOyKCNZYw?start=101&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;&lt;em&gt;Linus Torvalds famously flipped off Nvidia during a Q&amp;amp;A&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Basically, what I think happened was that my Nvidia drivers got messed up during an update. When I rebooted my computer, my screens were black. This happened no matter which kernel I booted into from Grub. I assumed it was a graphics problem and preceded to switch to another tty to login and fix the problem. I was able to get to a CLI login screen (with the normal &lt;code&gt;user:&lt;/code&gt; prompt) and tried login in. However, after typing in my user name and hitting enter, instead of being promoted for a password, I received an &amp;ldquo;Error Logging In&amp;rdquo; message. So, I tried the same thing with the root user account. Same thing. After typing in a user name, it yelled at me. There was no way to log in.&lt;/p&gt;

&lt;p&gt;I jumped into the IRC chat and started asking around for advice. As always, everyone was very helpful and tried to help me troubleshoot. They shared my bewilderment. We came to the conclusion that it must of been something with the Nvidia drivers. I was told that it is common to have issues when installing the drivers from Nvidia&amp;rsquo;s web site instead of the &lt;a href=&#34;https://rpmfusion.org/&#34;&gt;RPM Fusion Repos&lt;/a&gt; (I intended to install from the RPM fusion repos, but I went to the nvidia site to find out what version to should use&amp;hellip; and then just downloaded it from there. My bad :P).&lt;/p&gt;

&lt;p&gt;Anyway, I quickly realized that at the very least, I would have to boot up and log into a Live CD to fix the problem. As stated in the intro paragraph, while waiting for the ISO image to download I thought that if I have to load up the CD, I might as well just do a clean Fedora 26 install. A couple minutes later as I was booting up the Live CD, I through that as long as I was reinstalling my OS&amp;hellip; l should consider installing&amp;hellip; Solus.&lt;/p&gt;

&lt;h2 id=&#34;installed-solus&#34;&gt;Installed Solus&lt;/h2&gt;

&lt;p&gt;&lt;img alt=&#34;Installing Solus&#34; src=&#34;../../img/posts/back-to-solus/install.png&#34; style=&#34;max-width: 100%;&#34;/&gt;
&lt;em&gt;Installing Solus&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;With the Fedora live environment all booted and ready, I started downloading the latest Solus ISO (Budgie) on my other laptop. Once the ISO image was mounted to a drive, I booted it up and started installing Solus. After the install, I immediately updated because I knew there have been a TON of updates since the last ISO snapshot (mid-April). When I rebooted, I absolutely loved what I saw. It is amazing how much Solus and Budgie have improved, even during my short distro-hopping vacation.&lt;/p&gt;

&lt;p&gt;Looking at my post history, it may appear as though I used Fedora for a few days, became fed up with it, and came running back to Solus. That is not entirely true. The reality is that I sat on writing my &lt;a href=&#34;../../post/solus-to-fedora/&#34;&gt;Fedora post&lt;/a&gt; for a long time. I used Fedora for about a month, and it was generally a great experience. If it didn&amp;rsquo;t break, I probably would have stayed for a bit longer. When considering a new install though, I realized that I had missed Solus.&lt;/p&gt;

&lt;p&gt;As of now, my plan is to keep using Solus, at least on my main computer. I am also hoping to get more involved with the project, and start packing up some software again. Maybe I can even help with some debugging and development. We shall see&amp;hellip;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Migrating from Solus to Fedora for now</title>
      <link>http://ryan.himmelwright.net/post/solus-to-fedora/</link>
      <pubDate>Tue, 25 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>http://ryan.himmelwright.net/post/solus-to-fedora/</guid>
      <description>&lt;p&gt;For awhile, I have been debating the idea of switching back to Fedora (from Solus). At least on my &lt;a href=&#34;../../pages/homelab/#alakazam&#34;&gt;main computer&lt;/a&gt;. First, let me state this right up front: I am still &lt;em&gt;very&lt;/em&gt; satisfied with Solus. I think it is one of the best current Linux distros, and I want to still contribute to the project. However, there are a few reasons why Solus isn&amp;rsquo;t the best fit for my needs &lt;em&gt;right now&lt;/em&gt;, and I will highlight them below.&lt;/p&gt;

&lt;h3 id=&#34;why-switch&#34;&gt;Why Switch&lt;/h3&gt;

&lt;p&gt;&lt;center&gt;
&lt;img alt=&#34;Solus and Fedora Logos&#34; src=&#34;../../img/posts/solus-to-fedora/logos.png&#34;  style=&#34;max-width: 85%;&#34;/&gt;
&lt;/center&gt;
&lt;em&gt;The Solus (Left) and Fedora (right) Project Logos&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The first phrase stated on the &lt;a href=&#34;https://getsol.us&#34;&gt;Solus Project homepage&lt;/a&gt; is &amp;ldquo;Solus is an operating system that is designed for &lt;strong&gt;home computing&lt;/strong&gt;.&amp;rdquo; I find this to be true, and Solus does a great job at it. The Linux community needs a few good, focused, distros. While I have been using Solus for my &amp;ldquo;&lt;em&gt;home&lt;/em&gt;&amp;rdquo; computing, the computing tasks I&amp;rsquo;ve focused on recently do not fall into the category of standard &lt;em&gt;home computing&lt;/em&gt; use. Recently, my main top computing activities and goals are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Writing (okay&amp;hellip; but still)&lt;/li&gt;
&lt;li&gt;Running all sorts of VMs&lt;/li&gt;
&lt;li&gt;Trying various Server Technologies

&lt;ul&gt;
&lt;li&gt;ZFS&lt;/li&gt;
&lt;li&gt;KVM&lt;/li&gt;
&lt;li&gt;Containerization Technologies (LXC, Docker, &amp;hellip;)&lt;/li&gt;
&lt;li&gt;Ansible and other automation tools&lt;/li&gt;
&lt;li&gt;Etc.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Learning about Clustering

&lt;ul&gt;
&lt;li&gt;OpenMP&lt;/li&gt;
&lt;li&gt;High Availability&lt;/li&gt;
&lt;li&gt;Distributed File systems&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Trying to get involved with some other Open Source Projects

&lt;ul&gt;
&lt;li&gt;Fedora (Infrastructure, Dev)&lt;/li&gt;
&lt;li&gt;NixOS&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As you can see, many of the above items are not desktop based, but really
&lt;em&gt;server&lt;/em&gt; based operations. Solus is &lt;em&gt;not&lt;/em&gt; a server distribution, as it doesn&amp;rsquo;t
&lt;em&gt;try&lt;/em&gt; to be one. Which is a good thing. It is focused on its audience. I
just happen to not be in that audience at the moment.&lt;/p&gt;

&lt;p&gt;Additionally, one of my goals for the near future is to transform my long-time Proxmox server into a &lt;a href=&#34;https://www.centos.org/&#34;&gt;CentOS&lt;/a&gt; box. Using Fedora on my main workstation does help me get accustom to that environment. It also allows me to more accurately test out ideas before I plan the big move.&lt;/p&gt;

&lt;p&gt;Lastly, I had been eyeing up the Plasma desktop, and wanted to try that out again. At the time of writing this post, Solus doesn&amp;rsquo;t fully support the Plasma desktop (yet). However, Fedora &lt;em&gt;does&lt;/em&gt; have a &lt;a href=&#34;https://spins.fedoraproject.org/kde/&#34;&gt;KDE Plasma Desktop Spin&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&#34;the-switch&#34;&gt;The Switch&lt;/h3&gt;

&lt;p&gt;&lt;center&gt;
&lt;img alt=&#34;Solus and Fedora Logos&#34; src=&#34;../../img/posts/solus-to-fedora/fedora25.png&#34;  style=&#34;max-width: 100%;&#34;/&gt;
&lt;/center&gt;
&lt;em&gt;Screenfetch on my new Fedora Install&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;I eventually (and somewhat sporadically), made the switch to Fedora. I switched
the week before the 26 release, so I decided to start with 25, and then upgrade
later (although I did test out 26 on my other laptop). This let me ensure that
the 26 issues were ironed out before upgrading. I also got to test out the &lt;code&gt;dnf&lt;/code&gt;
system upgrade process. I recorded &lt;em&gt;post-switch&lt;/em&gt; notes during the last few weeks
to document how everything went.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;Well&amp;hellip; I did it. I switched to Fedora on Alakazam yesterday. I went with the
Fedora 25 KDE spin and did all of the hoops to get that up and going. Not only
is it taking some time to get used to Fedora again, but I am needing to
reacquaint myself with the KDE environment&amp;hellip; it does seem different that other
Plasma setups I&amp;rsquo;ve used in the past&amp;hellip; But I like it.&amp;rdquo;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I got used to it in no time:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Alakazam is doing well on Fedora. I&amp;rsquo;ve been enjoying it and think I will stay on
it.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;updates&#34;&gt;Updates&lt;/h3&gt;

&lt;p&gt;I ran some updates that I thought &lt;em&gt;might&lt;/em&gt; be problematic, based
on &lt;a href=&#34;../../post/back-on-arch/#fedora&#34;&gt;previous issues&lt;/a&gt; I&amp;rsquo;ve encountered with Fedora. I
made sure to note the results as well. The first notable update was from the
first time I updated the kernel, and the second was  upgrading from
Fedora 25 to 26. Both updates went very smoothly without any issues:&lt;/p&gt;

&lt;h4 id=&#34;kernel-upgrade&#34;&gt;Kernel Upgrade&lt;/h4&gt;

&lt;blockquote&gt;
&lt;p&gt;So I am about to do my first Kernel update since being on Fedora again (on
Alakazam). We&amp;rsquo;ll see how the video drivers respond&amp;hellip; To note, I am still on 25
so it hopefully won&amp;rsquo;t be too bad&amp;hellip;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;em&gt;&amp;hellip;reboot&amp;hellip;&lt;/em&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;No issues whatsoever :)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&#34;upgrade-to-fedora-26&#34;&gt;Upgrade to Fedora 26&lt;/h4&gt;

&lt;p&gt;&lt;center&gt;
&lt;a href=&#34;../../img/posts/solus-to-fedora/fedora26-upgrade.png&#34;&gt;&lt;img alt=&#34;Solus and Fedora Logos&#34; src=&#34;../../img/posts/solus-to-fedora/fedora26-upgrade.png&#34; style=&#34;max-width: 100%;&#34;/&gt;&lt;/a&gt;
&lt;/center&gt;
&lt;em&gt;I upgraded my Fedora 25 Plasma Install to Fedora 26&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Other than some odd issues with the GUI tool, the upgrade from 25 to 26 was
smooth and uneventful.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;I just upgraded Alakazam from Fedora 25 KDE, to Fedora 26 this morning. I couldn&amp;rsquo;t really get the
graphical installer to start, but that could be because I have several desktop environments setup
(Plasma &amp;amp; Gnome), so it may have been confused (I was using the Gnome Software App in Plasma&amp;hellip;)&lt;/p&gt;

&lt;p&gt;I just did the upgrade using the (command line) dnf upgrade tool, like I normally use, and it worked
wonderfully. It even looks like my nvidia drivers stayed and my monitors were configured correctly
after rebooting. The only difference is I don&amp;rsquo;t seem to have the same Plasma animations I had
before, but that is fine, and likely part of the update.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;So that it. Those are my reasons for switching (for now), and the results of my
switch. I am still happy with Fedora, at least on Alakazam, and will likely
remain on it until I have a convincing reason to leave.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Creating a git Repo Remote</title>
      <link>http://ryan.himmelwright.net/post/creating-a-git-remote/</link>
      <pubDate>Wed, 19 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>http://ryan.himmelwright.net/post/creating-a-git-remote/</guid>
      <description>&lt;p&gt;For over a year or so, I have been using a
self-hosted &lt;a href=&#34;https://about.gitlab.com/&#34;&gt;Gitlab&lt;/a&gt; to host all of my private repos.
For a few months now, I have been meaning to migrate my Gitlab repos to bare, minimal
ones, hosted directly on a server. The majority of my code/configs are hosted
publicly on &lt;a href=&#34;https://github.com/himmAllRight&#34;&gt;my Github&lt;/a&gt; page, and it really
doesn&amp;rsquo;t make sense to maintain a full Gitlab instance for the few (like&amp;hellip;2)
private repositories that I keep. Moving the git repos to new ones right on the server
is actually fairly simple. For such a simple process, all the guides I saw
online went way above and beyond what I needed. So, here are the &lt;em&gt;two&lt;/em&gt; steps I
did to migrate my repos.&lt;/p&gt;

&lt;h3 id=&#34;ssh-keys&#34;&gt;SSH Keys&lt;/h3&gt;

&lt;p&gt;The &lt;em&gt;pre&lt;/em&gt; (and somewhat optional) step to is to setup ssh key authentication. If ssh keys are not configured, git will prompt for the password of the repo&amp;rsquo;s host user . When using a git service (ex: Github or Gitlab), this is usually unknown, so ssh keys are required. When rolling your own remote git repo, the password will likely be known. Still, setting up ssh authentication makes the process easier and more secure. If you
do not know how to configure ssh keys, I included a small ssh key how-to &lt;a href=&#34;../../post/Ansible-On-Pi-Cluster/#ssh&#34;&gt;here&lt;/a&gt; in &lt;a href=&#34;../../post/Ansible-On-Pi-Cluster&#34;&gt;a previous post&lt;/a&gt;. Many of the git guides out there call for creating a &lt;code&gt;git&lt;/code&gt; user and setting up ssh keys with that user. This is a great idea if multiple people need access to the git repo. However, for my purposes I will use my username, as I will be the only one accessing it (which in my case is a good thing).&lt;/p&gt;

&lt;h3 id=&#34;creating-server-repo&#34;&gt;Creating Server Repo&lt;/h3&gt;

&lt;p&gt;&lt;center&gt;
&lt;img src=&#34;../../img/posts/creating-remote-git-repo/init-bare-repo.png&#34; name=&#34;bare init&#34; onmouseover=&#34;this.src=&#39;../../img/posts/creating-remote-git-repo/init-bare-repo.gif&#39;&#34; onmouseout=&#34;this.src=&#39;../../img/posts/creating-remote-git-repo/init-bare-repo.png&#39;&#34; style=&#34;max-width: 100%;&#34;/&gt;
&lt;/center&gt;
&lt;em&gt;Creating the remote git repo&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Once ssh authentication is configured, ssh into the remote server that will host the git repository. Creating the remote repo is a simple process. First, make a directory for the repo (the normal convention is to use a &lt;code&gt;.git&lt;/code&gt; ending: &lt;code&gt;REPO-NAME.git&lt;/code&gt;). Next, jump into the created directory (&lt;code&gt;cd&lt;/code&gt;) and run the command &lt;code&gt;git init --bare&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mkdir REPO-NAME.git
cd REPO-NAME.git
git init --bare
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This will initialize the repository inside that directory. The &lt;code&gt;git init&lt;/code&gt; command is used to create a git repository. The &lt;code&gt;--bare&lt;/code&gt; option flag tells git to treat it as a bare repository. Bare repositories do not contain a working or checked out copy of the source files. Thus, the plain &lt;code&gt;git init&lt;/code&gt; command creates a &lt;em&gt;working&lt;/em&gt; repo, while &lt;code&gt;git init --bare&lt;/code&gt; is used to create a &lt;em&gt;sharing(server) repo&lt;/em&gt;. This allows the working repositories of many developers to be synced with the server repo.&lt;/p&gt;

&lt;h3 id=&#34;cloning-repo&#34;&gt;Cloning Repo&lt;/h3&gt;

&lt;p&gt;&lt;center&gt;
&lt;img src=&#34;../../img/posts/creating-remote-git-repo/clone-new-remote.png&#34; name=&#34;bare init&#34; onmouseover=&#34;this.src=&#39;../../img/posts/creating-remote-git-repo/clone-new-remote.gif&#39;&#34; onmouseout=&#34;this.src=&#39;../../img/posts/creating-remote-git-repo/clone-new-remote.png&#39;&#34; style=&#34;max-width: 100%;&#34;/&gt;
&lt;/center&gt;
&lt;em&gt;Clone the Remote to a Local Dir&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;If the remote git repository is a totally new repository, it can be cloned down to a working directory on a developer machine fairly easily:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git clone user@hostname:REPONAME.git
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;pointing-local-repo-to-server&#34;&gt;Pointing Local Repo to Server&lt;/h3&gt;

&lt;p&gt;&lt;center&gt;
&lt;img src=&#34;../../img/posts/creating-remote-git-repo/point-to-new-remote.png&#34; name=&#34;bare init&#34; onmouseover=&#34;this.src=&#39;../../img/posts/creating-remote-git-repo/point-to-new-remote.gif&#39;&#34; onmouseout=&#34;this.src=&#39;../../img/posts/creating-remote-git-repo/point-to-new-remote.png&#39;&#34; style=&#34;max-width: 100%;&#34;/&gt;
&lt;/center&gt;
&lt;em&gt;Pointing a working repo to the new remote&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;However, I already had an existing working repository that I wanted to sync with the new remote shared repo. With the remote repo initialized, I wanted to point my existing git repository on the local machine to it. To do this, enter the directory of the git repository, and edit the config the (&lt;code&gt;.git/config&lt;/code&gt;). To redirect the repo to point to the new remote, edit the &lt;code&gt;url&lt;/code&gt; line to the location of the repo:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;username@hostname:reponame&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cd Server-Node-Files
vim ./git/config
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;After pointing to the new remote, feel free to push the content to it: (Only push everything (*) if it is desired)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git add *
git commit -m &amp;quot;First push to new Remote&amp;quot;
git push origin master
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And that&amp;rsquo;s it. Enjoy spinning up and using your own personal git repositories!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Refreshing my i3 setup with i3blocks</title>
      <link>http://ryan.himmelwright.net/post/started-using-i3blocks/</link>
      <pubDate>Thu, 22 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>http://ryan.himmelwright.net/post/started-using-i3blocks/</guid>
      <description>&lt;p&gt;The last couple of weeks I have shifted back to using the i3 window mangers. When I fired it up, my fingers danced across the keyboard, remembering all of the personalized keybindings I have cultivated in my i3 configuration over the years. It is a simple, beautiful setup&amp;hellip; well, beautiful minus one of the components. My i3status bar was looking rather bland and dated, especially compared some of the i3 setups posted by all the cool kids over at &lt;a href=&#34;https://www.reddit.com/r/unixporn/&#34;&gt;/r/unixporn&lt;/a&gt;. I decided it was time for a refresh.&lt;/p&gt;

&lt;h2 id=&#34;i3status&#34;&gt;i3status&lt;/h2&gt;

&lt;p&gt;&lt;img alt=&#34;One of my simple i3status setups&#34; src=&#34;../../img/posts/starting-i3/i3status.png&#34; style=&#34;max-width: 100%;&#34;/&gt;
&lt;div id=&#34;caption&#34;&gt;One of my simple i3status setups&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;When I first configured i3 several years ago, I used i3status because it was easy to use with i3 and did everything by default. Over time, I learned how to create and modify &lt;a href=&#34;https://github.com/himmAllRight/dotfiles/blob/master/i3/.config/i3/i3status.conf&#34;&gt;my own .i3status.conf&lt;/a&gt; so that I could get it to play nice with un-standerd configurations (ex: &lt;code&gt;/Data&lt;/code&gt; partitions and such). While i3status served me well for many years, using the same-old setup has become boring. I started noticing several other nice looking status bar tools being used in i3 setups, and wanted to try them out.&lt;/p&gt;

&lt;h2 id=&#34;polybar&#34;&gt;Polybar&lt;/h2&gt;

&lt;p&gt;&lt;img alt=&#34;The example polybar&#34; src=&#34;../../img/posts/starting-i3/polybar.png&#34; style=&#34;max-width: 100%;&#34;/&gt;
&lt;div id=&#34;caption&#34;&gt;The example polybar&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;The first bar I saw and tried was &lt;a href=&#34;https://github.com/jaagr/polybar&#34;&gt;polybar&lt;/a&gt;. I started with it because some of the examples look awesome. It looks very modern and has an infinite number of features. I set it up and was able to use the example bar just fine. However, when I started to customize my own, I started to run into a few issues. The biggest issue was polybar not detecting my work-space names, along with other elements. Additionally, due to the support for several window managers, the example configuration file seemed cluttered, and I was never sure what I could edit, and what I should delete. After some frustration, I decided put it aside for now. I might come back to it one day when I&amp;rsquo;m bored.&lt;/p&gt;

&lt;h2 id=&#34;i3blocks&#34;&gt;i3blocks&lt;/h2&gt;

&lt;p&gt;Next, I learned of &lt;a href=&#34;https://github.com/vivien/i3blocks&#34;&gt;i3blocks&lt;/a&gt;. It appeared to have everything I wanted in a status bar, yet remained simple, respecting the &lt;a href=&#34;https://i3wm.org/docs/i3bar-protocol.html&#34;&gt;i3bar protocol&lt;/a&gt;. So I gave it a whirl.&lt;/p&gt;

&lt;h3 id=&#34;downloading-from-the-repos&#34;&gt;Downloading from the Repos&lt;/h3&gt;

&lt;p&gt;Just like installing any other package on Linux, I decided to first check to see it it was in the Solus Repos:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo eopkg sr i3block
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;It was. So, I installed it (&lt;code&gt;sudo eopkg it i3blocks&lt;/code&gt;) and started learning how to setup my configuration.&lt;/p&gt;

&lt;h3 id=&#34;fonts&#34;&gt;Fonts&lt;/h3&gt;

&lt;p&gt;&lt;img alt=&#34;A Very Small Sampling of the Awesome Fonts&#34; src=&#34;../../img/posts/starting-i3/awesome-font.png&#34; style=&#34;max-width: 100%;&#34;/&gt;
&lt;div id=&#34;caption&#34;&gt;A &lt;em&gt;Very Small&lt;/em&gt; Sampling of the Awesome Fonts&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;The first hurdle I came across when first launching i3blocks was that I did not have all the fonts used in the default configuration installed. I temporarily removed the special fonts from the config, just so I could check that everything was working. But what&amp;rsquo;s the fun in that? One of the biggest reasons I wanted to redo my bar was to have cool modern icon fonts! So, I found the &lt;a href=&#34;http://fontawesome.io/&#34;&gt;font awesome&lt;/a&gt; package in the Solus repos and installed it.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo eopkg it font-awesome-ttf
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;With the awesome fonts at my disposal, I had a plethora of icons to use. So I went through and picked out icons for each of the work-space tabs and status markers.&lt;/p&gt;

&lt;h3 id=&#34;finding-git-repos&#34;&gt;Finding Git Repos&lt;/h3&gt;

&lt;p&gt;&lt;img alt=&#34;Example of Modules in new i3-block repo&#34; src=&#34;../../img/posts/starting-i3/i3block-new-repo-examples.png&#34; style=&#34;max-width: 100%;&#34;/&gt;
&lt;div id=&#34;caption&#34;&gt;Example of Modules in new i3-block repo&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;While researching how to configure i3blocks, I started encountering several different GitHub repos and forks of the project. Some forks seemed to have additional modules that my repo version didn&amp;rsquo;t. I downloaded and built &lt;a href=&#34;https://github.com/Anachron/i3blocks&#34;&gt;this one&lt;/a&gt; to try out. I then configured i3 to point to the new build instead, and got started setting up my own blocks.&lt;/p&gt;

&lt;h3 id=&#34;forking-my-own-for-solus-tweaks&#34;&gt;Forking my own for Solus Tweaks&lt;/h3&gt;

&lt;p&gt;As I was configuring the individual blocks, I noticed that many of them didn&amp;rsquo;t work by default on my computers. I dug deeper by opening up and peeking at the actual bash scripts blocks refer to. I noticed that many of them were trying to query data from applications that are &lt;em&gt;not&lt;/em&gt; used in Solus. For example, the &lt;code&gt;battery&lt;/code&gt; block didn&amp;rsquo;t work for me because it relied on &lt;code&gt;acpi&lt;/code&gt;, which, while often used in Arch Linux for battery information (I use it myself when on arch) is not packaged in Solus. Instead, Solus relies on &lt;code&gt;upower&lt;/code&gt;. To fix my issues, I cobbled together my own &lt;code&gt;battery&lt;/code&gt; bash script, that queried battery information using &lt;code&gt;upower&lt;/code&gt; instead. Note, the &lt;code&gt;BATTERY_ICON&lt;/code&gt; uses the battery fonts (which likely won&amp;rsquo;t show in the browser). Unless it is charging&amp;hellip; then it uses a lightning bolt :) .&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#!/bin/bash

BATTERY=0
BATTERY_STATE=$(echo &amp;quot;${BATTERY_INFO}&amp;quot; | upower -i $(upower -e | grep &#39;BAT&#39;) | grep -E &amp;quot;state|to\ full&amp;quot; | awk &#39;{print $2}&#39;)
BATTERY_POWER=$(echo &amp;quot;${BATTERY_INFO}&amp;quot; | upower -i $(upower -e | grep &#39;BAT&#39;) | grep -E &amp;quot;percentage&amp;quot; | awk &#39;{print $2}&#39; | tr -d &#39;%&#39;)
URGENT_VALUE=10

if [[ &amp;quot;${BATTERY_POWER}&amp;quot; -gt 87 ]]; then
    BATTERY_ICON=&amp;quot;&amp;quot;
elif [[ &amp;quot;${BATTERY_POWER}&amp;quot; -gt 63 ]]; then
     BATTERY_ICON=&amp;quot;&amp;quot;
elif [[ &amp;quot;${BATTERY_POWER}&amp;quot; -gt 38 ]]; then
     BATTERY_ICON=&amp;quot;&amp;quot;
elif [[ &amp;quot;${BATTERY_POWER}&amp;quot; -gt 13 ]]; then
     BATTERY_ICON=&amp;quot;&amp;quot;
elif [[ &amp;quot;${BATTERY_POWER}&amp;quot; -le 13 ]]; then
     BATTERY_ICON=&amp;quot;&amp;quot;
else
    BATTERY_ICON=&amp;quot;&amp;quot;
fi


if [[ &amp;quot;${BATTERY_STATE}&amp;quot; = &amp;quot;discharging&amp;quot; ]]; then
    echo &amp;quot;${BATTERY_ICON} ${BATTERY_POWER}%&amp;quot;
    echo &amp;quot;${BATTERY_ICON} ${BATTERY_POWER}%&amp;quot;
    echo &amp;quot;&amp;quot;
else
    echo &amp;quot; ${BATTERY_POWER}%&amp;quot;
    echo &amp;quot; ${BATTERY_POWER}%&amp;quot;
    echo &amp;quot;&amp;quot;
fi

if [[ &amp;quot;${BATTERY_POWER}&amp;quot; -le &amp;quot;${URGENT_VALUE}&amp;quot; ]]; then
  exit 33
fi
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Over the past few weeks, it seems to work well enough. As I continued to &lt;em&gt;tweak&lt;/em&gt;, or downright &lt;em&gt;create&lt;/em&gt; blocks to work well in Solus, I eventually decided that it might be a good idea to just &lt;a href=&#34;https://github.com/himmAllRight/i3blocks&#34;&gt;create my own fork&lt;/a&gt; of the repo. This way, I can have my own i3blocks repo that works well with Solus. I noticed that the implementation of &lt;code&gt;i3blocks&lt;/code&gt; found in the Solus repos is also using non-Solus items for it&amp;rsquo;s scripts (ex: acpi for the battery). Maybe one of these days I&amp;rsquo;ll jump into irc and see how people feel about swapping in mine instead (or at least one that works better in Solus)&amp;hellip;&lt;/p&gt;

&lt;h3 id=&#34;color-update-for-i3-rofi&#34;&gt;Color Update for i3 &amp;amp; rofi&lt;/h3&gt;

&lt;p&gt;&lt;img alt=&#34;New Color Scheme for rofi launcher&#34; src=&#34;../../img/posts/starting-i3/rofi-run.png&#34; style=&#34;max-width: 100%;&#34;/&gt;
&lt;div id=&#34;caption&#34;&gt;New color scheme for rofi launcher&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;When I started using i3 several years ago, I used &lt;a href=&#34;http://tools.suckless.org/dmenu/&#34;&gt;dmenu&lt;/a&gt; as my launcher (it&amp;rsquo;s the launcher used in &lt;a href=&#34;http://dwm.suckless.org/&#34;&gt;dwm&lt;/a&gt;, another tiling window manager I used to use). I eventually switched to rofi after seeing it used in some very nice window manager setups (sound familiar?). However, I always used the plain default theme and never bothered to improve it. With all the work I did making i3bars look nice, I thought I should at least make rofi match. Making the color theme wasn&amp;rsquo;t nearly as hard as I anticipated it to be. That&amp;rsquo;s mostly because I found and used the rofi theme generator.&lt;/p&gt;

&lt;p&gt;&lt;center&gt;
&lt;img alt=&#34;New rofi window switcher&#34; src=&#34;../../img/posts/starting-i3/rofi-window.png&#34; style=&#34;max-width: 100%;&#34;/&gt;
&lt;/center&gt;
&lt;div id=&#34;caption&#34;&gt;Newly configured rofi window switcher&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;While touching up rofi, I learned it can also switch through already opened windows (Previously, I  only used it to launch new programs). I really liked that in my new i3 setup, it also displayed the work-spaces, icon font and all. I immediately bound it to my Super+Tab key for easy use.&lt;/p&gt;

&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;&lt;video style=&#34;max-width:100%;&#34; controls&gt;
  &lt;source src=&#34;../../img/posts/starting-i3/i3-gaps-demo.mp4&#34; type=&#34;video/mp4&#34;&gt;
  &lt;source src=&#34;movie.ogg&#34; type=&#34;video/ogg&#34;&gt;
Your browser does not support the video tag.
&lt;/video&gt;
&lt;div id=&#34;caption&#34;&gt;Little video demoing my new i3gaps setup with i3blocks&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;Thus far, I have been very satisfied with my current i3 setup. Replacing i3status with i3blocks, combined with adding small improvements, for example, the awesome fonts, really helped to enhance the look and feel of my i3 configuration. Additionally, ROFI much better now that it matches everything.&lt;/p&gt;

&lt;p&gt;I am glad to be using i3 again. It is so efficient to use and I love flying around the work-spaces and windows. It is particularly useful on my x230&amp;rsquo;s 12&amp;rdquo; screen, as it utilizes all of the limited resolution. If you have never used a tiling window manager in Linux, I strongly suggest you give it a shot. It can take some time to get up and going the first time, but once a custom configuration is built, it always feels like home.&lt;/p&gt;

&lt;p&gt;To show off my new i3 setup with i3bars, I&amp;rsquo;ve posted a small video at the top of this section. Enjoy!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Exporting Proxmox VMs</title>
      <link>http://ryan.himmelwright.net/post/exporting-proxmox-vms/</link>
      <pubDate>Fri, 16 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>http://ryan.himmelwright.net/post/exporting-proxmox-vms/</guid>
      <description>&lt;p&gt;For a long time I have been thinking about replacing my server&amp;rsquo;s proxmox install with vanilla Debian or CentOS, mostly for learning purposes. I would first setup zfs on the new system and import my existing data pools. Then, I would use either a system like ovrit or just plain kvm/lxc to run my VMs and containers. In order to do this though&amp;hellip; I have to first figure out how export my containers and VMs running in Proxmox. As it turns out&amp;hellip; exporting the VMs wasn&amp;rsquo;t very hard&amp;hellip;&lt;/p&gt;

&lt;h2 id=&#34;exporting-proxmox-vm-disk&#34;&gt;Exporting Proxmox VM Disk&lt;/h2&gt;

&lt;p&gt;&lt;center&gt;
&lt;img alt=&#34;Proxmox logo&#34; src=&#34;../../img/posts/exporting-proxmox-vms/proxmox-logo.png&#34; style=&#34;max-width: 100%;&#34;/&gt;
&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;My Proxmox VMs are setup on an LVM virtual group, with each virtual drive being a lvm volume passed to the VM. So, I wanted to be able to extract these disks to something I could more easily transfer. I ended up converting the lvm volumes to qcow2 images because it was easy and I&amp;rsquo;ve actually experienced okay performance with qcow2 on my workstations. Additionally, qcow2 being a single file, is easy to move around and I can always convert them to something else on the final system. To export one of the VMs, I ran the command:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;qemu-img convert -O qcow2 /dev/pve/vm-108-disk-1 /Data/freebsd-vm.qcow2
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;That was it. It took a few minutes to finish, but honestly that is all I had to do (I&amp;rsquo;m sure I should of taken a snapshot or something then copy that, but this seemed to work fine). When it completed, I copied the image down to my desktop and decided to test it out with virt-manager.&lt;/p&gt;

&lt;h2 id=&#34;importing-the-image-to-virt-manager&#34;&gt;Importing the image to Virt-Manager&lt;/h2&gt;

&lt;p&gt;I opened up virt-manager and selected the button to create a new VM. At the first prompt, instead of selecting my usual &amp;ldquo;Local install media (ISO image or CDROM)&amp;rdquo; option, I choose to &amp;ldquo;Import an existing disk image&amp;rdquo;.&lt;/p&gt;

&lt;p&gt;&lt;center&gt;
&lt;img alt=&#34;import image&#34; src=&#34;../../img/posts/exporting-proxmox-vms/import-image.png&#34; style=&#34;max-width: 100%;&#34;/&gt;
&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;At the second menu, I opened up the browse menu to see my already configured locations. From there, I found where I had saved the converted qcow2 image, and selected it.&lt;/p&gt;

&lt;p&gt;&lt;center&gt;
&lt;img alt=&#34;select qcow2 image&#34; src=&#34;../../img/posts/exporting-proxmox-vms/select-qcow2-image.png&#34; style=&#34;max-width: 100%;&#34;/&gt;
&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;Next, I continued setting up the virtual specs (CPU, RAM, etc.) for the machine just as I would with any other VM setup. When I was done, I started the VM and FreeBSD booted right up. I logged in and compared the installed applications and files with the still running proxmox VM. They were identical.&lt;/p&gt;

&lt;p&gt;That&amp;rsquo;s all I really have for this post. It was extremely simple to export the VMs. I know I&amp;rsquo;m not fully done yet and still have to import the VMs to the final system, but I&amp;rsquo;ll save that for a later post. Right now&amp;hellip; I have quite a few VM images to convert, so I might as well get started.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Setting Up My Pi Cluster</title>
      <link>http://ryan.himmelwright.net/post/setting-up-the-pi-cluster/</link>
      <pubDate>Fri, 05 May 2017 00:00:00 +0000</pubDate>
      
      <guid>http://ryan.himmelwright.net/post/setting-up-the-pi-cluster/</guid>
      <description>&lt;p&gt;I have a Raspberry Pi 2, a Raspberry Pi 3, and a Banana Pi. A while ago, I constructed a small tower to house my pi devices. Since then, I have additionally acquired a power source, and some CAT6 cable to connect them all up to a switch. I hope to use the Pis as a mini clustered environment, where I can learn (and play) with some of the &amp;ldquo;Devops&amp;rdquo; technologies/techniques out there. This post will briefly explain the initial setup of &lt;a href=&#34;../../pages/homelab/#cluster&#34;&gt;my cluster&lt;/a&gt;.&lt;/p&gt;

&lt;h1 id=&#34;setting-up-the-os-images&#34;&gt;Setting up the OS Images&lt;/h1&gt;

&lt;p&gt;Before doing anything with the hardware, I had to setup the pi &amp;ldquo;hard drives&amp;rdquo; (micro SD cards), so they could boot.&lt;/p&gt;

&lt;h3 id=&#34;ubuntu-for-raspberry-pi&#34;&gt;Ubuntu for Raspberry PI&lt;/h3&gt;

&lt;p&gt;&lt;img src=&#34;../../img/posts/Setting-Up-Pi-Cluster/ubuntu-logo.jpg&#34; style=&#34;max-width: 50%; height: auto; float: right; margin: 0px 2px 2px 2px;&#34;/&gt;&lt;/p&gt;

&lt;p&gt;After mucking around with Rapsbian and Hypriot one Sunday, I decided to just go with a plain Ubuntu image for the Raspberry Pis. I don&amp;rsquo;t have anything against these specific OSes, but I am mostly setting up this cluster to simulate what I would do on a &amp;ldquo;real&amp;rdquo; system. For me, that often means using a straight OS like Ubuntu.&lt;/p&gt;

&lt;p&gt;Luckily, Canonical makes special &lt;a href=&#34;https://wiki.ubuntu.com/ARM/RaspberryPi&#34;&gt;Ubuntu ARM images&lt;/a&gt;, specifically for the Raspberry Pi. I download the 16.04 server version for both the raspberry pi 2 and &lt;a href=&#34;http://www.finnie.org/software/raspberrypi/ubuntu-rpi3/ubuntu-16.04-preinstalled-server-armhf+raspi3.img.xz&#34;&gt;raspberry pi 3&lt;/a&gt;. The process to write these images to the microSD card differs slightly from ones I&amp;rsquo;ve used in the past. It still uses &lt;code&gt;dd&lt;/code&gt;, but the image is first piped through &lt;code&gt;xzcat&lt;/code&gt;, as such:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;xzcat ubuntu-16.04.2-preinstalled-server-armhf+raspi2.img.xz | sudo dd bs=4M of=/dev/mmcblk0
xzcat ubuntu-16.04-preinstalled-server-armhf+raspi3.img.xz   | sudo dd bs=4M of=/dev/mmcblk0
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;armbian&#34;&gt;Armbian&lt;/h3&gt;

&lt;p&gt;The one issue that I have with the Banana Pi compared to the Raspberry Pi, is that it is commonly not supported. It can be hard to find a bananna pi specific image, and the raspberry pi ones usually do not work. For example, while Canonical linked to Raspberry Pi images, it did not mention the banana pie.  This is where &lt;a href=&#34;https://www.armbian.com/&#34;&gt;Armbian&lt;/a&gt; comes in.&lt;/p&gt;

&lt;p&gt;Armbian is a lightweight Debian and Ubuntu based distribution, that provides builds for various ARM devices. Thus the name, &lt;em&gt;ARM-bian&lt;/em&gt;. One of these many supported devices&amp;hellip; is the &lt;a href=&#34;https://www.armbian.com/banana-pi/&#34;&gt;banana pi&lt;/a&gt;. I downloaded the Ubuntu 16.04 Server flavor of Armbian for the Banana PI, and copied it to my micro SD card with the command:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo dd if=Armbian_5.25_Bananapi_Ubuntu_xenial_next_4.9.7.img  of=/dev/mmcblk0 bs=1M
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;hardware-setup&#34;&gt;Hardware Setup&lt;/h3&gt;

&lt;p&gt;&lt;img src=&#34;../../img/posts/Setting-Up-Pi-Cluster/pi-cluster.png&#34; style=&#34;max-width: 40%; float: right; margin: 10px 10px 5px 10px;&#34;/&gt;&lt;/p&gt;

&lt;p&gt;After the operating system images have been copied the SD cards, the hardware can be setup. I started by inserting the microSD cards into the PIs, being careful to use the correct card with each device. Unlike the Raspberry PIs, the Bananna PI uses a normal SD card instead of a microSD, so I just left it in the converter card I used to connect it to my computer when imaging.&lt;/p&gt;

&lt;p&gt;After adding the &amp;ldquo;hard drives&amp;rdquo;, I connected each PI to my network switch, via Ethernet. In the future, I would like to put the cluster on it&amp;rsquo;s own mini (managed?) switch so that I can have the nodes on their own private network, but connected to my main network. For now, this works.&lt;/p&gt;

&lt;p&gt;Lastly, plug in the power connectors. Pi devices can be very finicky when not properly powered, so it is a good idea to use an capable USB charging device. I have had trouble in the past with my devices not working correctly due to insufficient power (especially the bpi). I knew this problem would be an even more pronounced with the cluster because I planned to connect a HD to the bpi with a SATA connector. So, I picked up an &lt;a href=&#34;https://www.amazon.com/Anker-Charger-PowerPort-Multi-Port-Samsung/dp/B00VH8ZW02/ref=sr_1_1?ie=UTF8&amp;amp;qid=1493860165&amp;amp;sr=8-1&amp;amp;keywords=Anker+power+port+5&#34;&gt;Anker Power Port 5&lt;/a&gt; and it has been working great.&lt;/p&gt;

&lt;p&gt;Lastly, two nice features of the banana pi is that it has a 1 GB ethernet port, &lt;em&gt;and&lt;/em&gt; a SATA connector with power. So, to utilize this functionality, and get the most out of the bpi, I ordered &lt;a href=&#34;https://www.amazon.com/JBtek-Connectors-Banana-Supply-Terminals/dp/B00ZP0L0VS/ref=sr_1_1?ie=UTF8&amp;amp;qid=1493860481&amp;amp;sr=8-1&amp;amp;keywords=banana+pi+sata&#34;&gt;the appropriate SATA connector&lt;/a&gt; from amazon for a few bucks. When it arrived, I connected it to the SATA and SATA power ports on the pi, and then to an old 300GB laptop HD I had laying around (it was the drive that came with &lt;a href=&#34;../../post/my-new-used-x230/&#34;&gt;my x230&lt;/a&gt;). After the drive was connected, running &lt;code&gt;lsblk&lt;/code&gt; on the bpi automatically showed a &lt;code&gt;/dev/sda&lt;/code&gt; device, in addition to the typical &lt;code&gt;mmcblk0&lt;/code&gt; microSD device. I  mounted the drive to a folder using the following command to test it out:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo mount /dev/sda1 Data
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;With the hard drive mounted, I was able to browse its contents and see of all the crap still on it. The combination of the GB network and large HD makes the bpi a great little storage node, which is how I intend to use it.&lt;/p&gt;

&lt;h3 id=&#34;bootup-and-connecting-via-ssh&#34;&gt;Bootup and Connecting via SSH&lt;/h3&gt;

&lt;p&gt;When the Pis are plugged in, they should automatically boot up. In order to connect to them, I found their IPs from my main computer using &lt;code&gt;nmap&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo nmap -sP 192.168.1.0/24
&lt;/code&gt;&lt;/pre&gt;

&lt;div id=&#34;caption&#34;&gt;This command may differ depending on your network setup&lt;/div&gt;

&lt;p&gt;The Raspberry PIs have &lt;code&gt;(Raspberry Pi Foundation)&lt;/code&gt; in the MAC address lines, and my Banana Pi had &lt;code&gt;bananapi&lt;/code&gt; in the host name. Once I had the IP addresses, I could ssh in using the default usernames and passwords for the images (the user/pass should be listed on the sites). After logging in for the first time, each PI prompted me to change the password (as it should).&lt;/p&gt;

&lt;h3 id=&#34;adding-a-sudo-user&#34;&gt;Adding A Sudo User&lt;/h3&gt;

&lt;p&gt;When connecting to remote devices, I don&amp;rsquo;t like to be logged in as root, so the first thing I did was setup my user account with sudo privileges, on the two Raspberry Pis (Armbian actually prompted me through these steps the first time I logged into the Banana pi. Kudos to them).&lt;/p&gt;

&lt;p&gt;To add the user, set it&amp;rsquo;s password (important), and then add it to the sudo group, I used the following commands:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;useradd -m -s /bin/bash ryan
passwd ryan
usermod -a -G sudo ryan
&lt;/code&gt;&lt;/pre&gt;

&lt;div id=&#34;caption&#34;&gt;Yes, I know I can add the user to the sudo group in the `useradd` command, but I prefer to do it with `usermod`. Personal Preference.&lt;/div&gt;

&lt;p&gt;That&amp;rsquo;s it. At this point, all of my the PIs are minimally set up accessible. The next steps include updating packages, setting up ssh keys, and configuring &amp;hellip;. &lt;a href=&#34;https://www.ansible.com&#34;&gt;Ansible&lt;/a&gt;. But that will all be in the &lt;em&gt;next post&lt;/em&gt;. See you then!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ZFS Snapshot Backups to an External Drive with LUKS</title>
      <link>http://ryan.himmelwright.net/post/zfs-backups-to-luks-external/</link>
      <pubDate>Thu, 20 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>http://ryan.himmelwright.net/post/zfs-backups-to-luks-external/</guid>
      <description>&lt;p&gt;I have been using &lt;a href=&#34;https://en.wikipedia.org/wiki/ZFS&#34;&gt;ZFS&lt;/a&gt; data pools to store data on &lt;a href=&#34;../../pages/homelab/#ninetales&#34;&gt;my server&lt;/a&gt; for some time now. As great as that is, I am ashamed to admit that I have not had a &lt;em&gt;true&lt;/em&gt; backup system in place (raid/mirrors are not backup). I have a backup solution that I have attempted in the past, but ran into an issue and let it drift to the side. That changes now. It&amp;rsquo;s time to revisit my solution, and complete it to the end.&lt;/p&gt;

&lt;p&gt;Currently, my server is configured with two main zfs mirrored pools. The first one, &lt;code&gt;Data&lt;/code&gt;, is built on 2 x 3TB hard drives, providing 2.72 TB of usable disk space. It contains all of my wife&amp;rsquo;s and my data, organized into sub-category pools (ex: &lt;code&gt;Data/Music&lt;/code&gt;, &lt;code&gt;Data/Pictures&lt;/code&gt;, &lt;code&gt;Data/ryan&lt;/code&gt;, etc). The second, &lt;code&gt;Backups&lt;/code&gt;, is built on the 2 x 1TB hard drives from my old desktop, creating a 928 GB usable pool . It stores the automatic backups of some of the VMs and LXC containers hosted on the server.&lt;/p&gt;

&lt;p&gt;Before I had my 3TB drives, I bought a 2TB external hard drive to backup the 1TB drives to. While it isn&amp;rsquo;t as large as the total usable space on my server, it is enough to store my data backups to, for the time being.&lt;/p&gt;

&lt;p&gt;My goal is to setup a zfs pool on the external drive, so I can use zfs&amp;rsquo;s send &amp;amp; receive functionality to send bi-weekly-ish incremental snapshots to it. When I am not running backups, I want to store the drive at an off-site location. With the drive being stored elsewhere, I want to ensure that the data is protected, so I will be encrypting the it using &lt;a href=&#34;https://en.wikipedia.org/wiki/Linux_Unified_Key_Setup&#34;&gt;LUKS&lt;/a&gt;, the Linux disk encryption software.&lt;/p&gt;

&lt;h3 id=&#34;setting-up-luks&#34;&gt;Setting up LUKS&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://gitlab.com/cryptsetup/cryptsetup/blob/master/README.md&#34;&gt;LUKS&lt;/a&gt; (Linux Unified Key Setup) is the standard for Linux disk encryption. I will use it to encrypt the external drive, and then present the LUKS mapper devices to ZFS as a block device. To do this, we need to first install &lt;code&gt;cryptsetup&lt;/code&gt; with &lt;code&gt;sudo apt-get install cryptsetup&lt;/code&gt; (Assuming you are on a Debian-based operating system). Once that is installed, we can use the &lt;code&gt;cryptsetup&lt;/code&gt; command to configure LUKS on the drive.&lt;/p&gt;

&lt;p&gt;The cryptsetup tool has a plethora of settings and options. After researching around, I decided to use options that the author of &lt;a href=&#34;http://www.makethenmakeinstall.com/2014/10/zfs-on-linux-with-luks-encrypted-disks/&#34;&gt;this post&lt;/a&gt; used, because they were doing something very similar to what I am trying. I configured LUKS on my external drive using the following command:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cryptsetup luksFormat --cipher aes-xts-plain64 --key-size 512 --iter-time 10000 --use-random -y /dev/sdf
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;--cipher aex-xts-plain64&lt;/code&gt;and &lt;code&gt;--key-size 512&lt;/code&gt; refer to the algorithm and key size used to encrypt the data. In general, the larger the key, the harder the encryption is to crack.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;--iter-time 10000&lt;/code&gt; and &lt;code&gt;--use-random -y&lt;/code&gt; are additional precautions to make it more difficult to crack the encryption. The &lt;code&gt;--iter-time 10000&lt;/code&gt; means it will spend at least 10 seconds processing the passphrase each time the disk is unlocked. This makes it much harder to brute-force the passphrase.&lt;/p&gt;

&lt;p&gt;Once the device is encrypted, we need to unlock it and map it as a device. This is done using the command:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo cryptsetup luksOpen /dev/sdf sdf-enc
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;/dev/sdf&lt;/code&gt; is the external disk, and &lt;code&gt;sdf-enc&lt;/code&gt; is whatever you want to name the unlocked device. This is the name that what will be used when referring to the unlocked device. With the drive is encrypted and unlocked, it&amp;rsquo;s time for some ZFS magic.&lt;/p&gt;

&lt;h3 id=&#34;creating-a-zfs-pool&#34;&gt;Creating a ZFS Pool&lt;/h3&gt;

&lt;p&gt;I am creating a zpool using just my single external drive, so the setup is very basic. No mirrors, no zvols. A simple zpool is created with the simple command:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo zpool create externalBackup sdf-enc
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;That&amp;rsquo;s it.&lt;/p&gt;

&lt;h3 id=&#34;taking-base-snapshots&#34;&gt;Taking Base Snapshots&lt;/h3&gt;

&lt;p&gt;&lt;img alt=&#34;Taking a ZFS snapshot&#34; src=&#34;../../img/posts/ZFS-Backups-To-LUKS-External/snapshot.gif&#34; style=&#34;max-width: 100%;&#34;/&gt;
&lt;div id=&#34;caption&#34;&gt;Taking a ZFS snapshot&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;With a zpool initialized on the externalDrive, I can now send snapshots to it. To start, I created a base snapshot to send. Starting with the smaller pool, &lt;code&gt;/Backups&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo zfs snapshot -r Backups@VM-LXC-BackupBase
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This command creates a recursive snapshot of my &lt;code&gt;Backups&lt;/code&gt; zpool, named &lt;code&gt;VM-LXC-BackupBase&lt;/code&gt;. Making a base snapshot for my &lt;code&gt;/Data&lt;/code&gt; zpool is nearly the same:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo zfs snapshot -r Data/DataBackupBase
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;sending-the-base-snapshots&#34;&gt;Sending the Base Snapshots&lt;/h3&gt;

&lt;p&gt;After taking base snapshots of the zpools, I can transfer them to the external drive using the zfs &lt;code&gt;send&lt;/code&gt; and &lt;code&gt;recv&lt;/code&gt; commands. Again, starting with the &lt;code&gt;VM-LXC-BackupBase&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo zfs send Backups@VM-LXC-BackupBase | sudo zfs recv externalBackup/VM-LXC-BackupBase
&lt;/code&gt;&lt;/pre&gt;

&lt;div id=&#34;caption&#34;&gt;Looking back, I realized I named this poorly... The external zpool should be `/externalBackup/VM-LXC-Backup`, not `BackupBase`, that name is just for the first *snapshot*. Oh well.&lt;/div&gt;

&lt;p&gt;Now for the slightly harder pool, &lt;code&gt;/Data&lt;/code&gt;, with all of the sub zpools. The first time I attempted this, only the parent &lt;code&gt;Data&lt;/code&gt; snapshot was copied, but none of the children were (&lt;code&gt;Data/Music&lt;/code&gt;, &lt;code&gt;Data/Pictures&lt;/code&gt;, etc). After some digging around the docs and online I realized I was missing the &lt;code&gt;-R&lt;/code&gt; to my &lt;code&gt;zfs send&lt;/code&gt; command.  Also note, that when using the &lt;code&gt;-R&lt;/code&gt; flag, the snapshot name for the destination pool are not specified (because it is copying multiple). It will use the same snapshot names from the source pool.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo zfs send -R Data@DataBackupBase | sudo zfs recv externalBackup/DataBackup
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;incremental-backups&#34;&gt;Incremental Backups&lt;/h3&gt;

&lt;p&gt;Taking a snapshot of my data and sending it to an external drive is nice, but I don&amp;rsquo;t want to send all of the data each time I backup. Transferring can take a very long time, especially as my data pools continue to grow. I don&amp;rsquo;t want to sit around all day, listening to hard drives hum as my data transfers.&lt;/p&gt;

&lt;p&gt;&lt;center&gt;&lt;img alt=&#34;no time&#34; src=&#34;../../img/posts/ZFS-Backups-To-LUKS-External/aint-nobody-got-time-for-that.gif&#34; style=&#34;max-width: 100%;&#34;/&gt;&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;A useful feature of the zfs &lt;code&gt;send&lt;/code&gt; and &lt;code&gt;recv&lt;/code&gt; commands is the ability to send &lt;em&gt;incremental&lt;/em&gt; snapshots. This means when I want to update my backups, I can just send the &lt;em&gt;changes&lt;/em&gt; between the two snapshots. This is similar to &lt;a href=&#34;https://en.wikipedia.org/wiki/Diff_utility&#34;&gt;source code diffs&lt;/a&gt;, but for file systems.&lt;/p&gt;

&lt;p&gt;To send incremental snapshots, the &lt;code&gt;-i&lt;/code&gt; or &lt;code&gt;-I&lt;/code&gt; flag is used. The difference between the two is that the &lt;code&gt;-i&lt;/code&gt; flag will send the difference between the two snapshots listed, whereas &lt;code&gt;-I&lt;/code&gt; will send a series of snapshots between the two listed. For example, if I&amp;rsquo;ve taken several snapshots of my data (&lt;code&gt;A&lt;/code&gt;, &lt;code&gt;B&lt;/code&gt;, &lt;code&gt;C&lt;/code&gt;, and &lt;code&gt;D&lt;/code&gt;), but have neglected to copy them to the external drive since snapshot &lt;code&gt;A&lt;/code&gt;, I can use &lt;code&gt;-I A D&lt;/code&gt; in my &lt;code&gt;zfs send&lt;/code&gt; command, and all four of the snapshots will be sent to the external.&lt;/p&gt;

&lt;p&gt;To send an incremental update to my backup, I first created new snapshot for my pools (this time with a date):&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo zfs snapshot -r Backups@VM-LXC-Backup20170418
sudo zfs snapshot -r Data@DataBackup20170418
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Next, I sent the incremental changes between the base snapshots, and new ones I just made:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo zfs send -R -i Backups@VM-LXC-BackupBase Backups@VM-LXC-Backup20170418 | sudo zfs recv externalBackup/VM-LXC-BackupBase
sudo zfs send -R -i Data@DataBackupBase Data@DataBackup20170418 | sudo zfs recv externalBackup/DataBackup
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Notice that I specify &lt;em&gt;two&lt;/em&gt; snapshots in the send command, to define the range of differences to send.&lt;/p&gt;

&lt;h4 id=&#34;a-minor-issue&#34;&gt;A Minor Issue&lt;/h4&gt;

&lt;p&gt;The first time I tried sending an incremental backup, I encountered a minor issue. ZFS gave me an error stating that my destination had been changed since last snapshot (meaning the base snapshot on the externalBackup pool). I looked this up online and it seems that sometimes, just looking around the pool can change files. Some people recommended setting the destination pool to read-only, so I did that to my backup pool with:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo zfs set readonly=on externalBackup
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I am not sure if this will eliminate this problem in the future, but I guess I will find out.&lt;/p&gt;

&lt;p&gt;I still had the error when sending, so I added the &lt;code&gt;-F&lt;/code&gt; flag to the &lt;code&gt;zfs recv&lt;/code&gt; command. I am not sure if this was the &lt;em&gt;best&lt;/em&gt; solution, but it seemed to be okay. I also thought about rolling back to the snapshot, and then copying which is likely a safer method (if you don&amp;rsquo;t mind losing the &amp;ldquo;changes&amp;rdquo; on the destination pool).&lt;/p&gt;

&lt;h3 id=&#34;safely-closing-and-removing-the-external-drive&#34;&gt;Safely Closing and Removing the External Drive&lt;/h3&gt;

&lt;p&gt;&lt;img alt=&#34;Exporting the zpool&#34; src=&#34;../../img/posts/ZFS-Backups-To-LUKS-External/export-drive.gif&#34; style=&#34;max-width: 100%;&#34;/&gt;
&lt;div id=&#34;caption&#34;&gt;Exporting the zpool and closing the LUKS device&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;When the incremental backups finishes transferring, the external drive can be removed. The sequence of steps to do this safely are 1) export the zpool 2) close the LUKS device, and 3) unplug the drive. To export the zpool and close the LUKS device I used the commands:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo zpool export externalBackup
sudo cryptSetup luksClose sdf-enc
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;After that, I was able to unplug the external drive, and store it in a safe location, until I need to backup data to it again.&lt;/p&gt;

&lt;h3 id=&#34;opening-and-importing-zpool-for-recurring-backups&#34;&gt;Opening and Importing zpool for Recurring Backups&lt;/h3&gt;

&lt;p&gt;Lastly, there are a few steps to take when reconnecting the drive to run a daily/monthly/weekly (whatever) backup. First, the drive must be decrypted and mounted, using the same command as above:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo cryptSetup luksOpen /dev/sdf sdf-enc
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Next, the zpool on the drive must be imported so that it can be used from the main system. Like exporting the pool, the command is simple:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo zpool import externalBackup
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;That&amp;rsquo;s it. Now the steps detailing taking snapshots and sending incremental backups can be repeated.&lt;/p&gt;

&lt;h3 id=&#34;summary&#34;&gt;Summary&lt;/h3&gt;

&lt;p&gt;I am happy with this solution for now. It allows me to leverage ZFS a bit more, and become more familiar with it. The biggest issue I will likely face is space on the external drive. Luckily, ZFS makes it easy to delete old snapshots. In the future, I might also consider using an online backup solution like &lt;a href=&#34;https://www.tarsnap.com/&#34;&gt;Tarsnap&lt;/a&gt;, but I need to find a cost-effective one first. I&amp;rsquo;ll be sure to update as I continue to expand my backup solution.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Linux from Scratch - SBUs and Binutils</title>
      <link>http://ryan.himmelwright.net/post/lfs-sbus-and-binutils/</link>
      <pubDate>Tue, 04 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>http://ryan.himmelwright.net/post/lfs-sbus-and-binutils/</guid>
      <description>

&lt;p&gt;Well, after all of the preparation, we are ready to start compiling packages. This post cover compiling all the packages, but it will detail the first build of &lt;a href=&#34;https://www.gnu.org/software/binutils/&#34;&gt;Binutils&lt;/a&gt;, which is arguably the most important package to compile. Why is Binutils so crucial? It determines the SBU time for your build system. What&amp;rsquo;s an SBU? Read on to find out!&lt;/p&gt;

&lt;!-- more --&gt;

&lt;h3 id=&#34;sbus&#34;&gt;SBUs&lt;/h3&gt;

&lt;p&gt;&lt;img alt=&#34;SBU Table&#34; src=&#34;../../img/posts/LFS-SBUs-Binutils/SBU-table.png&#34; style=&#34;max-width: 100%;&#34;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;A table of package SBUs and their predicted build time&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;When completing LFS, people commonly want to know how long it will take to compile each package. Unfortunately, build times are very much dependent on the power and configuration of the system the packages are being compiled on. Some packages may take a few minutes on a powerful workstation, but hours on an aged laptop. While it cannot be said how long a specific build will take on any device, we can normalize how long each package build takes comparatively to each other. This normalization is done using Stand Build Units, or SBUs.&lt;/p&gt;

&lt;p&gt;A SBU is the unit of time measurement it takes to make and install a standard package. Each package in the LFS book has a SBU value, so that build times can be gauged. So, if The first package to be constructed in the book (and in this post), is Binutils, so that is the package which SBUs are normalized to. For example, if it took 10 minutes to build Binutils on your machine, then 1 SBU = 10 minutes for that machine. This means a 4.5 SBU package can be expected to take ~45 minutes to build.&lt;/p&gt;

&lt;h4 id=&#34;sbu-accuracy&#34;&gt;SBU Accuracy&lt;/h4&gt;

&lt;p&gt;SBUs are not completely accurate, and should be used as an estimate at best. Due to the many factors that may differ between setups, SBUs can be off by dozens of minutes in worst-case scenarios. Certain make options might also throw the system off.&lt;/p&gt;

&lt;p&gt;For example, systems with multiple cores can run &amp;ldquo;parallel make&amp;rdquo; using the &lt;code&gt;-j&lt;/code&gt; make-flag, as in &lt;code&gt;make -j4&lt;/code&gt;. This tell &lt;em&gt;make&lt;/em&gt; to compiled the package using multiple cores. Parallel compilation has the potential to speed up the build process significantly. However, due to how compilation jobs are divided for parallel builds, SBUs are even harder to predict and may be even more sporadic. Just remember that and don&amp;rsquo;t expect too much SBU accuracy when using &lt;code&gt;make -j&lt;/code&gt;. Also, if you ever run into a problem during a build step, it is a good idea to first retry with a single processor build. If this does not fix the issue itself, the error message can at least be more easily analyzed.&lt;/p&gt;

&lt;h3 id=&#34;my-encountered-issues-with-tar&#34;&gt;My Encountered Issues with tar&amp;hellip;&lt;/h3&gt;

&lt;p&gt;&lt;img alt=&#34;Tar issues&#34; src=&#34;../../img/posts/LFS-SBUs-Binutils/tar-error.png&#34; style=&#34;max-width: 100%;&#34;/&gt;&lt;/p&gt;

&lt;p&gt;The first time I attempted to make binutils, I encountered a few errors. The gist of it was that I was not able untar the package correctly, at least from the &lt;em&gt;lfs&lt;/em&gt; user. Everything worked fine from the &lt;em&gt;root&lt;/em&gt; or even &lt;em&gt;ryan&lt;/em&gt; user accounts, but running tar on &lt;em&gt;lfs&lt;/em&gt; returned the following error:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;tar (child): bzip2: Cannot exec: Too many levels of symbolic links
tar (child): Error is not recoverable: exiting now
tar: Child returned status 2
tar: Error is not recoverable: exiting now
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I searched around but much of the initial advice didn&amp;rsquo;t help my problem. It often indicated that my /usr/bin/bzip2 might be a symlink and should be altered. That wasn&amp;rsquo;t the case. Then tried something that illuminated the issue: I removed the &lt;code&gt;/tools/bin&lt;/code&gt; from the begging of the &lt;code&gt;path&lt;/code&gt; variable (defined in the &lt;em&gt;lfs&lt;/em&gt; &lt;code&gt;.bashrc&lt;/code&gt; file). That temporarily fixed the issues. So I knew the problem was related to the symlink I setup in &lt;a href=&#34;../../post/LFS-Final-Preparation-Steps&#34;&gt;the previous LFS post&lt;/a&gt;, specifically the &lt;code&gt;ln -sv $LFS/tools /&lt;/code&gt; command. It must have failed and I wasn&amp;rsquo;t paying attention.&lt;/p&gt;

&lt;p&gt;Now that I was knew what the problem was, I was able to fix it by running the following commands (some of them might need to be run from a &lt;em&gt;root/sudo&lt;/em&gt; account):&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;rm -rf $LFS/tools
rm -rf /tools
mkdir -pv $LFS/tools
ln -sv $LFS/tools /
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;These commands remove and reset the &lt;code&gt;tools&lt;/code&gt; symlinks. I then made sure to re-add &lt;code&gt;/tools/bin&lt;/code&gt; to the begging of the &lt;code&gt;path&lt;/code&gt; var in the &lt;em&gt;lfs&lt;/em&gt; &lt;code&gt;.bashrc&lt;/code&gt; and test it. Problem fixed!&lt;/p&gt;

&lt;h3 id=&#34;extracting-binutils&#34;&gt;Extracting BinUtils&lt;/h3&gt;

&lt;p&gt;&lt;center&gt;
&lt;img src=&#34;../../img/posts/LFS-SBUs-Binutils/tar-binutils.png&#34; name=&#34;pic&#34; onmouseover=&#34;this.src=&#39;../../img/posts/LFS-SBUs-Binutils/tar-binutils.gif&#39;&#34; onmouseout=&#34;this.src=&#39;../../img/posts/LFS-SBUs-Binutils/tar-binutils.png&#39;&#34; style=&#34;max-width: 100%;&#34;/&gt;
&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;It is important that Binutils is built first in the process. This is mostly because when Glibc and GCC are built, they perform various tests on the linker and assembler to figure out which of their own features to enable.&lt;/p&gt;

&lt;p&gt;To start building BinUtils, move to the sources directory (&lt;code&gt;$LFS/sources&lt;/code&gt;) and extract the package with (If you encounter issues, see section above):&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;tar xfjv binutils-2.27.tar.bz2
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;em&gt;Note: You&amp;rsquo;re version might be different&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The Binutils documentation recommends building it in a dedicated &lt;code&gt;build&lt;/code&gt; directory, so lets go ahead and make, then enter, that directory:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mkdir build
cd build
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;making-executing-a-build-script&#34;&gt;Making &amp;amp; Executing a Build Script&lt;/h3&gt;

&lt;p&gt;&lt;center&gt;
&lt;img src=&#34;../../img/posts/LFS-SBUs-Binutils/binutils-script-start-play.png&#34; name=&#34;pic&#34; onmouseover=&#34;this.src=&#39;../../img/posts/LFS-SBUs-Binutils/binutils-script-start.gif&#39;&#34; onmouseout=&#34;this.src=&#39;../../img/posts/LFS-SBUs-Binutils/binutils-script-start-play.png&#39;&#34; style=&#34;max-width: 100%;&#34;/&gt;
&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;Now it is time to build. Normally, this would best be done by sequentially performing a series of &lt;em&gt;configure&lt;/em&gt;, &lt;em&gt;make&lt;/em&gt;, and &lt;em&gt;make install&lt;/em&gt; commands, but for the first binutils compilation, we want to get an accurate reading on how long it takes (to determine our SBU time). To accomplish this easily, I put all of the commands into a bash script. This way, I could execute the script, and easily time the whole process using the &lt;code&gt;time&lt;/code&gt; utility. To create the script, I wrote the following commands into a file (&lt;code&gt;build-binutils.sh&lt;/code&gt;):&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#!/bin/bash

../configure --prefix=/tools            \
             --with-sysroot=$LFS        \
             --with-lib-path=/tools/lib \
             --target=$LFS_TGT          \
             --disable-nls              \
             --disable-werror
make

case $(uname -m) in
  x86_64) mkdir -v /tools/lib &amp;amp;&amp;amp; ln -sv lib /tools/lib64 ;;
esac

make install
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The various options of the &lt;code&gt;configure&lt;/code&gt; command mean the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;--prefix=/tools&lt;/code&gt;: Configures the build to install the Binutils programs to the /tools directory&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--with-sysroot=$LFS&lt;/code&gt;: For cross compilation, tells the build system to look in our $LFS directory for the target system libraries, as needed.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--with-lib-path=/tools/lib&lt;/code&gt;: configures the library path that the linker should be configured to use.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--target=$LFS_TGT&lt;/code&gt;: the machine description in the &lt;code&gt;LFS_TGT&lt;/code&gt; variable is slightly different than the value returned by the &lt;em&gt;config.guess&lt;/em&gt; script, so this option will tell the &lt;em&gt;configure&lt;/em&gt; script to adjust Binutil&amp;rsquo;s build system for building the cross linker.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;disable-nls&lt;/code&gt;: disables the internationalization, as it is not needed for the temporary tools.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;disable-werror&lt;/code&gt;: Prevents the build from stopping in the event that there are warnings from the host&amp;rsquo;s compilier.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Also, the &lt;code&gt;case&lt;/code&gt; statement creates a symlink to ensure the sanity of the tool chain, if building on a &lt;em&gt;x86_64&lt;/em&gt; architecture.&lt;/p&gt;

&lt;p&gt;To runs the script, first make it executable,&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;chmod +x build-binutils.sh
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Finally, time and execute the script:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;time ./build-binutils.sh
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;When the script completes, the time it took to run it will be printed out. Congratulations, this is the SBU for your system!&lt;/p&gt;

&lt;p&gt;Once I had my standard single-thread SBU value, I wanted to do a run with the &lt;code&gt;-j4&lt;/code&gt; make flag for comparison. To &amp;ldquo;reset&amp;rdquo;, I deleted the contents of the &lt;code&gt;binutils/build/&lt;/code&gt; directory, as well as &lt;code&gt;$LFS/tools/&lt;/code&gt;. I then edited my &lt;code&gt;build-binutils.sh&lt;/code&gt; script to do a parallel compile by changing &lt;code&gt;make&lt;/code&gt; line to &lt;code&gt;make -j4&lt;/code&gt;. I then re-ran the script with &lt;code&gt;time&lt;/code&gt;. &lt;em&gt;Note: This is not described anywhere in the official documentation, but is just my best guess at what to do for a re-run of binutils. I very well may be missing steps. However, remember LFS is a learning experience, so we will find out&lt;/em&gt;!&lt;/p&gt;

&lt;h3 id=&#34;checking-the-build&#34;&gt;Checking the Build&lt;/h3&gt;

&lt;p&gt;&lt;center&gt;
&lt;img src=&#34;../../img/posts/LFS-SBUs-Binutils/binutils-check-play.png&#34; name=&#34;pic&#34; onmouseover=&#34;this.src=&#39;../../img/posts/LFS-SBUs-Binutils/binutils-check.gif&#39;&#34; onmouseout=&#34;this.src=&#39;../../img/posts/LFS-SBUs-Binutils/binutils-check-play.png&#39;&#34; style=&#34;max-width: 100%;&#34;/&gt;
&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;After the build is complete, it is a good idea to run the tests, &lt;em&gt;especially&lt;/em&gt; for binutils. In this case, use the make command:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;make -k check
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;building-the-chapter-5-tools-from-here-on-out&#34;&gt;Building the Chapter 5 Tools From Here on Out&amp;hellip;&lt;/h3&gt;

&lt;p&gt;For the sake of time, I will not be writing posts detailing the build process for each of the remaining packages in Chapter 5. I might keep a little log about how each of the builds went and post it, but I am unsure. If I encounter any major snags along the way, I will be sure to write a post detailing them. Otherwise, with any luck, my plan is to keep compiling and see you in Chapter 6!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Linux from Scratch - Final Preparation Steps</title>
      <link>http://ryan.himmelwright.net/post/lfs-final-preparation-steps/</link>
      <pubDate>Tue, 21 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>http://ryan.himmelwright.net/post/lfs-final-preparation-steps/</guid>
      <description>

&lt;p&gt;Now that the &lt;em&gt;repeated&lt;/em&gt; setup steps have been defined in &lt;a href=&#34;../../post/LFS-Repeated-Setup-Steps/&#34;&gt;my previous LFS post&lt;/a&gt;, there are a &lt;em&gt;few&lt;/em&gt; more preparation steps to complete in order to start building the LFS system. I promise&amp;hellip; we will start compiling soon. If all goes well, this should be the last preparation post.&lt;/p&gt;

&lt;!-- more --&gt;

&lt;h3 id=&#34;downloading-sources&#34;&gt;Downloading Sources&lt;/h3&gt;

&lt;p&gt;When it comes down to it, Linux from scratch is just a bunch of packages, and the Linux kernel, all compiled from source and linked together. To build all of this, we need to download the source code&amp;hellip; for &lt;em&gt;all&lt;/em&gt; of those packages. Luckily, LFS keeps a list of what is needed, and downloading it is trivial. &lt;em&gt;(Note: These commands should be run as &lt;b&gt;root&lt;/b&gt;)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;center&gt;
&lt;img alt=&#34;Making the sources directory&#34; src=&#34;../../img/posts/LFS-Final-Preparation-Steps/make-sources-dir.png&#34; style=&#34;max-width: 100%;&#34;/&gt;
&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;First, lets make a new directory to put all of the source code. To make the directory:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mkdir -v $LFS/sources
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The LFS book suggests for this directory to be writable and sticky. A &amp;ldquo;Sticky&amp;rdquo; directory allows only the file owner to delete a file in it. To make the directory both writable and sticky, use the command:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;chmod -v a+wt $LFS/sources
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;center&gt;
&lt;img src=&#34;../../img/posts/LFS-Final-Preparation-Steps/wget-sources-play.png&#34; name=&#34;pic&#34; onmouseover=&#34;this.src=&#39;../../img/posts/LFS-Final-Preparation-Steps/wget-sources.gif&#39;&#34; onmouseout=&#34;this.src=&#39;../../img/posts/LFS-Final-Preparation-Steps/wget-sources-play.png&#39;&#34; style=&#34;max-width: 100%;&#34;/&gt;
&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;To download all of the source packages at once, download &lt;a href=&#34;http://www.linuxfromscratch.org/lfs/view/stable-systemd/wget-list&#34;&gt;the LFS wget list&lt;/a&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;wget http://www.linuxfromscratch.org/lfs/view/stable-systemd/wget-list
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;After downloading the wget list, it can be used as the input-file for wget. This will download all the sources with one command:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;wget --input-file=wget-list --continue --directory-prefix=$LFS/sources
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;It should take a few minutes to download everything (or longer if on a poor connection).&lt;/p&gt;

&lt;p&gt;&lt;center&gt;
&lt;img src=&#34;../../img/posts/LFS-Final-Preparation-Steps/sources-md5-play.png&#34; name=&#34;pic&#34; onmouseover=&#34;this.src=&#39;../../img/posts/LFS-Final-Preparation-Steps/sources-md5.gif&#39;&#34; onmouseout=&#34;this.src=&#39;../../img/posts/LFS-Final-Preparation-Steps/sources-md5-play.png&#39;&#34; style=&#34;max-width: 100%;&#34;/&gt;
&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;Ever since LFS-7.0, a &lt;a href=&#34;http://www.linuxfromscratch.org/lfs/view/stable-systemd/md5sums&#34;&gt;md5sums file&lt;/a&gt; is provided, which can be downloaded and used to verify the integrity of downloaded packages. Download this file, again with &lt;em&gt;wget&lt;/em&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;wget http://www.linuxfromscratch.org/lfs/view/stable-systemd/md5sums
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Then, compare the hashes in the list to the &lt;a href=&#34;https://en.wikipedia.org/wiki/Md5sum&#34;&gt;md5sum&lt;/a&gt; for each of the source packages. This is done with the commands:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;pushd $LFS/sources
md5sum -c md5sums
popd&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The results should all say &lt;em&gt;OK&lt;/em&gt;. If not, try re-downloading the sources and verifying again.&lt;/p&gt;

&lt;h3 id=&#34;creating-the-lfs-tools-directory&#34;&gt;Creating the $LFS/tools Directory&lt;/h3&gt;

&lt;p&gt;LFS is built in two main steps. The first step builds a set of temporary tools to build the system, but not be included as part of the Final LFS system itself. To help prevent these tools from accidentally being included in the final system, they are kept in a separate directory that can be deleted after they have served their purpose. Make this directory as root:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mkdir -v $LFS/tools
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Next, we will create a &lt;code&gt;/tools&lt;/code&gt; symlink to the host system.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ln -sv $LFS/tools /
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This enables the tool-chain to be compiled so that it always refers to &lt;code&gt;/tools&lt;/code&gt;, which ensures that the compiler, assembler, and linker will work in both the first, and second steps of the LFS build.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Update:&lt;/strong&gt; &lt;em&gt;I did this step wrong the first time (I think it failed), and encountered errors later when trying to run tar. If you encounter issues as well, jump to &lt;a href=&#34;../../post/LFS-SBUs-and-Binutils/&#34;&gt;my next post&lt;/a&gt; to see how I resolved these issues&lt;/em&gt;&lt;/p&gt;

&lt;h3 id=&#34;adding-the-lfs-user&#34;&gt;Adding the LFS User&lt;/h3&gt;

&lt;p&gt;Running a system as root is a dangerous. Running the wrong command can completely obliterate a system, and having a typo bork the LFS build, or even the host system, would be horrific. To prevent this, the book recommends creating an unprivileged user to build the packages from. To do so, first create an &lt;em&gt;lfs&lt;/em&gt; group and then create + add a &lt;em&gt;lfs&lt;/em&gt; user to it using the commands (as root, ironic for this section&amp;hellip;):&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;groupadd lfs
useradd -s /bin/bash -g lfs -m -k /dev/null lfs
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If you are not familiar with the &lt;em&gt;useradd&lt;/em&gt; command, then &lt;a href=&#34;https://en.wikipedia.org/wiki/RTFM&#34;&gt;&lt;em&gt;RTFM&lt;/em&gt;&lt;/a&gt; by typing &lt;code&gt;man useradd&lt;/code&gt;. I&amp;rsquo;m just kidding (although reading the man pages is never a bad idea). Here is a quick summary of what all of the flags mean.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-s /bin/bash&lt;/code&gt; sets our &lt;em&gt;lfs&lt;/em&gt; user&amp;rsquo;s default shell to &lt;em&gt;bash&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-g lfs&lt;/code&gt; adds the user to the &lt;em&gt;lfs&lt;/em&gt; group that was created in the previous command&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-m&lt;/code&gt; creates the user&amp;rsquo;s home directory (&lt;em&gt;/home/lfs&lt;/em&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-k /dev/null&lt;/code&gt; changes the input direction to the special null device to prevent the copying of files from a skeleton directory&lt;/li&gt;
&lt;li&gt;lastly, &lt;code&gt;lfs&lt;/code&gt; is the new user&amp;rsquo;s name.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Before logging into the user, the password must be set.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;passwd lfs
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;We also want to grant the &lt;em&gt;lfs&lt;/em&gt; user full access to the tools directory we made (&lt;em&gt;$LFS/tools&lt;/em&gt;), so lets make &lt;em&gt;lfs&lt;/em&gt; the owner of that directory:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;chown -v lfs $LFS/tools
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Do the same for the sources directory we made:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;chown -v lfs $LFS/sources
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Lastly, login as &lt;em&gt;lfs&lt;/em&gt;!&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;su - lfs
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;em&gt;Note: the &amp;ldquo;-&amp;rdquo; tells su to start a login shell, rather than a non-login shell. This mostly ensures that various files are read at login to setup environment variable and other profiles.&lt;/em&gt;&lt;/p&gt;

&lt;h3 id=&#34;setting-up-the-build-environment&#34;&gt;Setting up the Build Environment&lt;/h3&gt;

&lt;p&gt;Now with the &lt;em&gt;lfs&lt;/em&gt; user created, we need to setup a proper working environment for that user. To do this, we will create the &lt;code&gt;.bash_profile&lt;/code&gt; and &lt;code&gt;.bashrc&lt;/code&gt; files.&lt;/p&gt;

&lt;h5 id=&#34;creating-bash-profile&#34;&gt;Creating .bash_profile&lt;/h5&gt;

&lt;p&gt;&lt;center&gt;
&lt;img src=&#34;../../img/posts/LFS-Final-Preparation-Steps/set-bash-profile.png&#34; name=&#34;pic&#34; onmouseover=&#34;this.src=&#39;../../img/posts/LFS-Final-Preparation-Steps/set-bash-profile.gif&#39;&#34; onmouseout=&#34;this.src=&#39;../../img/posts/LFS-Final-Preparation-Steps/set-bash-profile.png&#39;&#34; style=&#34;max-width: 100%;&#34;/&gt;
&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;When logging in as the &lt;em&gt;lfs&lt;/em&gt; user, the shell first reads the &lt;code&gt;/etc/profile&lt;/code&gt; of the host, followed by the &lt;code&gt;.bash_profile&lt;/code&gt;. So, lets start with the &lt;code&gt;.bash_profile&lt;/code&gt;. Create/open &lt;code&gt;.bash_profile&lt;/code&gt; and add the following line to it:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;exec env -i HOME=$HOME TERM=$TERM PS1=&#39;\u:\w\$ &#39; /bin/bash
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This line replaces the running shell with a new one that contains a completely empty environment, except the &lt;em&gt;HOME&lt;/em&gt;, &lt;em&gt;TERM&lt;/em&gt;, &lt;em&gt;PS1&lt;/em&gt; variables. This ensures that there are no stray environment variables, that may interfere with the build environment.&lt;/p&gt;

&lt;h5 id=&#34;creating-bashrc&#34;&gt;Creating .bashrc&lt;/h5&gt;

&lt;p&gt;&lt;center&gt;
&lt;img src=&#34;../../img/posts/LFS-Final-Preparation-Steps/set-bashrc.png&#34; name=&#34;pic&#34; onmouseover=&#34;this.src=&#39;../../img/posts/LFS-Final-Preparation-Steps/set-bashrc.gif&#39;&#34; onmouseout=&#34;this.src=&#39;../../img/posts/LFS-Final-Preparation-Steps/set-bashrc.png&#39;&#34; style=&#34;max-width: 100%;&#34;/&gt;
&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;The new instance of this the shell is a non-login shell, so it does not read the &lt;code&gt;/etc/profile&lt;/code&gt; or &lt;code&gt;.bash_profile&lt;/code&gt; files. However, it does read the &lt;code&gt;.bashrc, so lets go ahead and create that. Open&lt;/code&gt;~/.bashrc` and add the following lines:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;set +h
umask 022
LFS=/mnt/lfs
LC_ALL=POSIX
LFS_TGT=$(uname -m)-lfs-linux-gnu
PATH=/tools/bin:/bin:/usr/bin
export LFS LC_ALL LFS_TGT PATH

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The &lt;code&gt;set +h&lt;/code&gt; line turns off bash&amp;rsquo;s hash function. This is normally a usefully feature, as it essentially caches the path-names of executables. Removing this will ensure that the newly compiled tools will always be found by the shell once they are available, because the shell will have to re-search the &lt;em&gt;PATH&lt;/em&gt; each time. Similarly, placing &lt;code&gt;/tools/bin&lt;/code&gt; ahead of the standard &lt;code&gt;/bin:/usr/bin&lt;/code&gt; &lt;em&gt;PATH&lt;/em&gt; &lt;em&gt;(line 6)&lt;/em&gt;, also helps force the shell to immediately locate up all the programs in chapter 5 after installation. These two techniques will hopefully prevent the risk of using old programs from the host instead of the newly compiled ones.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;umask 022&lt;/code&gt; line defines the &lt;a href=&#34;https://en.wikipedia.org/wiki/Umask&#34;&gt;umask&lt;/a&gt; to 022, which sets up the system so that created files and directories are only writable by their owner, but are readable and executable by anyone.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;LFS=/mnt/lfs&lt;/code&gt; line should look familiar, as it sets the &lt;code&gt;LFS&lt;/code&gt; variable to our LFS mount point.&lt;/p&gt;

&lt;p&gt;Lastly, setting the &lt;code&gt;LC_ALL&lt;/code&gt; variable to &lt;code&gt;POSIX&lt;/code&gt; or &lt;code&gt;C&lt;/code&gt; ensures that everything will work as expected in the &lt;em&gt;chroot&lt;/em&gt; environments (regarding localization settings).&lt;/p&gt;

&lt;p&gt;To enable this new environment we&amp;rsquo;ve setup, source the user-profile:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;source ~/.bash_profile
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Congratulations! We are now ready to start compiling some code in the next post!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Linux from Scratch - Repeated Setup Steps</title>
      <link>http://ryan.himmelwright.net/post/lfs-repeated-setup-steps/</link>
      <pubDate>Mon, 13 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>http://ryan.himmelwright.net/post/lfs-repeated-setup-steps/</guid>
      <description>&lt;p&gt;During the Linux From Scratch process, there may be times when the build environment (computer, VM, chroot, whatever) must be restarted. If so, there are a few steps from the setup phase that have to be re-initialized. This post maps out those steps.&lt;/p&gt;

&lt;h3 id=&#34;setting-the-lfs-variable&#34;&gt;Setting The $LFS Variable&lt;/h3&gt;

&lt;p&gt;After setting up the virtual disk for my LFS build, I needed to define where I wanted to eventually mount it. This location is important, because it is the path that the $LFS variable is set to. The $LFS variable is used throughout the book, to easily point to where the LFS system is being built.&lt;/p&gt;

&lt;p&gt;&lt;center&gt;&lt;img alt=&#34;Setting the LFS variable&#34; src=&#34;../../img/posts/LFS-Repeated-Setup-Steps/Setting-LFS-var.png&#34; style=&#34;max-width: 100%;&#34;/&gt;&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;To set the #LFS variable, I ran the following command: *&lt;/p&gt;

&lt;p&gt;&lt;code&gt;export LFS=/mnt/lfs&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;To check that the variable set correctly, just print it out using echo (if successful, the path that was specified should print out).&lt;/p&gt;

&lt;p&gt;&lt;code&gt;echo $LFS&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&#34;ensuring-the-lfs-variable-is-always-set&#34;&gt;Ensuring the $LFS Variable is &lt;em&gt;Always&lt;/em&gt; Set&lt;/h3&gt;

&lt;p&gt;There are several ways to ensure that the &lt;em&gt;$LFS&lt;/em&gt; variable is always loaded during login. One method the book recommends is to edit the &lt;em&gt;.bash-profile&lt;/em&gt; found in both &lt;em&gt;~&lt;/em&gt; and */root, by appending the export command defined above to them. This way every time the build machine resets, simply logging into the system (which loads &lt;em&gt;bash&lt;/em&gt;, assuming it is the default), will export the &lt;em&gt;$LFS&lt;/em&gt; variable.&lt;/p&gt;

&lt;h3 id=&#34;mounting-the-lfs-partition-s&#34;&gt;Mounting the LFS Partition(s)&lt;/h3&gt;

&lt;p&gt;After setting the &lt;em&gt;$LFS&lt;/em&gt; variable, I could finally mount my LFS drive/partition to that location. First, I ensured that the directory existed by running:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;mkdir -pv $LFS&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Note: In this command, the -v again means verbose, so a message will be printed for each directory created. The -p flag is for &amp;ndash;parents, and will instruct &amp;ldquo;mkdir&amp;rdquo; to also make parent directories, as needed. So, if &lt;code&gt;/mnt/&lt;/code&gt; does not already exist, will be created along with &lt;code&gt;/mnt/lfs&lt;/code&gt;.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;After creating the directories, I mounted them with the command:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;sudo mount -v -t ext4 /dev/sdb $LFS&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;If multiple partitions are being used for the LFS build (&lt;em&gt;such as a separate &lt;code&gt;/home&lt;/code&gt; partition&lt;/em&gt;), they should also be mounted at this time.&lt;/p&gt;

&lt;p&gt;&lt;center&gt;
&lt;img src=&#34;../../img/posts/LFS-Repeated-Setup-Steps/mounting-play.png&#34; name=&#34;pic&#34; onmouseover=&#34;this.src=&#39;../../img/posts/LFS-Repeated-Setup-Steps/mount-check.gif&#39;&#34; onmouseout=&#34;this.src=&#39;../../img/posts/LFS-Repeated-Setup-Steps/mounting-play.png&#39;&#34; style=&#34;max-width: 100%;&#34;/&gt;
&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;After mounting my partition, the LFS book recommended that I check that the partition was not mounted with restrictive permissions. To do this, I ran the &lt;code&gt;mount&lt;/code&gt; command again, but this time without any parameters. From the output, I was able to see and confirm that the partition was not mounted with restrictive permissions, such as &lt;code&gt;nosuid&lt;/code&gt; or &lt;code&gt;nodev&lt;/code&gt;. If either of these options are set, the partition should be remounted.&lt;/p&gt;

&lt;p&gt;Lastly, if a &lt;em&gt;swap&lt;/em&gt; partition is being used, do not forget to enable it using &lt;code&gt;swapon&lt;/code&gt;:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;swapon -v /dev/xxx&lt;/code&gt;  (with &lt;em&gt;xxx&lt;/em&gt; the name of the swap partition)&lt;/p&gt;

&lt;h3 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h3&gt;

&lt;p&gt;Remember, if the LFS host system is restarted for any reason, these steps must be completed upon logging into the rebooted system. Even if measures were taking to &lt;em&gt;always&lt;/em&gt; complete these steps (such as adding the &lt;em&gt;$LFS&lt;/em&gt; variable to the bash profile, or mounting the partitions via the &lt;em&gt;fstab&lt;/em&gt; file), it is still a good idea to check and make sure that they &lt;em&gt;actually&lt;/em&gt; initialized as  intended. This can prevent several headaches down the road.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>My New Dotfiles Management - Using GNU Stow</title>
      <link>http://ryan.himmelwright.net/post/new-dotfiles/</link>
      <pubDate>Tue, 07 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>http://ryan.himmelwright.net/post/new-dotfiles/</guid>
      <description>&lt;p&gt;I have maintained a &amp;ldquo;dotfiles&amp;rdquo; repository since I made my github account in 2013. However, overtime it became more of a post-apocalyptic wasteland, cluttered with remnants of obsolete configurations and scraps of scripts. It was no longer the pristine, culled, collection that I desired. I also did not have an efficient method of easily linking the files on a new system. I had to manually make symlinks for each dotfile. I knew there were &lt;em&gt;much&lt;/em&gt; better dotfiles setups out there, but I never got around to it. Until now.&lt;/p&gt;

&lt;p&gt;One day, after reading &lt;a href=&#34;http://brandon.invergo.net/news/2012-05-26-using-gnu-stow-to-manage-your-dotfiles.html&#34;&gt;this post&lt;/a&gt;, I finally decided to sit down and clean up my dotfiles directory. I wanted to re-organize it so that I could use &lt;a href=&#34;http://freecode.com/projects/gnustow&#34;&gt;GNU Stow&lt;/a&gt; to initialize my dotfiles.&lt;/p&gt;

&lt;p&gt;After setting it all up, I decided to just start from scratch with a &lt;a href=&#34;https://github.com/himmAllRight/dotfiles&#34;&gt;new repository&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;using-stow-and-dotfiles&#34;&gt;Using Stow and dotfiles&lt;/h2&gt;

&lt;p&gt;If you haven&amp;rsquo;t seen it before, I highly suggest reading the post I have linked above. But in the meantime, I can provide a quick summary of how my dotfiles are setup.&lt;/p&gt;

&lt;p&gt;&lt;center&gt;&lt;img alt=&#34;My Dotfiles Dir&#34; src=&#34;../../img/posts/new-dotfiles/dotfiles.png&#34; style=&#34;max-width: 100%;&#34;/&gt;&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;Each application has an associated sub-directory (ex: &lt;code&gt;dotfiles/emacs&lt;/code&gt;), which contains all of the dotfiles/folders associated with that application. Structurally, I treat the items in each application directory as if they were in my &lt;code&gt;~&lt;/code&gt;. For example, the &lt;code&gt;vim&lt;/code&gt; sub-directory has my &lt;code&gt;.vimrc&lt;/code&gt;, as well as the &lt;code&gt;.vim/colors/&lt;/code&gt; directory. This is so that when I use stow, it will properly link them in &lt;code&gt;~&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;center&gt;&lt;img alt=&#34;Vim dotfiles directory&#34; src=&#34;../../img/posts/new-dotfiles/vim-dots.png&#34; style=&#34;max-width: 100%;&#34;/&gt;&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;When I setup my dotfiles on a new system, or install an application for which I already have dotfiles saved for, setting them up is as easy as typing:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;stow application-dir&lt;/code&gt; (ex: &lt;code&gt;stow vim&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;GNU Stow then links the files under my home directory. In my vim example, this means symlinks are created for &lt;code&gt;~/.vimrc&lt;/code&gt; and &lt;code&gt;~/.vim/colors/*&lt;/code&gt;, pointing to their respective locations in &lt;code&gt;~/dotfiles/vim/&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;center&gt;&lt;img alt=&#34;Vim dotfiles in Home&#34; src=&#34;../../img/posts/new-dotfiles/vim-home.png&#34; style=&#34;max-width: 100%;&#34;/&gt;&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;I think this setup is brilliant. Initializing an application&amp;rsquo;s directory is so simple, and I can choose to only initialize specific sub-directories.&lt;/p&gt;

&lt;p&gt;In the future, I might make multiple branches of the repository, one for each of my computers, so I can maintain specific configurations. In theory, I could also just make different folders (ex &lt;code&gt;vim-laptop&lt;/code&gt; and &lt;code&gt;vim-server&lt;/code&gt;), but I like the branch idea better because it&amp;rsquo;s a little easier for me to merge changes. We shall see.&lt;/p&gt;

&lt;p&gt;Anyway, that&amp;rsquo;s the new setup. Enjoy :-D&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Linux from Scratch - Getting Started</title>
      <link>http://ryan.himmelwright.net/post/lfs-getting-started/</link>
      <pubDate>Wed, 01 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>http://ryan.himmelwright.net/post/lfs-getting-started/</guid>
      <description>&lt;p&gt;When I started using &lt;a href=&#34;https://www.archlinux.org&#34;&gt;Arch Linux&lt;/a&gt; a while back, I learn about some of the internals of Linux quickly. Ever since then, I have considered building a Linux From Scratch by following the guidelines outlined in &lt;a href=&#34;http://www.linuxfromscratch.org&#34;&gt;the book&lt;/a&gt;. Based on my experience with Arch Linux, I&amp;rsquo;m sure that compiling a system from scratch will continue to teach me about Linux at a much deeper level.&lt;/p&gt;

&lt;h3 id=&#34;getting-started&#34;&gt;Getting Started&lt;/h3&gt;

&lt;p&gt;&lt;img alt=&#34;Linux from Scratch Logo&#34; src=&#34;../../img/posts/LFS-intro/book-cover.jpg&#34; style=&#34;width: 30%; float: right; margin: 5px 15px 5px 5px&#34;/&gt;&lt;/p&gt;

&lt;p&gt;First, it should be known that this process follows a book that is freely available at &lt;a href=&#34;http://www.linuxfromscratch.org&#34;&gt;www.linuxfromscratch.org&lt;/a&gt;. The book is updated from time to time, and there are several versions of it (ex: systemd or not). I am attempting to complete the systemd adaptation. There are also many videos online of people walking through the steps. I find watching such videos can be very helpful to watch.&lt;/p&gt;

&lt;h2 id=&#34;setting-up-the-host-system&#34;&gt;Setting Up the Host System&lt;/h2&gt;

&lt;p&gt;&lt;img alt=&#34;VM installation Complete&#34; src=&#34;../../img/posts/LFS-intro/VM-install.png&#34; style=&#34;max-width: 100%;&#34;/&gt;&lt;/p&gt;

&lt;p&gt;LFS is constructed from a host environment that has the software required to build and compile all the components of the system. This host system can be a current Linux install, a seperate computer that is dedicated to LFS, or a Linux virtual machine. The LFS system is then assembled in a another partition, or even on a separate hard drive.&lt;/p&gt;

&lt;p&gt;I setup a KVM virtual machine using Virt Manager for my host system, and then attached a virtual hard drive to build LFS on. I decided to use a &lt;a href=&#34;https://www.ubuntu.com/download/desktop&#34;&gt;Ubuntu 16.04 Desktop&lt;/a&gt; install because it should have most of the build tools, and it is easy to install any missing ones. For now, I configured the VM to use 4 cores and 4GB of RAM, but I might decide to increase that when I start compiling packages. I also decided to not worry about any of the fancy partitioning options like setting up LVM or disk encryption, and just let the installer automatically do it for me. Those features are not really needed here and I figured it would just potentially confuse me.&lt;/p&gt;

&lt;p&gt;&lt;center&gt;&lt;img alt=&#34;Adding LFS hd&#34; src=&#34;../../img/posts/LFS-intro/HD-add.png&#34; style=&#34;max-width: 100%;&#34;/&gt;&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;After the VM finished installing, I shutdown the system and added a virtual drive. This will be the virtual drive that I build the entire LFS system in. Then I started up the VM again, confirmed that everything installed correctly, and installed openssh so that I could just ssh into the system from my desktop if I didn&amp;rsquo;t feel like working inside the VM&amp;rsquo;s GUI.&lt;/p&gt;

&lt;h3 id=&#34;setting-up-the-host-environment&#34;&gt;Setting up the Host Environment&lt;/h3&gt;

&lt;h4 id=&#34;checking-required-packages&#34;&gt;Checking Required Packages&lt;/h4&gt;

&lt;p&gt;&lt;img alt=&#34;Adding LFS hd&#34; src=&#34;../../img/posts/LFS-intro/environment-check-pre.png&#34; style=&#34;max-width: 100%;&#34;/&gt;&lt;/p&gt;

&lt;p&gt;Now that the host system was setup, the host &lt;em&gt;environment&lt;/em&gt; had to be configured. Luckily, LFS provides a nice script that can be copy and pasted into a terminal. This script prints out what required packages and programs are not yet installed on the system (make sure to run it as either root, or using sudo). When I ran the script, there were a few missing packages that had to be installed:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;bison&lt;/li&gt;
&lt;li&gt;gawk&lt;/li&gt;
&lt;li&gt;texinfo (makeinfo)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So, I just ran a simple &lt;code&gt;apt-get install bison gawk texinfo&lt;/code&gt; command and was good to go. I also had a symlink issue because &lt;code&gt;/bin/sh&lt;/code&gt; was pointing to &lt;code&gt;/bin/dash&lt;/code&gt;, and LFS wants it to point to &lt;code&gt;/bin/bash/&lt;/code&gt;. This was easily resolved using the command &lt;code&gt;ln -sf bash /bin/sh&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img alt=&#34;Adding LFS hd&#34; src=&#34;../../img/posts/LFS-intro/environment-check-post.png&#34; style=&#34;max-width: 100%;&#34;/&gt;&lt;/p&gt;

&lt;p&gt;After installing those few packages and fixing the symlink, the check script was happy, and I could move on.&lt;/p&gt;

&lt;h4 id=&#34;checking-libraries&#34;&gt;Checking Libraries&lt;/h4&gt;

&lt;p&gt;&lt;img alt=&#34;Adding LFS hd&#34; src=&#34;../../img/posts/LFS-intro/library-check.png&#34; style=&#34;max-width: 100%;&#34;/&gt;&lt;/p&gt;

&lt;p&gt;After verifying that my host system had all the required packages, I had to confirm that a few libraries were &amp;ldquo;consistent&amp;rdquo;. Again, LFS provides a simple script for this. When I ran it, the three libraries were not found. Tthe books states that all the files should either be &lt;em&gt;absent&lt;/em&gt; or &lt;em&gt;present&lt;/em&gt;. If one or two are there and the others missing, that is a problem. So my system was okay.&lt;/p&gt;

&lt;h3 id=&#34;formatting-the-lfs-disk&#34;&gt;Formatting the LFS Disk&lt;/h3&gt;

&lt;p&gt;I added my LFS disk through the Virt Manager settings, which doesn&amp;rsquo;t format it, so that had to be done next.&lt;/p&gt;

&lt;p&gt;&lt;img alt=&#34;Adding LFS hd&#34; src=&#34;../../img/posts/LFS-intro/disks.png&#34; style=&#34;max-width: 100%;&#34;/&gt;&lt;/p&gt;

&lt;p&gt;I first used &lt;code&gt;lsblk&lt;/code&gt; to confirm the disk name. In my case it was the &lt;code&gt;/dev/sdb&lt;/code&gt; disk.&lt;/p&gt;

&lt;p&gt;&lt;img alt=&#34;Adding LFS hd&#34; src=&#34;../../img/posts/LFS-intro/mkfs.png&#34; style=&#34;max-width: 100%;&#34;/&gt;&lt;/p&gt;

&lt;p&gt;After getting the disk&amp;rsquo;s path, it was time to format. I decided to format the disk with t the basic, but very solid ext4 file system using the following command (again, as root or using &lt;em&gt;sudo&lt;/em&gt;):&lt;/p&gt;

&lt;p&gt;&lt;code&gt;mkfs.ext4 -v /dev/sdb&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Note that the &lt;code&gt;-v&lt;/code&gt; was not required, but I personally prefer to see the output. Also, if I wanted to specify the drive using the UUID, that could be accomlished using the &lt;code&gt;-U&lt;/code&gt; flag to specify a UUID instead of the file path.&lt;/p&gt;

&lt;p&gt;The next few preparatory steps before starting to build LFS must be done each time the host system boots, so I think I am going to break that into a separate post. That way, it can be more easily referenced. Enjoy!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>My New, Used x230</title>
      <link>http://ryan.himmelwright.net/post/my-new-used-x230/</link>
      <pubDate>Tue, 29 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>http://ryan.himmelwright.net/post/my-new-used-x230/</guid>
      <description>&lt;p&gt;As I start to do more with a computer on the go, the netbooks I
previously used just are not cutting it anymore. They were great for minimal
use, but couldn&amp;rsquo;t run VMs, over-heated, and didn&amp;rsquo;t have great
battery life. Now that I am going to libraries and other locations to
work on personal and open source projects, I really needed a better
mobile pc setup.&lt;/p&gt;

&lt;h3 id=&#34;other-considerations&#34;&gt;Other Considerations&lt;/h3&gt;

&lt;p&gt;&lt;img alt=&#34;Asus x201e&#34; src=&#34;../../img/posts/my-new-used-x230/asus_x201e.png&#34; width=55% style=&#34;float: right; margin: 0px 15px 5px 5px;&#34;/&gt;&lt;/p&gt;

&lt;p&gt;I had been keeping an eye open for a new mobile computer for well over a
year to find out what is out there. I mostly looked sub $300 ubuntu laptops like the Asus 11&amp;rdquo;
celeron (x201e) I got in college. I don&amp;rsquo;t need much HD
space on my portable computer, because I usually use a minimal
OS, and only have my projects (which are git controlled), and sometimes a
&lt;em&gt;little bit&lt;/em&gt; of music. Even with dropping my requirements to computers with
&lt;em&gt;very tiny&lt;/em&gt; HDs (often &amp;lt; 60GB), none of the options seemed all that impressive. They
usually had Celeron processors and little ram. Even worse, they
were not easily expandable. I also briefly entertained the idea of
putting Linux on a chrome book, but they had the same issues that all
the other sub $300 options had.&lt;/p&gt;

&lt;h3 id=&#34;used-thinkpads&#34;&gt;Used Thinkpads&lt;/h3&gt;

&lt;p&gt;When I intensified my search, I started to consider other
options. There is one alternative that is very popular among Linux users,
but I always seem to forget about it when looking for a new
device. That option of course, is buying a used Thinkpad and installing
Linux on it. This appeared to be an ideal time to try it out. I
don&amp;rsquo;t mind if there is a scratch or two on a cheap device. This is my
portable computer after all, so I&amp;rsquo;m sure a shinny new device wouldn&amp;rsquo;t stay
pristine for long anyway. So, I started researching used Thinkpads and
loved how much you could get for the money. There were i5 devices with an
acceptable bit of ram and &amp;ldquo;okay&amp;rdquo; hard drives for under my $300 price
point. Better yet, the Thinkpads seemed easy to upgrade .
So, even if the device had a bad battery, or needed a
RAM/HD upgrade, &lt;em&gt;I could could do it&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;I eventually narrowed my search down to the X230 or T430s. That year&amp;rsquo;s
model seemed like the perfect mix of still being relatively new, while
also being old enough that many business had started to replace
them, flooding the market and driving the cost down. They also
didn&amp;rsquo;t have the terrible track pad that the x240 and T440s had (without buttons). I
eventually decided on the x230 because the main use of this laptop would be portability.&lt;/p&gt;

&lt;h3 id=&#34;this-particular-thinkpad-x230&#34;&gt;This Particular Thinkpad x230 &amp;hellip;&lt;/h3&gt;

&lt;p&gt;&lt;img alt=&#34;x230&#34; src=&#34;../../img/posts/my-new-used-x230/kadabra2.jpg&#34; width= 100%&gt;
I found my used x230 on Amazon, for about $185. The vendor an acceptable
rating, and the specs were good for the price:
- Intel i5-3320M
- 4 GB RAM
- 12.5&amp;rdquo; 1366x768 HD LED Display
- 320 GB HHD&lt;/p&gt;

&lt;p&gt;The listing also said that it came with a &amp;ldquo;used 6-cell battery&amp;rdquo;. So I planned
from the beginning to have it replaced. Sure enough, when the laptop arrived,
the battery was completely dead. If I unplugged the laptop, it would shutdown.
So, I ordered a 9-cell battery online to replace it. I added
a 4GB stick of RAM that I took from an older laptop, and replaced the slow HHD
(with Windows pre-installed), with a cheap 120GB SSD I had lying
around. After installing Korora 24 on the new SSD, I had a
nice, portable computer that only cost me about $200 (plus some spare
parts). As advertised, swapping the battery, adding RAM, and replacing
the HD were &lt;em&gt;super simple&lt;/em&gt; and &lt;em&gt;accessible&lt;/em&gt;.&lt;/p&gt;

&lt;h3 id=&#34;what-i-like-about-it&#34;&gt;What I like about it&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Track point&lt;/strong&gt; - I love track points. Using other laptops with
just track-pads is really frustrating now. I completely understand why
people are so crazy about them.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Keyboard&lt;/strong&gt; - The keyboard really is great. I feels solid and not like
other laptop keyboards. It gives good feedback and is very nice to type on. I know many
people hate this model because keyboard layout changed from the
older models like the x220, but I still think the x230 has a better
keyboard than most laptops.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Physical buttons&lt;/strong&gt; - The x230 has a physical mute, volume control, and
mic buttons. This is a feature I enjoy much more than I thought I
would.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Upgradability&lt;/strong&gt; - As I have already mentioned, it is &lt;em&gt;very&lt;/em&gt; easy
to upgrade the x230. Right when I got it, I replaced the HHD with an
SSD and added another stick of RAM in under five
minutes. In fact, I have swapped the SSD out temporarily with
a second drive several times now to try out different distros on the
hardware. It is just so easy to do.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Feel&lt;/strong&gt; - I really like how this laptop feels. I&amp;rsquo;ve already
mentioned that I enjoy the solidness of the keyboard, but I also
love the exterior texture of the case. It has a slight rubbery
feel to it that makes it easy to hold.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Bang for your buck&lt;/strong&gt; - Getting a used thinkpad really is a
great deal. Even counting the minor upgrades I installed, I was able
to get &lt;em&gt;an actual computer&lt;/em&gt; for around the same price as the
&lt;em&gt;netbook&lt;/em&gt; alternatives I was looking at.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Size&lt;/strong&gt; - This is my mobile computer, so I need it to be
small. While it isn&amp;rsquo;t as thin as my wife&amp;rsquo;s macbook air, it is still
very portable. I actually don&amp;rsquo;t mind it being a little bit thicker,
as I find it to be the perfect size to hold and carry around. It is
a similar size to a few of my programming books and slides into my
backpack very easily.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;what-i-don-t-like&#34;&gt;What I don&amp;rsquo;t like&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Has a little bit of flex&lt;/strong&gt; - While the laptop overall feels pretty
solid, the screen does have a bit of flex when pressed.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Resolution&lt;/strong&gt; - I really hate 1366x768 on laptops. I don&amp;rsquo;t need 1920x1080, which would be very tiny on a 12.5&amp;rdquo; screen. 1600x900 however&amp;hellip;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Track pad (but honestly who cares)&lt;/strong&gt; - The track-pad isn&amp;rsquo;t great. In fact, it can be downright annoying. The bottom of the track-pad curves around the edge of computer, which looks nice, but rubs against my stomach when I am working with the laptop on my lap. This causes the cursor to fly around and do everything but what I want it to do. This would be a much bigger issue on other laptops, but with how much I use the track point, I really don&amp;rsquo;t care. I usually just disable the track-pad all together.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Speakers aren&amp;rsquo;t great (but again, not a bit deal)&lt;/strong&gt; - The speakers are very quiet and don&amp;rsquo;t
sound very good. This isn&amp;rsquo;t a huge deal for me because being my mobile computer, I am using
headphones 99% of the time. Still, it would be nice if when I occasionally share a video with someone they could actually hear it.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;conclusions&#34;&gt;Conclusions&lt;/h3&gt;

&lt;p&gt;&lt;img alt=&#34;x230&#34; src=&#34;../../img/posts/my-new-used-x230/kadabra.jpg&#34; style=&#34;max-width: 100%;&#34;/&gt;
I have had my x230 for several months now and still love it. I use it at work daily (to listen to
music, podcasts, and to have a &lt;em&gt;linux&lt;/em&gt; computer available to me at all times in a Windows office). It is a perfect mix of being portable while still having enough power to accomplish whatever I want to work on. I still prefer to vote with my wallet by purchasing from a vendors like &lt;a href=&#34;http://www.system76.com&#34;&gt;System76&lt;/a&gt; when possible, but buying used business hardware, such as thinkpads, is a very affordable alternative. I have no regrets buying my used x230. It is infinitely better than my other options at that price point.&lt;/p&gt;

&lt;h3 id=&#34;update&#34;&gt;Update&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;I have taken so long to publish this post, I am actually now using Arch Linux on the x230. It also runs great :)&lt;/em&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Trying out snapd on Arch Linux</title>
      <link>http://ryan.himmelwright.net/post/snapd-on-arch/</link>
      <pubDate>Sun, 17 Jul 2016 00:00:00 +0000</pubDate>
      
      <guid>http://ryan.himmelwright.net/post/snapd-on-arch/</guid>
      <description>&lt;p&gt;The past few weeks I have been listening to all of the buzz about
Ubuntu &amp;ldquo;snaps&amp;rdquo;, but I just recently decided to try this new technology
out.&lt;/p&gt;

&lt;h3 id=&#34;snapd-install-and-setup&#34;&gt;Snapd Install and Setup&lt;/h3&gt;

&lt;p&gt;I decided to install snapd on my small netbook (Abra), which is running Arch
Linux. So, installing snapd was as easy as running:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;pacaur -S snapd&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Now, I use pacaur so that I can install packages from Arch Linux&amp;rsquo;s
main repos, as well as the AUR. However, because snapd has actually
been moved to the community repos, you can install it with vanilla
pacman, without aur support.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;sudo pacman -S snapd&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;After snapd is installed, it needs to be started. To start the snapd
service, just use systemd:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;sudo systemctl start snapd&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Additionally, If you want to start the snapd service automatically
after a reboot run the command:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;sudo systemctl enable snapd&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&#34;using-snap&#34;&gt;Using snap&lt;/h3&gt;

&lt;p&gt;After snapd was installed and running, I started
playing with the snap application. The first thing I should note is
that to the extent of my knowledge, snap has to be run as root (at
least for now). So my commands all start with &lt;code&gt;sudo&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;First, I wanted to find a snap package. This can be done using the
&lt;code&gt;snap find&lt;/code&gt; command as follows:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;sudo snap find package-name&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;(where &lt;strong&gt;package-name&lt;/strong&gt; is the name of the package to search)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;img alt= &#34;Finding Snaps&#34; src=&#34;../../img/posts/arch-snaps/snap-find.png&#34; style=&#34;max-width: 100%;&#34;/&gt;&lt;/p&gt;

&lt;p&gt;Just like in any standard package manager search, the potential
matches were returned, along with a version number, the developer
name, and a summary.&lt;/p&gt;

&lt;p&gt;Snap has several other commands. To see a full list of available snap
commands and a description for each one, just type:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;sudo snap help&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img alt=&#34;Snap Help&#34; src=&#34;../../img/posts/arch-snaps/snap-help.png&#34; style=&#34;max-width: 100%;&#34;/&gt;&lt;/p&gt;

&lt;h3 id=&#34;testing-a-snap&#34;&gt;Testing a snap&lt;/h3&gt;

&lt;p&gt;After learning about the basic snap commands, I wanted to install a
snap to see how well it works. I decided to see if there was a
Telegram snap (I heard there was, so it was a good bet). I ran
&lt;code&gt;sudo snap find telegram&lt;/code&gt;, and a list of my options appeared.&lt;/p&gt;

&lt;p&gt;&lt;img alt=&#34;Snap telegram&#34; src=&#34;../../img/posts/arch-snaps/snap-telegram-install.png&#34; style=&#34;max-width: 100%;&#34;/&gt;&lt;/p&gt;

&lt;p&gt;I choose the last one, and installed it using the command
&lt;code&gt;sudo snap install telegram-serguisens&lt;/code&gt;. A progress bar tracked the download of
the snap, and then the installation. That was it. To my delight,
within a few seconds the Ubuntu &lt;code&gt;snap&lt;/code&gt; application had downloaded the
telegram snap, and installed it on my &lt;em&gt;arch linux&lt;/em&gt; box, without any issue.&lt;/p&gt;

&lt;h3 id=&#34;my-only-issue&#34;&gt;My Only Issue&lt;/h3&gt;

&lt;p&gt;&lt;img alt=&#34;Snap Help&#34; src=&#34;../../img/posts/arch-snaps/snap-telegram-menu.png&#34; style=&#34;max-width: 100%;&#34;/&gt;&lt;/p&gt;

&lt;p&gt;Well&amp;hellip; &lt;em&gt;almost&lt;/em&gt; without any issues. The one problem I did have was
after installing the telegram snap, the executable wasn&amp;rsquo;t in my path so
I couldn&amp;rsquo;t start it from my launcher or even a terminal. I think this
was actually because snapd wasn&amp;rsquo;t setup fully. I rebooted my computer
and telegram now launches just fine. The snap is even identified with
its full name (&lt;em&gt;telegram-serguisens&lt;/em&gt;), so I can be sure it is the
actual snap, and not another Telegram install.&lt;/p&gt;

&lt;h3 id=&#34;thoughts&#34;&gt;Thoughts&lt;/h3&gt;

&lt;p&gt;&lt;img alt=&#34;Snap Help&#34; src=&#34;../../img/posts/arch-snaps/snap-telegram.png&#34; style=&#34;max-width: 100%;&#34;/&gt;&lt;/p&gt;

&lt;p&gt;While the fact that snaps are easy to package and install for
developers and users alike, I think my favorite feature was something
that I didn&amp;rsquo;t even think about prior to trying it out, and I might not
of realized had I installed snapd on another computer&amp;hellip;&lt;/p&gt;

&lt;p&gt;This little computer is low power, and tends to heat up and go crazy
when I install certain packages (particularly ones from the
AUR). Sometimes it is so bad that I have to kill the installation and
forego that application for awhile. Telegram is one of them. I think
this is because the aur build pulls down the telegram .deb package and
then has to extract and compile it in order to install it on
Arch. This little computer doesn&amp;rsquo;t like that. The snap however, seems
to of just download and installed itself. It hardly pegged my CPU at
all. If this is true, snaps might have an additional use-case on weaker
hardware, like my netbook. (yes, I know snaps might have a bigger disk
footprint, but honestly that trade-off is fine with me)&lt;/p&gt;

&lt;p&gt;I think the universal application frameworks are a great idea that is
very much needed on Linux. Snapd is very promising and I look forward
to seeing what it and other solutions have in store for the future of
Linux.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Trying Out the Plasma 5 Desktop Environment</title>
      <link>http://ryan.himmelwright.net/post/trying-out-plasma5/</link>
      <pubDate>Sun, 26 Jun 2016 00:00:00 +0000</pubDate>
      
      <guid>http://ryan.himmelwright.net/post/trying-out-plasma5/</guid>
      <description>&lt;p&gt;After watching the continued development of the Plasma 5 desktop
environment from a distance, I determined I needed to give it another
try. It was just before version 5.6 was released, and the project
appeared to be finding it&amp;rsquo;s stride. Right up front, I want to come
clean and admit that I have never really liked the KDE/Plasma desktop
environment (more on that below). However, with that said&amp;hellip; I am still
using the plasma desktop on my main computer (months later, and
haven&amp;rsquo;t aborted yet**&amp;hellip;). Here are my thoughts.&lt;/p&gt;

&lt;h3 id=&#34;my-history-with-kde-plasma&#34;&gt;My History with KDE/Plasma&lt;/h3&gt;

&lt;p&gt;Now, as I said above, &lt;em&gt;I have never really liked KDE (now Plasma)&lt;/em&gt;. In
fact, sometimes I down right &lt;em&gt;hated&lt;/em&gt; it. It is a great project, and I
&lt;em&gt;wanted&lt;/em&gt; to like it. It has so many features and is amazing
for power users. I have tried it again and again, desperately wanting
to be swept off my feet, but it&amp;rsquo;s design always kept me bolted to the
ground. The theming made me feel like I was using a Fisher-Price
operating system (which is ironic, because like I said&amp;hellip; the plasma
desktop is probably one of the best power user environments out
there). The bulky features always made it feel childish. So, with that
said&amp;hellip; I have been using using the Plasma desktop on all of my
personal computers for several months. Here are my thoughts.&lt;/p&gt;

&lt;h3 id=&#34;pros&#34;&gt;Pros&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;The theming has come a long way&lt;/strong&gt;. It no longer looks like a
child&amp;rsquo;s toy. Even the default theme is &lt;em&gt;very&lt;/em&gt; appealing. Also, it
has &lt;em&gt;dark themes&lt;/em&gt;, which I am always a fan of.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&#34;../../img/posts/plasma-desktop/default-plasma.jpg&#34;&gt;&lt;img alt=&#34;Default KDE Plasma 5.6 Desktop&#34; src=&#34;../../img/posts/plasma-desktop/default-plasma.jpg&#34; style=&#34;max-width: 100%;&#34;/&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;I Love the customization.&lt;/strong&gt; I love the level of customization
the plasma desktop allows. I can set transparency, add/remove
panels or widgets, set custom keybindings (very important to me),
and a bunch of other operations very easily.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&#34;../../img/posts/plasma-desktop/settings.jpg&#34;&gt;&lt;img alt=&#34;Plasma Settings&#34; src=&#34;../../img/posts/plasma-desktop/settings.jpg&#34; style=&#34;max-width: 100%;&#34;/&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Lets me hide window bars&lt;/strong&gt; One customization I love is the ability
to hide the window bars. I am not a fan of window bars, because I
think they look clunky and just take up space. One feature I like
about many tiling window managers is it is usually very easy to hide
the window bars. However, that isn&amp;rsquo;t always the case in Desktop
Environments, but I was pleased with how easy it was to do it in
Plasma.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;It Lets me create an awesome-wm environment, but as a full DE&lt;/strong&gt;
Similar to above, I am able to implement some of the features I love
about tiling window managers like awesome and i3, but with the full
desktop environment. In addition to removing window bars, I like to
easily move and resize windows by hitting the meta or alt key and
left/right clicking the windows. Again, in Plasma this was simple.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;I love krunner. A lot.&lt;/strong&gt; I like using application launchers, and
krunner looks nice, is lightning fast, and gets the job done. I
didn&amp;rsquo;t really know much about krunner during previous attempts at
using KDE. This was definitely contributor to why I liked it much
more this time around.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&#34;../../img/posts/plasma-desktop/krunner.png&#34;&gt;&lt;img alt=&#34;Plasma Settings&#34; src=&#34;../../img/posts/plasma-desktop/krunner.png&#34; style=&#34;max-width: 100%;&#34;/&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;The ability to use old-school animations is fun&lt;/strong&gt; There is not much to say
here. While not very practical, sometimes spinning a desktop cube is
just straight up &lt;em&gt;fun&lt;/em&gt;.
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&#34;../../img/posts/plasma-desktop/cube.png&#34;&gt;&lt;img alt=&#34;Desktop Cube&#34; src=&#34;../../img/posts/plasma-desktop/cube.png&#34; style=&#34;max-width: 100%;&#34;/&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Fast. Even for a full DE&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;cons&#34;&gt;Cons&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Multi-monitor support. WTF.&lt;/strong&gt; This was by far the biggest issue I
had. My main computer is a 17&amp;rdquo; laptop that I connect to two 24&amp;rdquo;
displays. However, because it is a indeed a laptop, I sometimes move
it around and be semi-mobile with it. This requires disconnecting the
monitors and going from 1 screen to 3 or vice-versa. Well it turns
out that this is usually a pain in the ass for me in Plasma. First,
I have to configure the monitors one-by-one, hitting &amp;ldquo;apply&amp;rdquo; between
each configuration (it doesn&amp;rsquo;t like when I try to move and place all
3 displays in one swoop). Second, once I setup the screen placement,
the panels often go crazy and can&amp;rsquo;t be found, or I have to play
with them to set them up correctly. Lastly, sometimes the displays
overlap each other oddly, even though they appear normal in the
display settings. The wallpapers almost never set correctly and my
right-click menu is disabled on some screens but not
others. Basically, it&amp;rsquo;s just a hot mess and the most infuriating
problem I faced when using Plasma. If I used a laptop without
monitors, or even a permanent desktop setup, I would be
fine. However, that is not my use case.
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&#34;../../img/posts/plasma-desktop/wtf-multi-monitor.png&#34;&gt;&lt;img alt=&#34;Plasma Settings&#34; src=&#34;../../img/posts/plasma-desktop/wtf-multi-monitor.png&#34; style=&#34;max-width: 100%;&#34;/&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Randomly just stops working&lt;/strong&gt; Sometimes, KDE applications just
crash and I can&amp;rsquo;t seem to get them back. Widgets seemed to beak
things more frequently, so I just stopped using them. (Again, not a
good solution)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;A full DE&lt;/strong&gt; While I said above that it was nice having an
environment that resembled a window manager, but had the benefit of
the full suite of applications that come with a desktop environment,
sometimes it was also a pain. There&amp;rsquo;s just a lot of crap that I
don&amp;rsquo;t use. The obvious reminder of this was when I would run
&lt;code&gt;pacman -Syu&lt;/code&gt;, and see that the massive KDE stack would need
updates.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Sometimes all the settings can be very confusing&lt;/strong&gt; Having all
these options is great, but sometimes it was
overwhelming. Additionally, the settings felt disjointed and I
didn&amp;rsquo;t know where the settings for some things where.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;final-thoughts&#34;&gt;Final Thoughts&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;I can finally use Plasma&lt;/li&gt;
&lt;li&gt;Very fast and lightweight for all that it is&lt;/li&gt;
&lt;li&gt;Still has a bit of stability/polish work to go&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;** &lt;i&gt;Update: I took forever to get this post out and I have actually
moved off of Plasma. I just couldn&amp;rsquo;t handle the multi-monitor issues I
had. However, I will definitely be trying out the Desktop Environment
again in the future (I moved to i3-gaps for now. I love my tiling
window managers :) )&lt;/i&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Back On Arch, After Frantic Distro-hopping</title>
      <link>http://ryan.himmelwright.net/post/back-on-arch/</link>
      <pubDate>Sun, 13 Mar 2016 00:00:00 +0000</pubDate>
      
      <guid>http://ryan.himmelwright.net/post/back-on-arch/</guid>
      <description>&lt;p&gt;In the last few weeks, I have started my CS masters classes, and needed to setup a productive work environment on my portable laptop (abra). Also, while I love Fedora, the Nvidia stuff was being a pain on my main computer (alakazam), and I was looking for a replacement there as well. So, after a long, drawn out battle trying nearly all of my favorite Linux distros, I have found myself once again using &lt;a href=&#34;https://www.archlinux.org/&#34;&gt;Arch Linux&lt;/a&gt; on both of my personal computers.&lt;/p&gt;

&lt;p&gt;&lt;a name=&#34;fedora&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;from-fedora&#34;&gt;From Fedora&amp;hellip;&lt;/h2&gt;

&lt;p&gt;&lt;img alt=&#34;Fedora&#34; src=&#34;../../img/posts/back-on-arch/fedora-logo.png&#34; style=&#34;max-width: 100%;&#34;/&gt;&lt;/p&gt;

&lt;p&gt;When I started my journey, I had Fedora on both of my computers. I really like the &lt;a href=&#34;https://getfedora.org&#34;&gt;Fedora Project&lt;/a&gt; and I think Fedora is a great distribution with a lot of innovative new features. I seems that the Fedora Project is aiming to be the Linux Distro for developers, and I feel that they are really starting to hit that target.&lt;/p&gt;

&lt;p&gt;There is one remaining big issue I had while running Fedora on my main computer. Nvidia drivers. They are just a pain to maintain, and kept breaking my system during updates. I know the &lt;a href=&#34;http://rpmfusion.org/&#34;&gt;RPM Fusion Repos&lt;/a&gt; are supposed to help, but they just aren&amp;rsquo;t there yet. With my classes starting, I needed something that was a bit more stable (and would hopefully support installing VMWare Workstation 9).&lt;/p&gt;

&lt;p&gt;&lt;a name=&#34;ubuntu&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;the-easy-stability-of-ubuntu-based&#34;&gt;The &amp;lsquo;Easy Stability&amp;rsquo; of Ubuntu-based?&lt;/h2&gt;

&lt;p&gt;&lt;img alt=&#34;Ubuntu Mate&#34; src=&#34;../../img/posts/back-on-arch/ubuntu-mate-logo.png&#34; style=&#34;max-width: 100%;&#34;/&gt;&lt;/p&gt;

&lt;p&gt;Guided by desires to have a &amp;ldquo;stable&amp;rdquo; distro, I decided that the &lt;em&gt;obvious&lt;/em&gt; answer would be to use an &lt;a href=&#34;http://www.ubuntu.com/&#34;&gt;Ubuntu&lt;/a&gt;-based distro. So, I went with &lt;a href=&#34;https://ubuntu-mate.org/&#34;&gt;Ubuntu Mate&lt;/a&gt;, based on the &lt;em&gt;awesome&lt;/em&gt; work the team has done recently. I&amp;rsquo;ve used Ubuntu Mate in the past on several different computers, and in fact, still have it running on (charmander). I had some issues installing Ubuntu Mate on alakazam for some reason, but using a simple &lt;code&gt;nomodeset&lt;/code&gt; at boot seemed work.&lt;/p&gt;

&lt;p&gt;After I got it installed, I was able to install the nvidia drivers, but I had other random issues here and there. I also tried installing VMWare, but had issues at every step. To be completely honest, I really wasn&amp;rsquo;t feeling using an Ubuntu distro on alakazam. If I was going to be replacing Fedora, I wanted to make up for it by using something that gave me more power (I&amp;rsquo;ve started to get the itch to try out Gentoo again. Spoiler, I am not using Gentoo. At least until my class is over&amp;hellip;). While Ubuntu could easily support my needs being the well supported and advanced distro that it is &amp;hellip; I craved something else.&lt;/p&gt;

&lt;p&gt;&lt;a name=&#34;opensuse&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;leaping-to-suse&#34;&gt;Leaping to Suse?&lt;/h2&gt;

&lt;p&gt;&lt;img alt=&#34;OpenSuse Linux&#34; src=&#34;../../img/posts/back-on-arch/opensuse-logo.png&#34; style=&#34;max-width: 100%;&#34;/&gt;&lt;/p&gt;

&lt;p&gt;During my last few months on Fedora, I took notice of another rpm distro that was  making noise in the Linux community: &lt;a href=&#34;https://www.opensuse.org/&#34;&gt;OpenSuse&lt;/a&gt;. Specifically, the new &lt;a href=&#34;https://software.opensuse.org/421/en&#34;&gt;OpenSuse Leap&lt;/a&gt; piqued my interest. I had played with it in a VM a few days earlier and liked what I saw. The OpenSuse installer along with the YaST configuration tool makes it &lt;em&gt;stupid easy&lt;/em&gt; to setup powerful and advanced features in Linux. Want to setup a KVM virtualization environment or a samba share? You basically just have to click a button. Testing out &lt;a href=&#34;https://en.opensuse.org/Portal:Snapper&#34;&gt;Snapper&lt;/a&gt; was also slick. I wish more distributions would start to include tools like snapper, built in.&lt;/p&gt;

&lt;p&gt;Leap was a solid and extensive distribution. Ultimately though, that was the biggest qualm I had with it: there was a lot going on. I did not know what many of the pre-installed configuration tools were. Normally, I am fine with learning new tools, but I wanted a distribution that I could set up and get to work. OpenSuse had &lt;em&gt;too many&lt;/em&gt; &amp;ldquo;toys&amp;rdquo; already in it. I would not be able to resist spending hours learning everything. Ironically, my other complaint was that some of the applications I &lt;em&gt;did&lt;/em&gt; want, were not easily available. Often, they were not included in the default repositories, and while many application websites will provide a *.deb download, *.rpms are a bit more scarce. I know there is the wonderful &lt;a href=&#34;https://build.opensuse.org/&#34;&gt;openSuse Build Service&lt;/a&gt;, but like &lt;a href=&#34;https://copr.fedorainfracloud.org/&#34;&gt;Fedora&amp;rsquo;s copr build system&lt;/a&gt;, I often found it to be hit or miss. Both do a good job at addressing a major issue in their respective distributions, but neither isn&amp;rsquo;t quite to the level of &amp;hellip; well, the &lt;a href=&#34;https://aur.archlinux.org/&#34;&gt;AUR&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a name=&#34;antegeros&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;antegeros&#34;&gt;Antegeros&lt;/h2&gt;

&lt;p&gt;&lt;img alt=&#34;Antegeros Linux&#34; src=&#34;../../img/posts/back-on-arch/antergos-logo.png&#34; style=&#34;max-width: 100%;&#34;/&gt;&lt;/p&gt;

&lt;p&gt;Which brings me to &lt;a href=&#34;https://en.wikipedia.org/wiki/Antergos&#34;&gt;Antergos&lt;/a&gt;. By this point, I was no longer able to hide the fact that I was starting to severely miss many features a distribution like &lt;a href=&#34;https://www.archlinux.org/&#34;&gt;Arch Linux&lt;/a&gt; provides. I love that you can easily customize just about &lt;em&gt;anything&lt;/em&gt;. I also appreciate that if I want to try something new, 99% of the time the latest version is already in the official repos or the &lt;a href=&#34;https://aur.archlinux.org/&#34;&gt;AUR&lt;/a&gt;. Additionally, when I am trying a new application, or customizing my setup, the &lt;a href=&#34;https://wiki.archlinux.org/&#34;&gt;Arch Wiki&lt;/a&gt; has some of &lt;em&gt;the best documentation&lt;/em&gt; in the Linux ecosystem. However, I wanted something that I could just install and have working. I didn&amp;rsquo;t feel like going through a full vanilla Arch install. So I installed Antergos. Antergos has a simple but thorough installer that pulls down all the latest packages during the installation. This leaves the user with an up-to-date and &lt;em&gt;gorgeous&lt;/em&gt; setup after installation.&lt;/p&gt;

&lt;p&gt;Unfortunately, the &amp;ldquo;simplicity&amp;rdquo; of Antergos (which is sort of the antithesis to the definition of &lt;em&gt;simplicity&lt;/em&gt; in &lt;a href=&#34;https://wiki.archlinux.org/index.php/Arch_Linux#Simplicity&#34;&gt;The Arch Way&lt;/a&gt;) always seems to bite me in the end. Eventually, &lt;em&gt;something&lt;/em&gt; breaks, and I have a hard time figuring out &lt;em&gt;what&lt;/em&gt;. While it might be a pain to install &lt;em&gt;everything&lt;/em&gt; in vanilla Arch, the user &lt;em&gt;&amp;ldquo;has a much fuller understanding of his or her system&lt;/em&gt;&amp;rdquo; as a result. A few years ago, when I first started using Arch, I thought this argument just stupid gray beard nonsense. Now, I appreciate the benefits of this sentiment, and even agree with it (I&amp;rsquo;ve also learned to script my post install process, so it is less of a pain :P).&lt;/p&gt;

&lt;p&gt;After a few days of fighting with Antegeros, I decided to just bite the bullet and install Vanilla Arch. I still think Antegros is a great distribution that works for a bunch of people. It is great for users that want to experience the power of arch Linux, without having to go through all the overhead. Antegeros is actually how I started to learn Arch Linux. Nowadays though, I seem to prefer &lt;em&gt;simplicity&lt;/em&gt; of vanilla Arch.&lt;/p&gt;

&lt;p&gt;&lt;a name=&#34;arch&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;all-roads-lead-to-arch&#34;&gt;All Roads Lead to Arch&lt;/h2&gt;

&lt;p&gt;&lt;img alt=&#34;Arch Linux&#34; src=&#34;../../img/posts/back-on-arch/arch-logo.png&#34; style=&#34;max-width: 100%;&#34;/&gt;&lt;/p&gt;

&lt;p&gt;I have been running Arch on both of my personal laptops for several weeks now. Arch doesn&amp;rsquo;t magically solve all of my issues, but it makes &lt;em&gt;fixing&lt;/em&gt; them much easier. If something isn&amp;rsquo;t working, the combination of the wiki and the community make the problem &lt;em&gt;much&lt;/em&gt; more approachable. Additionally, the rolling release model appears to mitigate bug-related issues, instead of cause them. For example, I installed Arch on alakazam first, but left Ubuntu Mate on abra (my portable laptop). I did this because my school has a weird network setup that is often difficult to connect to. After searching for hours, I determined that my issues under Ubuntu were caused by a known, but unfixed, bug in my version of network manager. I did not feel like dealing with this, so I installed arch. My internet at school works works fine now. I was able to use the wiki to properly configure my settings, and I was good to go. (Side-note: I never fully got VMWare 9 to work properly on any of my distros, but I came closest with Arch.)&lt;/p&gt;

&lt;p&gt;&lt;a href= &#34;../../img/posts/back-on-arch/abra-screen.png&#34;&gt;&lt;img alt=&#34;Abra with Arch and Awesome WM&#34; src=&#34;../../img/posts/back-on-arch/abra-screen.png&#34; style=&#34;max-width: 100%;&#34;/&gt;&lt;/a&gt;
&lt;em&gt;Abra running Arch Linux with the &lt;a href=&#34;http://awesome.naquadah.org/&#34;&gt;Awesome&lt;/a&gt; window manager&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Being back on arch has been great. I love using tiling window managers like i3, dwm, xmonad, stumpwm, and awesome. While this this is possible on all distributions, it is much easier on arch. Starting with a blank slate, and (again) having the wiki makes setting up alternative desktop environments and window managers a breeze. I now have a &lt;em&gt;very&lt;/em&gt; productive work environment that is tailored to my needs. While Arch Linux might not be a traditional &amp;ldquo;stable&amp;rdquo; distribution, I have found it to be much more durable for my use-case.&lt;/p&gt;

&lt;p&gt;I am planning to stay on Arch for awhile. That being said, I really did enjoy all the other distributions I tried out. Each one seems to be carving out a niche in the Linux environment:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Fedora is becoming a great distribution for Linux developers. In fact, I still have Fedora 23 (Server Edition) running on my home server. Assuming that the upgrade to 24 goes smoothly (my upgrade from 22 -&amp;gt; 23 went great, thanks to &lt;a href=&#34;https://fedoraproject.org/wiki/Features/DNF&#34;&gt;dnf&lt;/a&gt;), I see no reason to switch.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;OpenSuse Leap is a solid distribution that is great for power users that want a turn-key distribution with all the bells and whistles. I think it is especially geared toward people with system administration backgrounds.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Ubuntu Mate is really the best distribution out there for people that want a classic feeling Linux environment, with a modern flair. It is what Ubuntu would be if it never left gnome 2. It is also great for low resource hardware, particularly boards like the &lt;a href=&#34;https://www.raspberrypi.org/&#34;&gt;raspberry pi&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Antegros is fantastic for Arch users that hate the Arch install. It is also great for people that want to move to Arch, but aren&amp;rsquo;t yet comfortable with tools like pacman.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It is great to see all the distributions finally finding their groove. This isn&amp;rsquo;t something I could say about Linux 2 years ago. As I have already stated, I plan to stay on Arch Linux for the time being, but I am very excited to continue trying out the new releases of the all distributions listed above. With so many great options, it really is a great time to be a Linux user :) .&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
