<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Software on λ ryan. himmelwright. net</title>
    <link>http://ryan.himmelwright.net/tags/software/</link>
    <description>Recent content in Software on λ ryan. himmelwright. net</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 31 Dec 2019 00:00:00 +0000</lastBuildDate>
    
        <atom:link href="http://ryan.himmelwright.net/tags/software/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Challenge - 30 Days with macOS</title>
      <link>http://ryan.himmelwright.net/post/macos-challenge/</link>
      <pubDate>Tue, 31 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>http://ryan.himmelwright.net/post/macos-challenge/</guid>
      <description>&lt;p&gt;I have used many operating systems on my computers over the years, including
decades worth of Windows versions, tons of Linux distros, several BSDs, iOS,
Android, and even chromeOS. While I am familiar with using macOS
(I often used the school Macs in college, and my wife had a Macbook Air
throughout medical school), it is the one OS I have never tried as my &lt;em&gt;personal&lt;/em&gt;
daily driver. After switching to an iPhone and &lt;a href=&#34;../../post/getting-an-ipad/&#34;&gt;getting an
iPad&lt;/a&gt; this year&amp;hellip; I
decided to give macOS a spin.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;(Fun fact: I first learned about Linux while attempting to Hackintosh my
laptop in high school.)&lt;/em&gt;&lt;/p&gt;

&lt;h3 id=&#34;the-challenge&#34;&gt;The Challenge&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;Using a mac as the interface device during my personal computing, for 30 days.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Here, &amp;ldquo;interface computer&amp;rdquo; means the device that I sit at and interact with.
For example, I might be sitting at macOS and using it for my web browsing and
music, but working on a project on my linux workstation via a mosh/tmux session
in iTerm. I can use remote Linux computers as much as I please, but should
connect to them through macOS.&lt;/p&gt;

&lt;p&gt;One thing to note is that I still used Desktop Linux as my &amp;ldquo;interfacing
computer&amp;rdquo; for work.&lt;/p&gt;

&lt;h3 id=&#34;why&#34;&gt;Why&lt;/h3&gt;

&lt;p&gt;At home, I don&amp;rsquo;t mind iOS and macOS teaming up to make my &amp;ldquo;normal person&amp;rdquo;
computing (web browsing, video chatting, emails, and online courses)
easier. I still deeply care about working with Linux at home, but exclusively
on the backend. So having the front end get out of the way, and not tempt me
with the ability to fine-tune it, is a good thing (&lt;em&gt;for me&lt;/em&gt;, currently).&lt;/p&gt;

&lt;p&gt;&lt;em&gt;(While I&amp;rsquo;ve slowed down &lt;a href=&#34;https://www.urbandictionary.com/define.php?term=distrohopper&#34;&gt;distro
hopping&lt;/a&gt; the last
few years,&amp;hellip; I have still been swapping my desktop environment every other
month).&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Right now, I am really only interested in using macOS for my personal
computing.  At work, I don&amp;rsquo;t need my computer to be in step with my personal
phone and/or ipad. In fact, I like having that barrier there. Also, Linux works
REALLY well for the work I do, especially when it comes to running VMs (I love
&lt;code&gt;libvirt&lt;/code&gt;). So, there currently isn&amp;rsquo;t a reason (or even a desire) to switch
there.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Side Note:&lt;/em&gt;&lt;/strong&gt; I actually wouldn&amp;rsquo;t even consider this challenge if I didn&amp;rsquo;t
get to use Linux so much at work every day, or if I didn&amp;rsquo;t have my Linux
desktop/workstation at home. I already ssh into my desktop to work
from my other devices. In fact, I technically remote into my desktop even when
I&amp;rsquo;m working &lt;em&gt;at&lt;/em&gt; it, since I do everything in a &lt;a href=&#34;https://podman.io&#34;&gt;container&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&#34;observations&#34;&gt;Observations&lt;/h3&gt;

&lt;p&gt;Now that I&amp;rsquo;ve spent a few weeks in macOS, lets break down some observations I
had.&lt;/p&gt;

&lt;h4 id=&#34;stuff-i-didn-t-like&#34;&gt;Stuff I didn&amp;rsquo;t like&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;The elephant in the room… it&amp;rsquo;s very proprietary. I still love open source and
using something that&amp;rsquo;s as locked down and secretive as macOS (and Apple
products in general) feels, well&amp;hellip; &lt;em&gt;dirty&lt;/em&gt;.
&lt;center&gt;
&lt;a href=&#34;../../img/posts/macos-challenge/joplin-error.png&#34;&gt;
&lt;img alt=&#34;joplin error&#34; src=&#34;../../img/posts/macos-challenge/joplin-error.png&#34; style=&#34;max-width: 100%; padding: 5px 15px 10px 10px&#34;/&gt;&lt;/a&gt;
&lt;div class=&#34;caption&#34;&gt;Error while trying to run Joplin&lt;/div&gt;
&lt;/center&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;I had trouble getting some applications like &lt;a href=&#34;../../post/switched-to-joplin-notes/&#34;&gt;Joplin&lt;/a&gt; to work. I later learned that it was likely due to issues with signing the applications in Catalina (I think). Apparently, there is a work-around for this.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;There surprisingly isn’t a great solution for &lt;a href=&#34;https://virt-manager.org&#34;&gt;virt-manager&lt;/a&gt;. I was able to install it using homebrew, but have to launch it from the terminal. I guess I might be able to setup an application launcher for it? I&amp;rsquo;m just surprised there isn&amp;rsquo;t a better solution on mac, or at least one that&amp;rsquo;s easy to find&amp;hellip;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;On that note, it is &lt;em&gt;wonderful&lt;/em&gt; that &lt;a href=&#34;https://brew.sh&#34;&gt;brew&lt;/a&gt; exists, but it confuses the hell out of me (What&amp;rsquo;s a &lt;code&gt;cask&lt;/code&gt;? Is it like a &lt;a href=&#34;https://dnf.readthedocs.io/en/latest/command_ref.html#group-command-label&#34;&gt;&lt;code&gt;dnf group&lt;/code&gt;&lt;/a&gt; install?). This is most likely because I am new to it, but in my opinion, I still think it is nowhere near as nice as default Linux package managers. This is one area where using Linux for so long has definitely spoiled me.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Working with filesystems is a pain, especially when connecting to network devices. I couldn’t use Finder to do an easy network connection without first setting up samba or nfs on my Linux computers. While I ideally want to setup a proper samba/nfs server on my desktop/server in the long run anyway, it was annoying that it couldn’t just mount the system in the file browser, using something like &lt;code&gt;sftp&lt;/code&gt; under the hood like Linux does..&lt;/p&gt;

&lt;p&gt;&lt;center&gt;
&lt;video style=&#34;max-width:100%;&#34; controls&gt;
&lt;source src=&#34;../../img/posts/macos-challenge/network-connect.mp4&#34; type=&#34;video/mp4&#34;&gt;
&lt;/video&gt;
&lt;div id=&#34;caption&#34;&gt;Connecting to a remote server&amp;rsquo;s filesystem from the
file browser in Gnome (Linux)&lt;/div&gt;
&lt;/center&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Window management isn’t great out of the box. I had to buy &lt;a href=&#34;https://apps.apple.com/us/app/magnet/id441258766?mt=12&#34;&gt;magnet&lt;/a&gt; to snap/tile my windows. (Alternatively for touch-bar mac users, note that &lt;a href=&#34;https://folivora.ai&#34;&gt;better touch tool&lt;/a&gt; has window snapping and other features built in). Also, I can’t seem to hold a key and click a window anywhere to resize/move like I can in most linux DEs.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;My desktop workspaces keep changing their order on me (ಠ_ಠ).&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Deviating from the stock experience can become painful.  Don&amp;rsquo;t like using a global menubar, and a dock for applications?&amp;hellip; sorry?
I&amp;rsquo;m sure there are third-party ways to get around it, but they are likely
hacky and not guaranteed to always work across new versions of macOS.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;stuff-i-liked&#34;&gt;Stuff I liked&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;I  am actually starting to like the CMD-centric shortcuts. They work everywhere and are nice when working in a terminal (which I do all the time).&lt;/li&gt;
&lt;li&gt;Default keybindings, while different from what I’m used to are intuitive, and consistent across the system. There are not many that are crazy. For example, on Windows/Linux systems, the keybinding to close a window usually defaults to &lt;code&gt;Alt+F4&lt;/code&gt;, so I normally change it to &lt;code&gt;Super+Shift+Q&lt;/code&gt;. While not the exact same as what I do, the macOS default of &lt;code&gt;CMD+Q&lt;/code&gt; is close enough that I&amp;rsquo;ve been able to easily adapt to it, without feeling the need to figure out how to change it. It&amp;rsquo;s a similar story across most of the default keybindings. They aren&amp;rsquo;t exactly how I&amp;rsquo;ve been setting mine up, but close enough that I&amp;rsquo;m fine with accepting them as is.&lt;/li&gt;
&lt;li&gt;iCloud syncing has been nice. Specifically for photos, TODOs, and notes.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&#34;../../img/posts/macos-challenge/phonecall.png&#34;&gt;
&lt;img alt=&#34;Receiving and answering a phonecall in macOS&#34; src=&#34;../../img/posts/macos-challenge/phonecall.png&#34; style=&#34;float: right; max-width: 100%; padding: 5px 15px 10px 10px&#34;/&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;I like being able to answer &lt;em&gt;all&lt;/em&gt; phone calls from my computer.
I hate talking on the phone. Oddly
enough, I don&amp;rsquo;t mind voice chat on the computer, so this works out really
well for me. Synced iMessage and Facetime are also nice, but universal
&lt;em&gt;normal&lt;/em&gt; phone calls is what I particularly enjoy.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Profiles. Specifically, setting up something like my
&lt;a href=&#34;https://www.fastmail.com&#34;&gt;Fastmail&lt;/a&gt; account in the mail app
was SUPER easy because of this. I basically just downloaded the profile
from fastmail and opened it with mail, and everytihng was setup. That&amp;rsquo;s it.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;I find the UI to be really space respecting. In addition to a global menu, title bars on windows are thin and minimal. Combined with scaled font sizes, a lot less space is wasted, especially compared to Gnome.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&#34;../../img/posts/macos-challenge/header-bar-comparison-stacked.png&#34;&gt;
&lt;img alt=&#34;macOS header bars compared to Gnome&#34; src=&#34;../../img/posts/macos-challenge/header-bar-comparison-stacked.png&#34; style=&#34;max-width: 100%; padding: 5px 15px 10px 10px&#34;/&gt;&lt;/a&gt;
&lt;div class=&#34;caption&#34;&gt;I find macOS to be much more space efficient than Gnome&lt;/div&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Videos just work without configuring anything/switching back and forth between Wayland and X sessions. I have faith that wayland will mature to this point eventually, but its nice to already have it in macOS.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Gestures are fluid and intuitive. Even on the old MacBook air, the trackpad
is amazing.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Settings like screentime work across all my “front-end devices”. If I set a downtime for 8:30pm, it boots me off all my devices&amp;hellip; and I get to bed earlier.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;macOS comes with a set of well-made core apps (calendar, mail, notes, music,
photos, keynote, garage band, etc). They work for everything I need. If I
want something more advanced, I generally have the full selection of open source and
proprietary apps at my disposal. For example, I&amp;rsquo;ve been using Gimp just
fine on the macbook.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Security does actually seem to be a focus on the system. For example, someone
tried to log into my icloud account from a random location the other week.
In under a minute, from my phone, I was able to unlink my account from all
my devices and change the password.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;future-plans&#34;&gt;Future Plans&lt;/h3&gt;

&lt;p&gt;Overall, I&amp;rsquo;d say this challenge was a success. In fact, it was so successfull,
that I&amp;rsquo;m actually writing up this post on a new &lt;a href=&#34;../../post/new-2019-16inch-mbp/&#34;&gt;base model 16&amp;rdquo; MacBook
Pro&lt;/a&gt; (but more on &lt;em&gt;that&lt;/em&gt; at another time).&lt;/p&gt;

&lt;p&gt;&lt;em&gt;[ Well, I&amp;rsquo;m really writing it on my desktop, but from the macbook pro ;) ]&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;My plan is to use macOS and my iOS
devices to handle my interactive/client computing. I&amp;rsquo;ve enjoyed having my
apple devices take care of all my &amp;ldquo;normal&amp;rdquo; person computer needs over the last
few weeks. It has allowed me to finish up required, but mundane tasks easily
and efficiently, so I can better focus when diving into iTerm to work on
complicated Linux server projects.&lt;/p&gt;

&lt;p&gt;While I do have some reservations about this plan (mostly that my desktop Linux
skills will fade, and that I&amp;rsquo;ll loose respect in the Linux community), I don&amp;rsquo;t
think it should be too much of an issue. At the end of the day, it is most
important that I am able to spend my limited time learning and building in the
areas I want to focus on, which is back-end, rather than front-end Linux. I
want to love all technology, and be able to help people find the best solution
to their problems, no matter what they use. Maybe one day the OS flame wars
will die down and we can all just get along and build cool shit together.. Till
then, wish me luck!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Trying Out Seafile</title>
      <link>http://ryan.himmelwright.net/post/trying-out-seafile/</link>
      <pubDate>Sun, 01 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>http://ryan.himmelwright.net/post/trying-out-seafile/</guid>
      <description>&lt;p&gt;In college, I mostly used Dropbox to handle all of my file syncing needs. As I
approached graduation, I setup an Owncloud droplet (which is now a Nextcloud
instance) to supplant my Dropbox usage. While it has worked fairly well, I&amp;rsquo;ve
been watching &lt;a href=&#34;https://www.seafile.com/en/home/&#34;&gt;seafile&lt;/a&gt; from a distance the
last few years, but haven&amp;rsquo;t taken the time to try it out. I have now.&lt;/p&gt;

&lt;h2 id=&#34;seafile&#34;&gt;Seafile&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;../../img/posts/trying-out-seafile/seafilelogo.png&#34;&gt;&lt;img src=&#34;../../img/posts/trying-out-seafile/seafilelogo.png&#34; style=&#34;max-width: 95%; float: left; margin: 0px 15px 0px 0px;&#34; alt=&#34;Docker ps&#34; /&gt;&lt;/a&gt;
&lt;div class=&#34;caption&#34;&gt;The Seafile Logo&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;As stated on their website:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Seafile is an enterprise file hosting platform with high reliability and
performance. Put files on your own server. Sync and share files across
different devices, or access all the files as a virtual disk.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;While self-defined as an &amp;ldquo;&lt;em&gt;enterprise&lt;/em&gt; file hosting platform&amp;rdquo;, there is a
Community Edition that is &lt;em&gt;Free &amp;amp; Open Source&lt;/em&gt;.. which is exactly how I like my
software. So lets get started.&lt;/p&gt;

&lt;h2 id=&#34;setup&#34;&gt;Setup&lt;/h2&gt;

&lt;p&gt;Similar to a Nextcloud configuration, to get seafile up and running, a server
 component is first installed. Afterwards, clients connect to it.&lt;/p&gt;

&lt;h3 id=&#34;server&#34;&gt;Server&lt;/h3&gt;

&lt;p&gt;The countless number of configurations seafile supports may make setting up the
server component for the first time a bit intimidating. There are several
database back-ends (SQLite, MySQL&amp;hellip;), web servers (Nginx, Apache), and
advanced options (Memcached, LDAP, etc) which can be selected. However, the
seafile developers &lt;em&gt;do&lt;/em&gt; provide an &lt;a href=&#34;https://github.com/haiwen/seafile-server-installer&#34;&gt;installation
script&lt;/a&gt; to easily install
both the Pro and Community editions under Linux. Which is what I used.&lt;/p&gt;

&lt;h4 id=&#34;download&#34;&gt;Download&lt;/h4&gt;

&lt;p&gt;The first step is to download the server application. A link for the
install package can found &lt;a href=&#34;https://www.seafile.com/en/download/#server&#34;&gt;partway down the download
page&lt;/a&gt;. After Downloading, extract
the contents of the package.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;wget https://download.seadrive.org/seafile-server_6.2.5_x86-64.tar.gz
tar xf seafile-server*.tar.gz&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Inside the extracted directory, there are several &lt;code&gt;setup-seafile-*.sh*&lt;/code&gt; scripts.
I just used the basic &lt;code&gt;setup-seafile.sh&lt;/code&gt; one.&lt;/p&gt;

&lt;h4 id=&#34;dependencies&#34;&gt;Dependencies&lt;/h4&gt;

&lt;p&gt;&lt;a href=&#34;../../img/posts/trying-out-seafile/ubuntu-logo.jpg&#34;&gt;&lt;img
src=&#34;../../img/posts/trying-out-seafile/ubuntu-logo.jpg&#34; style=&#34;max-width:
100%; float: right; margin: 5px 10px 10px 10px;&#34; alt=&#34;Ubuntu Logo&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Depending on which setup script it used, and the state of the host machine,
there may be some missing dependencies. While I am sure there is a nice list of
the required dependencies posted &lt;em&gt;somewhere&lt;/em&gt;&amp;hellip; I didn&amp;rsquo;t look for it. If I am
being completely honest&amp;hellip; I just kept repeatedly running the script, and
installed whichever package it yelled at me for each time. Eventually, the install
worked. On my fresh install of Ubuntu 16.04 server, this meant
installing the following dependency packages:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;python-setuptools&lt;/li&gt;
&lt;li&gt;python-imaging&lt;/li&gt;
&lt;li&gt;sqlite3&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This means that on an Ubuntu 16.04 server, a simple &lt;code&gt;sudo apt install python-setuptools
python-imaging sqlite3&lt;/code&gt; should do the trick&amp;hellip;&lt;/p&gt;

&lt;h4 id=&#34;install-script&#34;&gt;Install Script&lt;/h4&gt;

&lt;p&gt;With the dependencies installed, the script should run through without screaming
for missing packages. However, it &lt;em&gt;will&lt;/em&gt; ask for a few pieces of information
including &lt;em&gt;server-name&lt;/em&gt;, &lt;em&gt;server-ip/domain&lt;/em&gt;, &lt;em&gt;data-dir&lt;/em&gt;, and &lt;em&gt;fileserver port&lt;/em&gt;
to install the fileserver component. Answer accordingly.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;../../img/posts/trying-out-seafile/seahub-web.png&#34;&gt;&lt;img src=&#34;../../img/posts/trying-out-seafile/seahub-web.png&#34; style=&#34;max-width: 100%; float: left; margin: 0px 15px 0px 0px;&#34; alt=&#34;Docker ps&#34; /&gt;&lt;/a&gt;
&lt;div class=&#34;caption&#34;&gt;The Seafile Web Client, Seahub&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;After configuring the fileserver, the script will flow right into configuring
&lt;a href=&#34;https://github.com/haiwen/seahub&#34;&gt;Seahub&lt;/a&gt;, the web interface that sits on top
of the fileserver. This part is less needy, and will only require an &lt;em&gt;[Enter]&lt;/em&gt;
press to continue.&lt;/p&gt;

&lt;p&gt;At the end, the script should display useful information about how to
start/stop/reset the servers, as well as what ports each part is running on.&lt;/p&gt;

&lt;h4 id=&#34;run-start&#34;&gt;Run &amp;amp; Start&lt;/h4&gt;

&lt;p&gt;Starting the servers is done by doing what the script says&amp;hellip; run the
following commands:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;./seafile.sh start
./seahub.sh start&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;With the servers running, it may be necessary to configure the firewall to allow
their ports. On Ubuntu 16.04:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo ufw allow &lt;span style=&#34;color:#ae81ff&#34;&gt;8000&lt;/span&gt;/tcp
sudo ufw allow &lt;span style=&#34;color:#ae81ff&#34;&gt;8082&lt;/span&gt;/tcp&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;That&amp;rsquo;s it. With any luck, clients should be able to connect to the server
(assuming the server is reachable from the client computer&amp;hellip; but that&amp;rsquo;s a
lesson for another day).&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Note: The first time seahub is run, it will need to setup an admin account. So
while it was nice and considerate in the last step&amp;hellip; it will insist on being
supplied a username (email) and password for the new admin account. Again, just
comply.&lt;/em&gt;&lt;/p&gt;

&lt;h3 id=&#34;client&#34;&gt;Client&lt;/h3&gt;

&lt;p&gt;The seafile desktop client was trivial to install. It was in the Solus repos, so
I just needed to run &lt;code&gt;sudo eopkg it seafile-client&lt;/code&gt;, and I was done. I also
installed it on my work computers (which unfortunately runs Windows 10), and
even that was simple. I just downloaded and installed the Windows &amp;ldquo;Desktop
Syncing Client&amp;rdquo; at the top of the &lt;a href=&#34;https://www.seafile.com/en/download/&#34;&gt;download
page&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;my-thoughts&#34;&gt;My Thoughts&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;../../img/posts/trying-out-seafile/seafile-client.png&#34;&gt;&lt;img
src=&#34;../../img/posts/trying-out-seafile/seafile-client.png&#34; style=&#34;max-width:
100%; float: right; margin: 0px 0px 0px 0px;&#34; alt=&#34;Seafile Desktop Client&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I have been using seafile as a syncing solution for the past few weeks. After
the initial setup, it has been rather uneventful&amp;hellip; which is a good thing. It
just runs in the background, and I don&amp;rsquo;t really think about it. Exactly what you
want with a syncing solution.&lt;/p&gt;

&lt;p&gt;That being said, I haven&amp;rsquo;t fully dug into all of the details of the application
yet. So, if I incorrectly critique something due to my own ignorance that
simply isn&amp;rsquo;t true, I apologize in advance.&lt;/p&gt;

&lt;h3 id=&#34;what-i-like&#34;&gt;What I Like&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Desktop Client&lt;/strong&gt; - The desktop client is simple. It responds quickly, and is
a nice little command center where I can view how seafile is configured on each
individual system.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Select &lt;em&gt;which&lt;/em&gt; Libraries to sync&lt;/strong&gt; - Seafile libraries allow me to sync only
what I need. Nextcloud had this feature, but it was implemented a little differently. I
had to go to the &lt;code&gt;Nextcloud&lt;/code&gt; folder in the client UI, and then check/uncheck all
of the sub-folders I wanted to sync on my machine.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Pick &lt;em&gt;where each&lt;/em&gt; libraries sync&lt;/strong&gt; - Even better than being able to pick
&lt;em&gt;which&lt;/em&gt; libraries to sync, is having the power to choose &lt;em&gt;where&lt;/em&gt; each one will
reside. In seafile, the location of each library is completely independent.
For example, I can sync my &lt;code&gt;work&lt;/code&gt; library to &lt;code&gt;~/Documents/Work/&lt;/code&gt;, my &lt;code&gt;Music&lt;/code&gt;
to &lt;code&gt;~/Music&lt;/code&gt;, and &lt;code&gt;emacs&lt;/code&gt; to
&lt;code&gt;~/Documents/Programming/Editors/why/so/many/diectories/emacs/&lt;/code&gt;. On another
computer, I may choose to only sync my &lt;code&gt;work&lt;/code&gt; library to &lt;code&gt;~/Desktop/work&lt;/code&gt; (It
doesn&amp;rsquo;t have to be the same across computers). I love this. It lets seafile &lt;em&gt;integrate&lt;/em&gt; with my
workflow, rather than forcing me to make &lt;em&gt;it be&lt;/em&gt; my workflow.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Encrypted Libraries&lt;/strong&gt; - When creating a new library, it is possible to
make an encrypted one. These libraries use client-side, end-to-end encryption
and require a password. The file &lt;em&gt;contents&lt;/em&gt; (Note: not directory or file
&lt;em&gt;names&lt;/em&gt;) are encrypted on the client side, and not on the server. This means
that even the server admin cannot access the file contents on the server.
This is a feature I&amp;rsquo;d like to see in more applications.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&#34;../../img/posts/trying-out-seafile/encrypt-library.png&#34;&gt;&lt;img
src=&#34;../../img/posts/trying-out-seafile/encrypt-library.png&#34; style=&#34;max-width:
100%; align: center; float: center; margin: 0px 0px 0px 0px;&#34; alt=&#34;Docker ps&#34; /&gt;&lt;/a&gt;
&lt;div class=&#34;caption&#34;&gt;When syncing an encrypted library, a password must be entered.&lt;/div&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Fast Sync&lt;/strong&gt; - I only have anecdotal evidence, but the syncing in seafile
&lt;em&gt;feels fast&lt;/em&gt;. Files seem to pull down very quickly, and setting up my
libraries on a new device doesn&amp;rsquo;t take a very long time. I might have to
actually &lt;em&gt;measure&lt;/em&gt; if it&amp;rsquo;s any better than something like nextcloud, but if I&amp;rsquo;m
happy&amp;hellip; does it really &lt;em&gt;matter&lt;/em&gt;?&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;what-i-don-t-like&#34;&gt;What I Don&amp;rsquo;t Like&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;No Folders/Nested libraries&lt;/strong&gt; - As far as I can tell, I don&amp;rsquo;t think it is
possible to organize seafile libraries with folders, or a nested library
structure. Admittedly, this is one of those areas that I haven&amp;rsquo;t had to look
too much into yet. However, as I start to increase my seafile usage and the
number of my libraries increases, I could see this being a feature I&amp;rsquo;d really
enjoy.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Phone Sync Tricky&lt;/strong&gt; - The phone sync (specifically auto photo upload) was
tricky to get working at first. After setting it up, it didn&amp;rsquo;t seem to work,
or at least not as promptly as nextcloud does. I took a few photos to test it
out today, it seemed to work &lt;em&gt;okay&lt;/em&gt;, but I don&amp;rsquo;t think it started syncing
right away. Right now, I don&amp;rsquo;t 100% trust it to work without me thinking
about it. Hopefully this improves with time.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;future-plans&#34;&gt;Future Plans&lt;/h3&gt;

&lt;p&gt;To summarize, I have been loving seafile, and I think I have only scratched the
surface. I haven&amp;rsquo;t even tried playing with features like History and Snapshots,
Full Text File Search, or yet. My plan is to continue experimenting a bit more,
and then switch to it as my main syncing system when I redo my main server
setup in a couple of weeks. If you haven&amp;rsquo;t given seafile a try recently, I
recommend it.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
